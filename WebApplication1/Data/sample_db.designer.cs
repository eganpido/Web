#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="fmis_gmi")]
	public partial class sample_dbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMstAccount(MstAccount instance);
    partial void UpdateMstAccount(MstAccount instance);
    partial void DeleteMstAccount(MstAccount instance);
    partial void InsertTrnStockTransferItem(TrnStockTransferItem instance);
    partial void UpdateTrnStockTransferItem(TrnStockTransferItem instance);
    partial void DeleteTrnStockTransferItem(TrnStockTransferItem instance);
    partial void InsertMstAccountArticleType(MstAccountArticleType instance);
    partial void UpdateMstAccountArticleType(MstAccountArticleType instance);
    partial void DeleteMstAccountArticleType(MstAccountArticleType instance);
    partial void InsertMstAccountCashFlow(MstAccountCashFlow instance);
    partial void UpdateMstAccountCashFlow(MstAccountCashFlow instance);
    partial void DeleteMstAccountCashFlow(MstAccountCashFlow instance);
    partial void InsertMstAccountCategory(MstAccountCategory instance);
    partial void UpdateMstAccountCategory(MstAccountCategory instance);
    partial void DeleteMstAccountCategory(MstAccountCategory instance);
    partial void InsertMstAccountType(MstAccountType instance);
    partial void UpdateMstAccountType(MstAccountType instance);
    partial void DeleteMstAccountType(MstAccountType instance);
    partial void InsertMstArticle(MstArticle instance);
    partial void UpdateMstArticle(MstArticle instance);
    partial void DeleteMstArticle(MstArticle instance);
    partial void InsertMstArticleComponent(MstArticleComponent instance);
    partial void UpdateMstArticleComponent(MstArticleComponent instance);
    partial void DeleteMstArticleComponent(MstArticleComponent instance);
    partial void InsertMstArticleContact(MstArticleContact instance);
    partial void UpdateMstArticleContact(MstArticleContact instance);
    partial void DeleteMstArticleContact(MstArticleContact instance);
    partial void InsertMstArticleGroup(MstArticleGroup instance);
    partial void UpdateMstArticleGroup(MstArticleGroup instance);
    partial void DeleteMstArticleGroup(MstArticleGroup instance);
    partial void InsertMstArticleInventory(MstArticleInventory instance);
    partial void UpdateMstArticleInventory(MstArticleInventory instance);
    partial void DeleteMstArticleInventory(MstArticleInventory instance);
    partial void InsertMstArticlePrice(MstArticlePrice instance);
    partial void UpdateMstArticlePrice(MstArticlePrice instance);
    partial void DeleteMstArticlePrice(MstArticlePrice instance);
    partial void InsertMstArticleType(MstArticleType instance);
    partial void UpdateMstArticleType(MstArticleType instance);
    partial void DeleteMstArticleType(MstArticleType instance);
    partial void InsertMstArticleUnit(MstArticleUnit instance);
    partial void UpdateMstArticleUnit(MstArticleUnit instance);
    partial void DeleteMstArticleUnit(MstArticleUnit instance);
    partial void InsertMstBranch(MstBranch instance);
    partial void UpdateMstBranch(MstBranch instance);
    partial void DeleteMstBranch(MstBranch instance);
    partial void InsertMstCompany(MstCompany instance);
    partial void UpdateMstCompany(MstCompany instance);
    partial void DeleteMstCompany(MstCompany instance);
    partial void InsertMstDiscount(MstDiscount instance);
    partial void UpdateMstDiscount(MstDiscount instance);
    partial void DeleteMstDiscount(MstDiscount instance);
    partial void InsertMstPayType(MstPayType instance);
    partial void UpdateMstPayType(MstPayType instance);
    partial void DeleteMstPayType(MstPayType instance);
    partial void InsertMstTaxType(MstTaxType instance);
    partial void UpdateMstTaxType(MstTaxType instance);
    partial void DeleteMstTaxType(MstTaxType instance);
    partial void InsertMstTerm(MstTerm instance);
    partial void UpdateMstTerm(MstTerm instance);
    partial void DeleteMstTerm(MstTerm instance);
    partial void InsertMstUnit(MstUnit instance);
    partial void UpdateMstUnit(MstUnit instance);
    partial void DeleteMstUnit(MstUnit instance);
    partial void InsertMstUser(MstUser instance);
    partial void UpdateMstUser(MstUser instance);
    partial void DeleteMstUser(MstUser instance);
    partial void InsertMstUserForm(MstUserForm instance);
    partial void UpdateMstUserForm(MstUserForm instance);
    partial void DeleteMstUserForm(MstUserForm instance);
    partial void InsertSysAuditTrail(SysAuditTrail instance);
    partial void UpdateSysAuditTrail(SysAuditTrail instance);
    partial void DeleteSysAuditTrail(SysAuditTrail instance);
    partial void InsertSysForm(SysForm instance);
    partial void UpdateSysForm(SysForm instance);
    partial void DeleteSysForm(SysForm instance);
    partial void InsertTrnCollection(TrnCollection instance);
    partial void UpdateTrnCollection(TrnCollection instance);
    partial void DeleteTrnCollection(TrnCollection instance);
    partial void InsertTrnCollectionLine(TrnCollectionLine instance);
    partial void UpdateTrnCollectionLine(TrnCollectionLine instance);
    partial void DeleteTrnCollectionLine(TrnCollectionLine instance);
    partial void InsertTrnDisbursement(TrnDisbursement instance);
    partial void UpdateTrnDisbursement(TrnDisbursement instance);
    partial void DeleteTrnDisbursement(TrnDisbursement instance);
    partial void InsertTrnDisbursementLine(TrnDisbursementLine instance);
    partial void UpdateTrnDisbursementLine(TrnDisbursementLine instance);
    partial void DeleteTrnDisbursementLine(TrnDisbursementLine instance);
    partial void InsertTrnInventory(TrnInventory instance);
    partial void UpdateTrnInventory(TrnInventory instance);
    partial void DeleteTrnInventory(TrnInventory instance);
    partial void InsertTrnJournal(TrnJournal instance);
    partial void UpdateTrnJournal(TrnJournal instance);
    partial void DeleteTrnJournal(TrnJournal instance);
    partial void InsertTrnJournalVoucher(TrnJournalVoucher instance);
    partial void UpdateTrnJournalVoucher(TrnJournalVoucher instance);
    partial void DeleteTrnJournalVoucher(TrnJournalVoucher instance);
    partial void InsertTrnJournalVoucherLine(TrnJournalVoucherLine instance);
    partial void UpdateTrnJournalVoucherLine(TrnJournalVoucherLine instance);
    partial void DeleteTrnJournalVoucherLine(TrnJournalVoucherLine instance);
    partial void InsertTrnPurchaseOrder(TrnPurchaseOrder instance);
    partial void UpdateTrnPurchaseOrder(TrnPurchaseOrder instance);
    partial void DeleteTrnPurchaseOrder(TrnPurchaseOrder instance);
    partial void InsertTrnPurchaseOrderItem(TrnPurchaseOrderItem instance);
    partial void UpdateTrnPurchaseOrderItem(TrnPurchaseOrderItem instance);
    partial void DeleteTrnPurchaseOrderItem(TrnPurchaseOrderItem instance);
    partial void InsertTrnReceivingReceipt(TrnReceivingReceipt instance);
    partial void UpdateTrnReceivingReceipt(TrnReceivingReceipt instance);
    partial void DeleteTrnReceivingReceipt(TrnReceivingReceipt instance);
    partial void InsertTrnReceivingReceiptItem(TrnReceivingReceiptItem instance);
    partial void UpdateTrnReceivingReceiptItem(TrnReceivingReceiptItem instance);
    partial void DeleteTrnReceivingReceiptItem(TrnReceivingReceiptItem instance);
    partial void InsertTrnSalesInvoice(TrnSalesInvoice instance);
    partial void UpdateTrnSalesInvoice(TrnSalesInvoice instance);
    partial void DeleteTrnSalesInvoice(TrnSalesInvoice instance);
    partial void InsertTrnSalesInvoiceItem(TrnSalesInvoiceItem instance);
    partial void UpdateTrnSalesInvoiceItem(TrnSalesInvoiceItem instance);
    partial void DeleteTrnSalesInvoiceItem(TrnSalesInvoiceItem instance);
    partial void InsertTrnStockCount(TrnStockCount instance);
    partial void UpdateTrnStockCount(TrnStockCount instance);
    partial void DeleteTrnStockCount(TrnStockCount instance);
    partial void InsertTrnStockCountItem(TrnStockCountItem instance);
    partial void UpdateTrnStockCountItem(TrnStockCountItem instance);
    partial void DeleteTrnStockCountItem(TrnStockCountItem instance);
    partial void InsertTrnStockIn(TrnStockIn instance);
    partial void UpdateTrnStockIn(TrnStockIn instance);
    partial void DeleteTrnStockIn(TrnStockIn instance);
    partial void InsertTrnStockInItem(TrnStockInItem instance);
    partial void UpdateTrnStockInItem(TrnStockInItem instance);
    partial void DeleteTrnStockInItem(TrnStockInItem instance);
    partial void InsertTrnStockOut(TrnStockOut instance);
    partial void UpdateTrnStockOut(TrnStockOut instance);
    partial void DeleteTrnStockOut(TrnStockOut instance);
    partial void InsertTrnStockOutItem(TrnStockOutItem instance);
    partial void UpdateTrnStockOutItem(TrnStockOutItem instance);
    partial void DeleteTrnStockOutItem(TrnStockOutItem instance);
    partial void InsertTrnStockTransfer(TrnStockTransfer instance);
    partial void UpdateTrnStockTransfer(TrnStockTransfer instance);
    partial void DeleteTrnStockTransfer(TrnStockTransfer instance);
    #endregion
		
		public sample_dbDataContext() :
        base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public sample_dbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sample_dbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sample_dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sample_dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MstAccount> MstAccounts
		{
			get
			{
				return this.GetTable<MstAccount>();
			}
		}
		
		public System.Data.Linq.Table<TrnStockTransferItem> TrnStockTransferItems
		{
			get
			{
				return this.GetTable<TrnStockTransferItem>();
			}
		}
		
		public System.Data.Linq.Table<MstAccountArticleType> MstAccountArticleTypes
		{
			get
			{
				return this.GetTable<MstAccountArticleType>();
			}
		}
		
		public System.Data.Linq.Table<MstAccountCashFlow> MstAccountCashFlows
		{
			get
			{
				return this.GetTable<MstAccountCashFlow>();
			}
		}
		
		public System.Data.Linq.Table<MstAccountCategory> MstAccountCategories
		{
			get
			{
				return this.GetTable<MstAccountCategory>();
			}
		}
		
		public System.Data.Linq.Table<MstAccountType> MstAccountTypes
		{
			get
			{
				return this.GetTable<MstAccountType>();
			}
		}
		
		public System.Data.Linq.Table<MstArticle> MstArticles
		{
			get
			{
				return this.GetTable<MstArticle>();
			}
		}
		
		public System.Data.Linq.Table<MstArticleComponent> MstArticleComponents
		{
			get
			{
				return this.GetTable<MstArticleComponent>();
			}
		}
		
		public System.Data.Linq.Table<MstArticleContact> MstArticleContacts
		{
			get
			{
				return this.GetTable<MstArticleContact>();
			}
		}
		
		public System.Data.Linq.Table<MstArticleGroup> MstArticleGroups
		{
			get
			{
				return this.GetTable<MstArticleGroup>();
			}
		}
		
		public System.Data.Linq.Table<MstArticleInventory> MstArticleInventories
		{
			get
			{
				return this.GetTable<MstArticleInventory>();
			}
		}
		
		public System.Data.Linq.Table<MstArticlePrice> MstArticlePrices
		{
			get
			{
				return this.GetTable<MstArticlePrice>();
			}
		}
		
		public System.Data.Linq.Table<MstArticleType> MstArticleTypes
		{
			get
			{
				return this.GetTable<MstArticleType>();
			}
		}
		
		public System.Data.Linq.Table<MstArticleUnit> MstArticleUnits
		{
			get
			{
				return this.GetTable<MstArticleUnit>();
			}
		}
		
		public System.Data.Linq.Table<MstBranch> MstBranches
		{
			get
			{
				return this.GetTable<MstBranch>();
			}
		}
		
		public System.Data.Linq.Table<MstCompany> MstCompanies
		{
			get
			{
				return this.GetTable<MstCompany>();
			}
		}
		
		public System.Data.Linq.Table<MstDiscount> MstDiscounts
		{
			get
			{
				return this.GetTable<MstDiscount>();
			}
		}
		
		public System.Data.Linq.Table<MstPayType> MstPayTypes
		{
			get
			{
				return this.GetTable<MstPayType>();
			}
		}
		
		public System.Data.Linq.Table<MstTaxType> MstTaxTypes
		{
			get
			{
				return this.GetTable<MstTaxType>();
			}
		}
		
		public System.Data.Linq.Table<MstTerm> MstTerms
		{
			get
			{
				return this.GetTable<MstTerm>();
			}
		}
		
		public System.Data.Linq.Table<MstUnit> MstUnits
		{
			get
			{
				return this.GetTable<MstUnit>();
			}
		}
		
		public System.Data.Linq.Table<MstUser> MstUsers
		{
			get
			{
				return this.GetTable<MstUser>();
			}
		}
		
		public System.Data.Linq.Table<MstUserForm> MstUserForms
		{
			get
			{
				return this.GetTable<MstUserForm>();
			}
		}
		
		public System.Data.Linq.Table<Sheet3_> Sheet3_s
		{
			get
			{
				return this.GetTable<Sheet3_>();
			}
		}
		
		public System.Data.Linq.Table<SysAuditTrail> SysAuditTrails
		{
			get
			{
				return this.GetTable<SysAuditTrail>();
			}
		}
		
		public System.Data.Linq.Table<SysForm> SysForms
		{
			get
			{
				return this.GetTable<SysForm>();
			}
		}
		
		public System.Data.Linq.Table<TrnCollection> TrnCollections
		{
			get
			{
				return this.GetTable<TrnCollection>();
			}
		}
		
		public System.Data.Linq.Table<TrnCollectionLine> TrnCollectionLines
		{
			get
			{
				return this.GetTable<TrnCollectionLine>();
			}
		}
		
		public System.Data.Linq.Table<TrnDisbursement> TrnDisbursements
		{
			get
			{
				return this.GetTable<TrnDisbursement>();
			}
		}
		
		public System.Data.Linq.Table<TrnDisbursementLine> TrnDisbursementLines
		{
			get
			{
				return this.GetTable<TrnDisbursementLine>();
			}
		}
		
		public System.Data.Linq.Table<TrnInventory> TrnInventories
		{
			get
			{
				return this.GetTable<TrnInventory>();
			}
		}
		
		public System.Data.Linq.Table<TrnJournal> TrnJournals
		{
			get
			{
				return this.GetTable<TrnJournal>();
			}
		}
		
		public System.Data.Linq.Table<TrnJournalVoucher> TrnJournalVouchers
		{
			get
			{
				return this.GetTable<TrnJournalVoucher>();
			}
		}
		
		public System.Data.Linq.Table<TrnJournalVoucherLine> TrnJournalVoucherLines
		{
			get
			{
				return this.GetTable<TrnJournalVoucherLine>();
			}
		}
		
		public System.Data.Linq.Table<TrnPurchaseOrder> TrnPurchaseOrders
		{
			get
			{
				return this.GetTable<TrnPurchaseOrder>();
			}
		}
		
		public System.Data.Linq.Table<TrnPurchaseOrderItem> TrnPurchaseOrderItems
		{
			get
			{
				return this.GetTable<TrnPurchaseOrderItem>();
			}
		}
		
		public System.Data.Linq.Table<TrnReceivingReceipt> TrnReceivingReceipts
		{
			get
			{
				return this.GetTable<TrnReceivingReceipt>();
			}
		}
		
		public System.Data.Linq.Table<TrnReceivingReceiptItem> TrnReceivingReceiptItems
		{
			get
			{
				return this.GetTable<TrnReceivingReceiptItem>();
			}
		}
		
		public System.Data.Linq.Table<TrnSalesInvoice> TrnSalesInvoices
		{
			get
			{
				return this.GetTable<TrnSalesInvoice>();
			}
		}
		
		public System.Data.Linq.Table<TrnSalesInvoiceItem> TrnSalesInvoiceItems
		{
			get
			{
				return this.GetTable<TrnSalesInvoiceItem>();
			}
		}
		
		public System.Data.Linq.Table<TrnStockCount> TrnStockCounts
		{
			get
			{
				return this.GetTable<TrnStockCount>();
			}
		}
		
		public System.Data.Linq.Table<TrnStockCountItem> TrnStockCountItems
		{
			get
			{
				return this.GetTable<TrnStockCountItem>();
			}
		}
		
		public System.Data.Linq.Table<TrnStockIn> TrnStockIns
		{
			get
			{
				return this.GetTable<TrnStockIn>();
			}
		}
		
		public System.Data.Linq.Table<TrnStockInItem> TrnStockInItems
		{
			get
			{
				return this.GetTable<TrnStockInItem>();
			}
		}
		
		public System.Data.Linq.Table<TrnStockOut> TrnStockOuts
		{
			get
			{
				return this.GetTable<TrnStockOut>();
			}
		}
		
		public System.Data.Linq.Table<TrnStockOutItem> TrnStockOutItems
		{
			get
			{
				return this.GetTable<TrnStockOutItem>();
			}
		}
		
		public System.Data.Linq.Table<TrnStockTransfer> TrnStockTransfers
		{
			get
			{
				return this.GetTable<TrnStockTransfer>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstAccount")]
	public partial class MstAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _AccountCode;
		
		private string _Account;
		
		private int _AccountTypeId;
		
		private System.Nullable<int> _AccountCashFlowId;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntityRef<MstAccount> _MstAccount2;
		
		private EntitySet<MstAccountArticleType> _MstAccountArticleTypes;
		
		private EntitySet<MstArticle> _MstArticles;
		
		private EntitySet<MstArticle> _MstArticles1;
		
		private EntitySet<MstArticle> _MstArticles2;
		
		private EntitySet<MstArticle> _MstArticles3;
		
		private EntitySet<MstDiscount> _MstDiscounts;
		
		private EntitySet<MstPayType> _MstPayTypes;
		
		private EntitySet<MstTaxType> _MstTaxTypes;
		
		private EntitySet<TrnCollectionLine> _TrnCollectionLines;
		
		private EntitySet<TrnDisbursementLine> _TrnDisbursementLines;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntitySet<TrnJournalVoucherLine> _TrnJournalVoucherLines;
		
		private EntitySet<TrnStockIn> _TrnStockIns;
		
		private EntitySet<TrnStockOut> _TrnStockOuts;
		
		private EntitySet<TrnStockOutItem> _TrnStockOutItems;
		
		private EntityRef<MstAccount> _MstAccount1;
		
		private EntityRef<MstAccountCashFlow> _MstAccountCashFlow;
		
		private EntityRef<MstAccountType> _MstAccountType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAccountCodeChanging(string value);
    partial void OnAccountCodeChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnAccountTypeIdChanging(int value);
    partial void OnAccountTypeIdChanged();
    partial void OnAccountCashFlowIdChanging(System.Nullable<int> value);
    partial void OnAccountCashFlowIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstAccount()
		{
			this._MstAccount2 = default(EntityRef<MstAccount>);
			this._MstAccountArticleTypes = new EntitySet<MstAccountArticleType>(new Action<MstAccountArticleType>(this.attach_MstAccountArticleTypes), new Action<MstAccountArticleType>(this.detach_MstAccountArticleTypes));
			this._MstArticles = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles), new Action<MstArticle>(this.detach_MstArticles));
			this._MstArticles1 = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles1), new Action<MstArticle>(this.detach_MstArticles1));
			this._MstArticles2 = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles2), new Action<MstArticle>(this.detach_MstArticles2));
			this._MstArticles3 = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles3), new Action<MstArticle>(this.detach_MstArticles3));
			this._MstDiscounts = new EntitySet<MstDiscount>(new Action<MstDiscount>(this.attach_MstDiscounts), new Action<MstDiscount>(this.detach_MstDiscounts));
			this._MstPayTypes = new EntitySet<MstPayType>(new Action<MstPayType>(this.attach_MstPayTypes), new Action<MstPayType>(this.detach_MstPayTypes));
			this._MstTaxTypes = new EntitySet<MstTaxType>(new Action<MstTaxType>(this.attach_MstTaxTypes), new Action<MstTaxType>(this.detach_MstTaxTypes));
			this._TrnCollectionLines = new EntitySet<TrnCollectionLine>(new Action<TrnCollectionLine>(this.attach_TrnCollectionLines), new Action<TrnCollectionLine>(this.detach_TrnCollectionLines));
			this._TrnDisbursementLines = new EntitySet<TrnDisbursementLine>(new Action<TrnDisbursementLine>(this.attach_TrnDisbursementLines), new Action<TrnDisbursementLine>(this.detach_TrnDisbursementLines));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._TrnJournalVoucherLines = new EntitySet<TrnJournalVoucherLine>(new Action<TrnJournalVoucherLine>(this.attach_TrnJournalVoucherLines), new Action<TrnJournalVoucherLine>(this.detach_TrnJournalVoucherLines));
			this._TrnStockIns = new EntitySet<TrnStockIn>(new Action<TrnStockIn>(this.attach_TrnStockIns), new Action<TrnStockIn>(this.detach_TrnStockIns));
			this._TrnStockOuts = new EntitySet<TrnStockOut>(new Action<TrnStockOut>(this.attach_TrnStockOuts), new Action<TrnStockOut>(this.detach_TrnStockOuts));
			this._TrnStockOutItems = new EntitySet<TrnStockOutItem>(new Action<TrnStockOutItem>(this.attach_TrnStockOutItems), new Action<TrnStockOutItem>(this.detach_TrnStockOutItems));
			this._MstAccount1 = default(EntityRef<MstAccount>);
			this._MstAccountCashFlow = default(EntityRef<MstAccountCashFlow>);
			this._MstAccountType = default(EntityRef<MstAccountType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._MstAccount1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountCode
		{
			get
			{
				return this._AccountCode;
			}
			set
			{
				if ((this._AccountCode != value))
				{
					this.OnAccountCodeChanging(value);
					this.SendPropertyChanging();
					this._AccountCode = value;
					this.SendPropertyChanged("AccountCode");
					this.OnAccountCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountTypeId", DbType="Int NOT NULL")]
		public int AccountTypeId
		{
			get
			{
				return this._AccountTypeId;
			}
			set
			{
				if ((this._AccountTypeId != value))
				{
					if (this._MstAccountType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountTypeIdChanging(value);
					this.SendPropertyChanging();
					this._AccountTypeId = value;
					this.SendPropertyChanged("AccountTypeId");
					this.OnAccountTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCashFlowId", DbType="Int")]
		public System.Nullable<int> AccountCashFlowId
		{
			get
			{
				return this._AccountCashFlowId;
			}
			set
			{
				if ((this._AccountCashFlowId != value))
				{
					if (this._MstAccountCashFlow.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountCashFlowIdChanging(value);
					this.SendPropertyChanging();
					this._AccountCashFlowId = value;
					this.SendPropertyChanged("AccountCashFlowId");
					this.OnAccountCashFlowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstAccount", Storage="_MstAccount2", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public MstAccount MstAccount2
		{
			get
			{
				return this._MstAccount2.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount2.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount2.Entity = null;
						previousValue.MstAccount1 = null;
					}
					this._MstAccount2.Entity = value;
					if ((value != null))
					{
						value.MstAccount1 = this;
					}
					this.SendPropertyChanged("MstAccount2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstAccountArticleType", Storage="_MstAccountArticleTypes", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<MstAccountArticleType> MstAccountArticleTypes
		{
			get
			{
				return this._MstAccountArticleTypes;
			}
			set
			{
				this._MstAccountArticleTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticle", Storage="_MstArticles", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<MstArticle> MstArticles
		{
			get
			{
				return this._MstArticles;
			}
			set
			{
				this._MstArticles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticle1", Storage="_MstArticles1", ThisKey="Id", OtherKey="SalesAccountId")]
		public EntitySet<MstArticle> MstArticles1
		{
			get
			{
				return this._MstArticles1;
			}
			set
			{
				this._MstArticles1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticle2", Storage="_MstArticles2", ThisKey="Id", OtherKey="CostAccountId")]
		public EntitySet<MstArticle> MstArticles2
		{
			get
			{
				return this._MstArticles2;
			}
			set
			{
				this._MstArticles2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticle3", Storage="_MstArticles3", ThisKey="Id", OtherKey="AssetAccountId")]
		public EntitySet<MstArticle> MstArticles3
		{
			get
			{
				return this._MstArticles3;
			}
			set
			{
				this._MstArticles3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstDiscount", Storage="_MstDiscounts", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<MstDiscount> MstDiscounts
		{
			get
			{
				return this._MstDiscounts;
			}
			set
			{
				this._MstDiscounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstPayType", Storage="_MstPayTypes", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<MstPayType> MstPayTypes
		{
			get
			{
				return this._MstPayTypes;
			}
			set
			{
				this._MstPayTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstTaxType", Storage="_MstTaxTypes", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<MstTaxType> MstTaxTypes
		{
			get
			{
				return this._MstTaxTypes;
			}
			set
			{
				this._MstTaxTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnCollectionLine", Storage="_TrnCollectionLines", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<TrnCollectionLine> TrnCollectionLines
		{
			get
			{
				return this._TrnCollectionLines;
			}
			set
			{
				this._TrnCollectionLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnDisbursementLine", Storage="_TrnDisbursementLines", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<TrnDisbursementLine> TrnDisbursementLines
		{
			get
			{
				return this._TrnDisbursementLines;
			}
			set
			{
				this._TrnDisbursementLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnJournalVoucherLine", Storage="_TrnJournalVoucherLines", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<TrnJournalVoucherLine> TrnJournalVoucherLines
		{
			get
			{
				return this._TrnJournalVoucherLines;
			}
			set
			{
				this._TrnJournalVoucherLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnStockIn", Storage="_TrnStockIns", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<TrnStockIn> TrnStockIns
		{
			get
			{
				return this._TrnStockIns;
			}
			set
			{
				this._TrnStockIns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnStockOut", Storage="_TrnStockOuts", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<TrnStockOut> TrnStockOuts
		{
			get
			{
				return this._TrnStockOuts;
			}
			set
			{
				this._TrnStockOuts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnStockOutItem", Storage="_TrnStockOutItems", ThisKey="Id", OtherKey="ExpenseAccountId")]
		public EntitySet<TrnStockOutItem> TrnStockOutItems
		{
			get
			{
				return this._TrnStockOutItems;
			}
			set
			{
				this._TrnStockOutItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstAccount", Storage="_MstAccount1", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount1
		{
			get
			{
				return this._MstAccount1.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount1.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount1.Entity = null;
						previousValue.MstAccount2 = null;
					}
					this._MstAccount1.Entity = value;
					if ((value != null))
					{
						value.MstAccount2 = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("MstAccount1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccountCashFlow_MstAccount", Storage="_MstAccountCashFlow", ThisKey="AccountCashFlowId", OtherKey="Id", IsForeignKey=true)]
		public MstAccountCashFlow MstAccountCashFlow
		{
			get
			{
				return this._MstAccountCashFlow.Entity;
			}
			set
			{
				MstAccountCashFlow previousValue = this._MstAccountCashFlow.Entity;
				if (((previousValue != value) 
							|| (this._MstAccountCashFlow.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccountCashFlow.Entity = null;
						previousValue.MstAccounts.Remove(this);
					}
					this._MstAccountCashFlow.Entity = value;
					if ((value != null))
					{
						value.MstAccounts.Add(this);
						this._AccountCashFlowId = value.Id;
					}
					else
					{
						this._AccountCashFlowId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstAccountCashFlow");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccountType_MstAccount", Storage="_MstAccountType", ThisKey="AccountTypeId", OtherKey="Id", IsForeignKey=true)]
		public MstAccountType MstAccountType
		{
			get
			{
				return this._MstAccountType.Entity;
			}
			set
			{
				MstAccountType previousValue = this._MstAccountType.Entity;
				if (((previousValue != value) 
							|| (this._MstAccountType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccountType.Entity = null;
						previousValue.MstAccounts.Remove(this);
					}
					this._MstAccountType.Entity = value;
					if ((value != null))
					{
						value.MstAccounts.Add(this);
						this._AccountTypeId = value.Id;
					}
					else
					{
						this._AccountTypeId = default(int);
					}
					this.SendPropertyChanged("MstAccountType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstAccountArticleTypes(MstAccountArticleType entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_MstAccountArticleTypes(MstAccountArticleType entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_MstArticles1(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount1 = this;
		}
		
		private void detach_MstArticles1(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount1 = null;
		}
		
		private void attach_MstArticles2(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount2 = this;
		}
		
		private void detach_MstArticles2(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount2 = null;
		}
		
		private void attach_MstArticles3(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount3 = this;
		}
		
		private void detach_MstArticles3(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount3 = null;
		}
		
		private void attach_MstDiscounts(MstDiscount entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_MstDiscounts(MstDiscount entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_MstPayTypes(MstPayType entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_MstPayTypes(MstPayType entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_MstTaxTypes(MstTaxType entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_MstTaxTypes(MstTaxType entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_TrnDisbursementLines(TrnDisbursementLine entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_TrnDisbursementLines(TrnDisbursementLine entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_TrnJournalVoucherLines(TrnJournalVoucherLine entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_TrnJournalVoucherLines(TrnJournalVoucherLine entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_TrnStockIns(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_TrnStockIns(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_TrnStockOuts(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_TrnStockOuts(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_TrnStockOutItems(TrnStockOutItem entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_TrnStockOutItems(TrnStockOutItem entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStockTransferItem")]
	public partial class TrnStockTransferItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _STId;
		
		private int _ItemId;
		
		private int _ItemInventoryId;
		
		private string _Particulars;
		
		private int _UnitId;
		
		private decimal _Quantity;
		
		private decimal _Cost;
		
		private decimal _Amount;
		
		private int _BaseUnitId;
		
		private decimal _BaseQuantity;
		
		private decimal _BaseCost;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstArticleInventory> _MstArticleInventory;
		
		private EntityRef<MstUnit> _MstUnit;
		
		private EntityRef<MstUnit> _MstUnit1;
		
		private EntityRef<TrnStockTransfer> _TrnStockTransfer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSTIdChanging(int value);
    partial void OnSTIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnItemInventoryIdChanging(int value);
    partial void OnItemInventoryIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnBaseUnitIdChanging(int value);
    partial void OnBaseUnitIdChanged();
    partial void OnBaseQuantityChanging(decimal value);
    partial void OnBaseQuantityChanged();
    partial void OnBaseCostChanging(decimal value);
    partial void OnBaseCostChanged();
    #endregion
		
		public TrnStockTransferItem()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstArticleInventory = default(EntityRef<MstArticleInventory>);
			this._MstUnit = default(EntityRef<MstUnit>);
			this._MstUnit1 = default(EntityRef<MstUnit>);
			this._TrnStockTransfer = default(EntityRef<TrnStockTransfer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STId", DbType="Int NOT NULL")]
		public int STId
		{
			get
			{
				return this._STId;
			}
			set
			{
				if ((this._STId != value))
				{
					if (this._TrnStockTransfer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTIdChanging(value);
					this.SendPropertyChanging();
					this._STId = value;
					this.SendPropertyChanged("STId");
					this.OnSTIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemInventoryId", DbType="Int NOT NULL")]
		public int ItemInventoryId
		{
			get
			{
				return this._ItemInventoryId;
			}
			set
			{
				if ((this._ItemInventoryId != value))
				{
					if (this._MstArticleInventory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemInventoryIdChanging(value);
					this.SendPropertyChanging();
					this._ItemInventoryId = value;
					this.SendPropertyChanged("ItemInventoryId");
					this.OnItemInventoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseUnitId", DbType="Int NOT NULL")]
		public int BaseUnitId
		{
			get
			{
				return this._BaseUnitId;
			}
			set
			{
				if ((this._BaseUnitId != value))
				{
					if (this._MstUnit1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBaseUnitIdChanging(value);
					this.SendPropertyChanging();
					this._BaseUnitId = value;
					this.SendPropertyChanged("BaseUnitId");
					this.OnBaseUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseQuantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal BaseQuantity
		{
			get
			{
				return this._BaseQuantity;
			}
			set
			{
				if ((this._BaseQuantity != value))
				{
					this.OnBaseQuantityChanging(value);
					this.SendPropertyChanging();
					this._BaseQuantity = value;
					this.SendPropertyChanged("BaseQuantity");
					this.OnBaseQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseCost", DbType="Decimal(18,5) NOT NULL")]
		public decimal BaseCost
		{
			get
			{
				return this._BaseCost;
			}
			set
			{
				if ((this._BaseCost != value))
				{
					this.OnBaseCostChanging(value);
					this.SendPropertyChanging();
					this._BaseCost = value;
					this.SendPropertyChanged("BaseCost");
					this.OnBaseCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnStockTransferItem", Storage="_MstArticle", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnStockTransferItems.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransferItems.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleInventory_TrnStockTransferItem", Storage="_MstArticleInventory", ThisKey="ItemInventoryId", OtherKey="Id", IsForeignKey=true)]
		public MstArticleInventory MstArticleInventory
		{
			get
			{
				return this._MstArticleInventory.Entity;
			}
			set
			{
				MstArticleInventory previousValue = this._MstArticleInventory.Entity;
				if (((previousValue != value) 
							|| (this._MstArticleInventory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticleInventory.Entity = null;
						previousValue.TrnStockTransferItems.Remove(this);
					}
					this._MstArticleInventory.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransferItems.Add(this);
						this._ItemInventoryId = value.Id;
					}
					else
					{
						this._ItemInventoryId = default(int);
					}
					this.SendPropertyChanged("MstArticleInventory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockTransferItem", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.TrnStockTransferItems.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransferItems.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockTransferItem1", Storage="_MstUnit1", ThisKey="BaseUnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit1
		{
			get
			{
				return this._MstUnit1.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit1.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit1.Entity = null;
						previousValue.TrnStockTransferItems1.Remove(this);
					}
					this._MstUnit1.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransferItems1.Add(this);
						this._BaseUnitId = value.Id;
					}
					else
					{
						this._BaseUnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockTransfer_TrnStockTransferItem", Storage="_TrnStockTransfer", ThisKey="STId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnStockTransfer TrnStockTransfer
		{
			get
			{
				return this._TrnStockTransfer.Entity;
			}
			set
			{
				TrnStockTransfer previousValue = this._TrnStockTransfer.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockTransfer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockTransfer.Entity = null;
						previousValue.TrnStockTransferItems.Remove(this);
					}
					this._TrnStockTransfer.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransferItems.Add(this);
						this._STId = value.Id;
					}
					else
					{
						this._STId = default(int);
					}
					this.SendPropertyChanged("TrnStockTransfer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstAccountArticleType")]
	public partial class MstAccountArticleType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _AccountId;
		
		private int _ArticleTypeId;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstArticleType> _MstArticleType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnArticleTypeIdChanging(int value);
    partial void OnArticleTypeIdChanged();
    #endregion
		
		public MstAccountArticleType()
		{
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstArticleType = default(EntityRef<MstArticleType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleTypeId", DbType="Int NOT NULL")]
		public int ArticleTypeId
		{
			get
			{
				return this._ArticleTypeId;
			}
			set
			{
				if ((this._ArticleTypeId != value))
				{
					if (this._MstArticleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleTypeId = value;
					this.SendPropertyChanged("ArticleTypeId");
					this.OnArticleTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstAccountArticleType", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.MstAccountArticleTypes.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.MstAccountArticleTypes.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleType_MstAccountArticleType", Storage="_MstArticleType", ThisKey="ArticleTypeId", OtherKey="Id", IsForeignKey=true)]
		public MstArticleType MstArticleType
		{
			get
			{
				return this._MstArticleType.Entity;
			}
			set
			{
				MstArticleType previousValue = this._MstArticleType.Entity;
				if (((previousValue != value) 
							|| (this._MstArticleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticleType.Entity = null;
						previousValue.MstAccountArticleTypes.Remove(this);
					}
					this._MstArticleType.Entity = value;
					if ((value != null))
					{
						value.MstAccountArticleTypes.Add(this);
						this._ArticleTypeId = value.Id;
					}
					else
					{
						this._ArticleTypeId = default(int);
					}
					this.SendPropertyChanged("MstArticleType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstAccountCashFlow")]
	public partial class MstAccountCashFlow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _AccountCashFlowCode;
		
		private string _AccountCashFlow;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstAccount> _MstAccounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAccountCashFlowCodeChanging(string value);
    partial void OnAccountCashFlowCodeChanged();
    partial void OnAccountCashFlowChanging(string value);
    partial void OnAccountCashFlowChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstAccountCashFlow()
		{
			this._MstAccounts = new EntitySet<MstAccount>(new Action<MstAccount>(this.attach_MstAccounts), new Action<MstAccount>(this.detach_MstAccounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCashFlowCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountCashFlowCode
		{
			get
			{
				return this._AccountCashFlowCode;
			}
			set
			{
				if ((this._AccountCashFlowCode != value))
				{
					this.OnAccountCashFlowCodeChanging(value);
					this.SendPropertyChanging();
					this._AccountCashFlowCode = value;
					this.SendPropertyChanged("AccountCashFlowCode");
					this.OnAccountCashFlowCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCashFlow", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AccountCashFlow
		{
			get
			{
				return this._AccountCashFlow;
			}
			set
			{
				if ((this._AccountCashFlow != value))
				{
					this.OnAccountCashFlowChanging(value);
					this.SendPropertyChanging();
					this._AccountCashFlow = value;
					this.SendPropertyChanged("AccountCashFlow");
					this.OnAccountCashFlowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccountCashFlow_MstAccount", Storage="_MstAccounts", ThisKey="Id", OtherKey="AccountCashFlowId")]
		public EntitySet<MstAccount> MstAccounts
		{
			get
			{
				return this._MstAccounts;
			}
			set
			{
				this._MstAccounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstAccounts(MstAccount entity)
		{
			this.SendPropertyChanging();
			entity.MstAccountCashFlow = this;
		}
		
		private void detach_MstAccounts(MstAccount entity)
		{
			this.SendPropertyChanging();
			entity.MstAccountCashFlow = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstAccountCategory")]
	public partial class MstAccountCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _AccountCategoryCode;
		
		private string _AccountCategory;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstAccountType> _MstAccountTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAccountCategoryCodeChanging(string value);
    partial void OnAccountCategoryCodeChanged();
    partial void OnAccountCategoryChanging(string value);
    partial void OnAccountCategoryChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstAccountCategory()
		{
			this._MstAccountTypes = new EntitySet<MstAccountType>(new Action<MstAccountType>(this.attach_MstAccountTypes), new Action<MstAccountType>(this.detach_MstAccountTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCategoryCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountCategoryCode
		{
			get
			{
				return this._AccountCategoryCode;
			}
			set
			{
				if ((this._AccountCategoryCode != value))
				{
					this.OnAccountCategoryCodeChanging(value);
					this.SendPropertyChanging();
					this._AccountCategoryCode = value;
					this.SendPropertyChanged("AccountCategoryCode");
					this.OnAccountCategoryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCategory", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AccountCategory
		{
			get
			{
				return this._AccountCategory;
			}
			set
			{
				if ((this._AccountCategory != value))
				{
					this.OnAccountCategoryChanging(value);
					this.SendPropertyChanging();
					this._AccountCategory = value;
					this.SendPropertyChanged("AccountCategory");
					this.OnAccountCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccountCategory_MstAccountType", Storage="_MstAccountTypes", ThisKey="Id", OtherKey="AccountCategoryId")]
		public EntitySet<MstAccountType> MstAccountTypes
		{
			get
			{
				return this._MstAccountTypes;
			}
			set
			{
				this._MstAccountTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstAccountTypes(MstAccountType entity)
		{
			this.SendPropertyChanging();
			entity.MstAccountCategory = this;
		}
		
		private void detach_MstAccountTypes(MstAccountType entity)
		{
			this.SendPropertyChanging();
			entity.MstAccountCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstAccountType")]
	public partial class MstAccountType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _AccountTypeCode;
		
		private string _AccountType;
		
		private int _AccountCategoryId;
		
		private string _SubCategoryDescription;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstAccount> _MstAccounts;
		
		private EntityRef<MstAccountCategory> _MstAccountCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAccountTypeCodeChanging(string value);
    partial void OnAccountTypeCodeChanged();
    partial void OnAccountTypeChanging(string value);
    partial void OnAccountTypeChanged();
    partial void OnAccountCategoryIdChanging(int value);
    partial void OnAccountCategoryIdChanged();
    partial void OnSubCategoryDescriptionChanging(string value);
    partial void OnSubCategoryDescriptionChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstAccountType()
		{
			this._MstAccounts = new EntitySet<MstAccount>(new Action<MstAccount>(this.attach_MstAccounts), new Action<MstAccount>(this.detach_MstAccounts));
			this._MstAccountCategory = default(EntityRef<MstAccountCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountTypeCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountTypeCode
		{
			get
			{
				return this._AccountTypeCode;
			}
			set
			{
				if ((this._AccountTypeCode != value))
				{
					this.OnAccountTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._AccountTypeCode = value;
					this.SendPropertyChanged("AccountTypeCode");
					this.OnAccountTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountType", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string AccountType
		{
			get
			{
				return this._AccountType;
			}
			set
			{
				if ((this._AccountType != value))
				{
					this.OnAccountTypeChanging(value);
					this.SendPropertyChanging();
					this._AccountType = value;
					this.SendPropertyChanged("AccountType");
					this.OnAccountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCategoryId", DbType="Int NOT NULL")]
		public int AccountCategoryId
		{
			get
			{
				return this._AccountCategoryId;
			}
			set
			{
				if ((this._AccountCategoryId != value))
				{
					if (this._MstAccountCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._AccountCategoryId = value;
					this.SendPropertyChanged("AccountCategoryId");
					this.OnAccountCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategoryDescription", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SubCategoryDescription
		{
			get
			{
				return this._SubCategoryDescription;
			}
			set
			{
				if ((this._SubCategoryDescription != value))
				{
					this.OnSubCategoryDescriptionChanging(value);
					this.SendPropertyChanging();
					this._SubCategoryDescription = value;
					this.SendPropertyChanged("SubCategoryDescription");
					this.OnSubCategoryDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccountType_MstAccount", Storage="_MstAccounts", ThisKey="Id", OtherKey="AccountTypeId")]
		public EntitySet<MstAccount> MstAccounts
		{
			get
			{
				return this._MstAccounts;
			}
			set
			{
				this._MstAccounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccountCategory_MstAccountType", Storage="_MstAccountCategory", ThisKey="AccountCategoryId", OtherKey="Id", IsForeignKey=true)]
		public MstAccountCategory MstAccountCategory
		{
			get
			{
				return this._MstAccountCategory.Entity;
			}
			set
			{
				MstAccountCategory previousValue = this._MstAccountCategory.Entity;
				if (((previousValue != value) 
							|| (this._MstAccountCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccountCategory.Entity = null;
						previousValue.MstAccountTypes.Remove(this);
					}
					this._MstAccountCategory.Entity = value;
					if ((value != null))
					{
						value.MstAccountTypes.Add(this);
						this._AccountCategoryId = value.Id;
					}
					else
					{
						this._AccountCategoryId = default(int);
					}
					this.SendPropertyChanged("MstAccountCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstAccounts(MstAccount entity)
		{
			this.SendPropertyChanging();
			entity.MstAccountType = this;
		}
		
		private void detach_MstAccounts(MstAccount entity)
		{
			this.SendPropertyChanging();
			entity.MstAccountType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstArticle")]
	public partial class MstArticle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ArticleCode;
		
		private string _ManualArticleCode;
		
		private string _Article;
		
		private string _Category;
		
		private int _ArticleTypeId;
		
		private System.Nullable<int> _ArticleGroupId;
		
		private int _AccountId;
		
		private int _SalesAccountId;
		
		private int _CostAccountId;
		
		private int _AssetAccountId;
		
		private int _ExpenseAccountId;
		
		private int _UnitId;
		
		private int _OutputTaxId;
		
		private int _InputTaxId;
		
		private int _WTaxTypeId;
		
		private decimal _Price;
		
		private System.Nullable<decimal> _Cost;
		
		private bool _IsInventory;
		
		private string _Particulars;
		
		private string _Address;
		
		private int _TermId;
		
		private string _ContactNumber;
		
		private string _ContactPerson;
		
		private string _TaxNumber;
		
		private decimal _CreditLimit;
		
		private System.DateTime _DateAcquired;
		
		private decimal _UsefulLife;
		
		private decimal _SalvageValue;
		
		private string _ManualArticleOldCode;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private System.Nullable<decimal> _ReorderQuantity;
		
		private System.Nullable<int> _zSupplierId;
		
		private string _zSubCategory1;
		
		private string _zSubCategory2;
		
		private string _zSubCategory3;
		
		private string _zSubCategory4;
		
		private System.Nullable<bool> _zIsEOMTerms;
		
		private System.Data.Linq.Binary _MyTimeStamp;
		
		private EntitySet<TrnStockTransferItem> _TrnStockTransferItems;
		
		private EntitySet<MstArticleComponent> _MstArticleComponents;
		
		private EntitySet<MstArticleComponent> _MstArticleComponents1;
		
		private EntitySet<MstArticleContact> _MstArticleContacts;
		
		private EntitySet<MstArticleInventory> _MstArticleInventories;
		
		private EntitySet<MstArticlePrice> _MstArticlePrices;
		
		private EntitySet<MstArticleUnit> _MstArticleUnits;
		
		private EntitySet<TrnCollection> _TrnCollections;
		
		private EntitySet<TrnCollectionLine> _TrnCollectionLines;
		
		private EntitySet<TrnCollectionLine> _TrnCollectionLines1;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements1;
		
		private EntitySet<TrnDisbursementLine> _TrnDisbursementLines;
		
		private EntitySet<TrnInventory> _TrnInventories;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntitySet<TrnJournalVoucherLine> _TrnJournalVoucherLines;
		
		private EntitySet<TrnPurchaseOrder> _TrnPurchaseOrders;
		
		private EntitySet<TrnPurchaseOrderItem> _TrnPurchaseOrderItems;
		
		private EntitySet<TrnReceivingReceipt> _TrnReceivingReceipts;
		
		private EntitySet<TrnReceivingReceiptItem> _TrnReceivingReceiptItems;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices;
		
		private EntitySet<TrnSalesInvoiceItem> _TrnSalesInvoiceItems;
		
		private EntitySet<TrnStockCountItem> _TrnStockCountItems;
		
		private EntitySet<TrnStockIn> _TrnStockIns;
		
		private EntitySet<TrnStockInItem> _TrnStockInItems;
		
		private EntitySet<TrnStockOut> _TrnStockOuts;
		
		private EntitySet<TrnStockOutItem> _TrnStockOutItems;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstAccount> _MstAccount1;
		
		private EntityRef<MstAccount> _MstAccount2;
		
		private EntityRef<MstAccount> _MstAccount3;
		
		private EntityRef<MstArticleGroup> _MstArticleGroup;
		
		private EntityRef<MstArticleType> _MstArticleType;
		
		private EntityRef<MstTaxType> _MstTaxType;
		
		private EntityRef<MstTaxType> _MstTaxType1;
		
		private EntityRef<MstTaxType> _MstTaxType2;
		
		private EntityRef<MstTerm> _MstTerm;
		
		private EntityRef<MstUnit> _MstUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnArticleCodeChanging(string value);
    partial void OnArticleCodeChanged();
    partial void OnManualArticleCodeChanging(string value);
    partial void OnManualArticleCodeChanged();
    partial void OnArticleChanging(string value);
    partial void OnArticleChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnArticleTypeIdChanging(int value);
    partial void OnArticleTypeIdChanged();
    partial void OnArticleGroupIdChanging(System.Nullable<int> value);
    partial void OnArticleGroupIdChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnSalesAccountIdChanging(int value);
    partial void OnSalesAccountIdChanged();
    partial void OnCostAccountIdChanging(int value);
    partial void OnCostAccountIdChanged();
    partial void OnAssetAccountIdChanging(int value);
    partial void OnAssetAccountIdChanged();
    partial void OnExpenseAccountIdChanging(int value);
    partial void OnExpenseAccountIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnOutputTaxIdChanging(int value);
    partial void OnOutputTaxIdChanged();
    partial void OnInputTaxIdChanging(int value);
    partial void OnInputTaxIdChanged();
    partial void OnWTaxTypeIdChanging(int value);
    partial void OnWTaxTypeIdChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnIsInventoryChanging(bool value);
    partial void OnIsInventoryChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnTermIdChanging(int value);
    partial void OnTermIdChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    partial void OnContactPersonChanging(string value);
    partial void OnContactPersonChanged();
    partial void OnTaxNumberChanging(string value);
    partial void OnTaxNumberChanged();
    partial void OnCreditLimitChanging(decimal value);
    partial void OnCreditLimitChanged();
    partial void OnDateAcquiredChanging(System.DateTime value);
    partial void OnDateAcquiredChanged();
    partial void OnUsefulLifeChanging(decimal value);
    partial void OnUsefulLifeChanged();
    partial void OnSalvageValueChanging(decimal value);
    partial void OnSalvageValueChanged();
    partial void OnManualArticleOldCodeChanging(string value);
    partial void OnManualArticleOldCodeChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    partial void OnReorderQuantityChanging(System.Nullable<decimal> value);
    partial void OnReorderQuantityChanged();
    partial void OnzSupplierIdChanging(System.Nullable<int> value);
    partial void OnzSupplierIdChanged();
    partial void OnzSubCategory1Changing(string value);
    partial void OnzSubCategory1Changed();
    partial void OnzSubCategory2Changing(string value);
    partial void OnzSubCategory2Changed();
    partial void OnzSubCategory3Changing(string value);
    partial void OnzSubCategory3Changed();
    partial void OnzSubCategory4Changing(string value);
    partial void OnzSubCategory4Changed();
    partial void OnzIsEOMTermsChanging(System.Nullable<bool> value);
    partial void OnzIsEOMTermsChanged();
    partial void OnMyTimeStampChanging(System.Data.Linq.Binary value);
    partial void OnMyTimeStampChanged();
    #endregion
		
		public MstArticle()
		{
			this._TrnStockTransferItems = new EntitySet<TrnStockTransferItem>(new Action<TrnStockTransferItem>(this.attach_TrnStockTransferItems), new Action<TrnStockTransferItem>(this.detach_TrnStockTransferItems));
			this._MstArticleComponents = new EntitySet<MstArticleComponent>(new Action<MstArticleComponent>(this.attach_MstArticleComponents), new Action<MstArticleComponent>(this.detach_MstArticleComponents));
			this._MstArticleComponents1 = new EntitySet<MstArticleComponent>(new Action<MstArticleComponent>(this.attach_MstArticleComponents1), new Action<MstArticleComponent>(this.detach_MstArticleComponents1));
			this._MstArticleContacts = new EntitySet<MstArticleContact>(new Action<MstArticleContact>(this.attach_MstArticleContacts), new Action<MstArticleContact>(this.detach_MstArticleContacts));
			this._MstArticleInventories = new EntitySet<MstArticleInventory>(new Action<MstArticleInventory>(this.attach_MstArticleInventories), new Action<MstArticleInventory>(this.detach_MstArticleInventories));
			this._MstArticlePrices = new EntitySet<MstArticlePrice>(new Action<MstArticlePrice>(this.attach_MstArticlePrices), new Action<MstArticlePrice>(this.detach_MstArticlePrices));
			this._MstArticleUnits = new EntitySet<MstArticleUnit>(new Action<MstArticleUnit>(this.attach_MstArticleUnits), new Action<MstArticleUnit>(this.detach_MstArticleUnits));
			this._TrnCollections = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections), new Action<TrnCollection>(this.detach_TrnCollections));
			this._TrnCollectionLines = new EntitySet<TrnCollectionLine>(new Action<TrnCollectionLine>(this.attach_TrnCollectionLines), new Action<TrnCollectionLine>(this.detach_TrnCollectionLines));
			this._TrnCollectionLines1 = new EntitySet<TrnCollectionLine>(new Action<TrnCollectionLine>(this.attach_TrnCollectionLines1), new Action<TrnCollectionLine>(this.detach_TrnCollectionLines1));
			this._TrnDisbursements = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements), new Action<TrnDisbursement>(this.detach_TrnDisbursements));
			this._TrnDisbursements1 = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements1), new Action<TrnDisbursement>(this.detach_TrnDisbursements1));
			this._TrnDisbursementLines = new EntitySet<TrnDisbursementLine>(new Action<TrnDisbursementLine>(this.attach_TrnDisbursementLines), new Action<TrnDisbursementLine>(this.detach_TrnDisbursementLines));
			this._TrnInventories = new EntitySet<TrnInventory>(new Action<TrnInventory>(this.attach_TrnInventories), new Action<TrnInventory>(this.detach_TrnInventories));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._TrnJournalVoucherLines = new EntitySet<TrnJournalVoucherLine>(new Action<TrnJournalVoucherLine>(this.attach_TrnJournalVoucherLines), new Action<TrnJournalVoucherLine>(this.detach_TrnJournalVoucherLines));
			this._TrnPurchaseOrders = new EntitySet<TrnPurchaseOrder>(new Action<TrnPurchaseOrder>(this.attach_TrnPurchaseOrders), new Action<TrnPurchaseOrder>(this.detach_TrnPurchaseOrders));
			this._TrnPurchaseOrderItems = new EntitySet<TrnPurchaseOrderItem>(new Action<TrnPurchaseOrderItem>(this.attach_TrnPurchaseOrderItems), new Action<TrnPurchaseOrderItem>(this.detach_TrnPurchaseOrderItems));
			this._TrnReceivingReceipts = new EntitySet<TrnReceivingReceipt>(new Action<TrnReceivingReceipt>(this.attach_TrnReceivingReceipts), new Action<TrnReceivingReceipt>(this.detach_TrnReceivingReceipts));
			this._TrnReceivingReceiptItems = new EntitySet<TrnReceivingReceiptItem>(new Action<TrnReceivingReceiptItem>(this.attach_TrnReceivingReceiptItems), new Action<TrnReceivingReceiptItem>(this.detach_TrnReceivingReceiptItems));
			this._TrnSalesInvoices = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices));
			this._TrnSalesInvoiceItems = new EntitySet<TrnSalesInvoiceItem>(new Action<TrnSalesInvoiceItem>(this.attach_TrnSalesInvoiceItems), new Action<TrnSalesInvoiceItem>(this.detach_TrnSalesInvoiceItems));
			this._TrnStockCountItems = new EntitySet<TrnStockCountItem>(new Action<TrnStockCountItem>(this.attach_TrnStockCountItems), new Action<TrnStockCountItem>(this.detach_TrnStockCountItems));
			this._TrnStockIns = new EntitySet<TrnStockIn>(new Action<TrnStockIn>(this.attach_TrnStockIns), new Action<TrnStockIn>(this.detach_TrnStockIns));
			this._TrnStockInItems = new EntitySet<TrnStockInItem>(new Action<TrnStockInItem>(this.attach_TrnStockInItems), new Action<TrnStockInItem>(this.detach_TrnStockInItems));
			this._TrnStockOuts = new EntitySet<TrnStockOut>(new Action<TrnStockOut>(this.attach_TrnStockOuts), new Action<TrnStockOut>(this.detach_TrnStockOuts));
			this._TrnStockOutItems = new EntitySet<TrnStockOutItem>(new Action<TrnStockOutItem>(this.attach_TrnStockOutItems), new Action<TrnStockOutItem>(this.detach_TrnStockOutItems));
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstAccount1 = default(EntityRef<MstAccount>);
			this._MstAccount2 = default(EntityRef<MstAccount>);
			this._MstAccount3 = default(EntityRef<MstAccount>);
			this._MstArticleGroup = default(EntityRef<MstArticleGroup>);
			this._MstArticleType = default(EntityRef<MstArticleType>);
			this._MstTaxType = default(EntityRef<MstTaxType>);
			this._MstTaxType1 = default(EntityRef<MstTaxType>);
			this._MstTaxType2 = default(EntityRef<MstTaxType>);
			this._MstTerm = default(EntityRef<MstTerm>);
			this._MstUnit = default(EntityRef<MstUnit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ArticleCode
		{
			get
			{
				return this._ArticleCode;
			}
			set
			{
				if ((this._ArticleCode != value))
				{
					this.OnArticleCodeChanging(value);
					this.SendPropertyChanging();
					this._ArticleCode = value;
					this.SendPropertyChanged("ArticleCode");
					this.OnArticleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualArticleCode", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ManualArticleCode
		{
			get
			{
				return this._ManualArticleCode;
			}
			set
			{
				if ((this._ManualArticleCode != value))
				{
					this.OnManualArticleCodeChanging(value);
					this.SendPropertyChanging();
					this._ManualArticleCode = value;
					this.SendPropertyChanged("ManualArticleCode");
					this.OnManualArticleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Article", DbType="NVarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Article
		{
			get
			{
				return this._Article;
			}
			set
			{
				if ((this._Article != value))
				{
					this.OnArticleChanging(value);
					this.SendPropertyChanging();
					this._Article = value;
					this.SendPropertyChanged("Article");
					this.OnArticleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleTypeId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ArticleTypeId
		{
			get
			{
				return this._ArticleTypeId;
			}
			set
			{
				if ((this._ArticleTypeId != value))
				{
					if (this._MstArticleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleTypeId = value;
					this.SendPropertyChanged("ArticleTypeId");
					this.OnArticleTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleGroupId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ArticleGroupId
		{
			get
			{
				return this._ArticleGroupId;
			}
			set
			{
				if ((this._ArticleGroupId != value))
				{
					if (this._MstArticleGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleGroupIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleGroupId = value;
					this.SendPropertyChanged("ArticleGroupId");
					this.OnArticleGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesAccountId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SalesAccountId
		{
			get
			{
				return this._SalesAccountId;
			}
			set
			{
				if ((this._SalesAccountId != value))
				{
					if (this._MstAccount1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesAccountIdChanging(value);
					this.SendPropertyChanging();
					this._SalesAccountId = value;
					this.SendPropertyChanged("SalesAccountId");
					this.OnSalesAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostAccountId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int CostAccountId
		{
			get
			{
				return this._CostAccountId;
			}
			set
			{
				if ((this._CostAccountId != value))
				{
					if (this._MstAccount2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCostAccountIdChanging(value);
					this.SendPropertyChanging();
					this._CostAccountId = value;
					this.SendPropertyChanged("CostAccountId");
					this.OnCostAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetAccountId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int AssetAccountId
		{
			get
			{
				return this._AssetAccountId;
			}
			set
			{
				if ((this._AssetAccountId != value))
				{
					if (this._MstAccount3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssetAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AssetAccountId = value;
					this.SendPropertyChanged("AssetAccountId");
					this.OnAssetAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenseAccountId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ExpenseAccountId
		{
			get
			{
				return this._ExpenseAccountId;
			}
			set
			{
				if ((this._ExpenseAccountId != value))
				{
					this.OnExpenseAccountIdChanging(value);
					this.SendPropertyChanging();
					this._ExpenseAccountId = value;
					this.SendPropertyChanged("ExpenseAccountId");
					this.OnExpenseAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutputTaxId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int OutputTaxId
		{
			get
			{
				return this._OutputTaxId;
			}
			set
			{
				if ((this._OutputTaxId != value))
				{
					if (this._MstTaxType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOutputTaxIdChanging(value);
					this.SendPropertyChanging();
					this._OutputTaxId = value;
					this.SendPropertyChanged("OutputTaxId");
					this.OnOutputTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputTaxId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int InputTaxId
		{
			get
			{
				return this._InputTaxId;
			}
			set
			{
				if ((this._InputTaxId != value))
				{
					if (this._MstTaxType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInputTaxIdChanging(value);
					this.SendPropertyChanging();
					this._InputTaxId = value;
					this.SendPropertyChanged("InputTaxId");
					this.OnInputTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WTaxTypeId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int WTaxTypeId
		{
			get
			{
				return this._WTaxTypeId;
			}
			set
			{
				if ((this._WTaxTypeId != value))
				{
					if (this._MstTaxType2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWTaxTypeIdChanging(value);
					this.SendPropertyChanging();
					this._WTaxTypeId = value;
					this.SendPropertyChanged("WTaxTypeId");
					this.OnWTaxTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,5) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,5)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInventory", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsInventory
		{
			get
			{
				return this._IsInventory;
			}
			set
			{
				if ((this._IsInventory != value))
				{
					this.OnIsInventoryChanging(value);
					this.SendPropertyChanging();
					this._IsInventory = value;
					this.SendPropertyChanged("IsInventory");
					this.OnIsInventoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._MstTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPerson", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ContactPerson
		{
			get
			{
				return this._ContactPerson;
			}
			set
			{
				if ((this._ContactPerson != value))
				{
					this.OnContactPersonChanging(value);
					this.SendPropertyChanging();
					this._ContactPerson = value;
					this.SendPropertyChanged("ContactPerson");
					this.OnContactPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string TaxNumber
		{
			get
			{
				return this._TaxNumber;
			}
			set
			{
				if ((this._TaxNumber != value))
				{
					this.OnTaxNumberChanging(value);
					this.SendPropertyChanging();
					this._TaxNumber = value;
					this.SendPropertyChanged("TaxNumber");
					this.OnTaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditLimit", DbType="Decimal(18,5) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal CreditLimit
		{
			get
			{
				return this._CreditLimit;
			}
			set
			{
				if ((this._CreditLimit != value))
				{
					this.OnCreditLimitChanging(value);
					this.SendPropertyChanging();
					this._CreditLimit = value;
					this.SendPropertyChanged("CreditLimit");
					this.OnCreditLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAcquired", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime DateAcquired
		{
			get
			{
				return this._DateAcquired;
			}
			set
			{
				if ((this._DateAcquired != value))
				{
					this.OnDateAcquiredChanging(value);
					this.SendPropertyChanging();
					this._DateAcquired = value;
					this.SendPropertyChanged("DateAcquired");
					this.OnDateAcquiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsefulLife", DbType="Decimal(18,5) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal UsefulLife
		{
			get
			{
				return this._UsefulLife;
			}
			set
			{
				if ((this._UsefulLife != value))
				{
					this.OnUsefulLifeChanging(value);
					this.SendPropertyChanging();
					this._UsefulLife = value;
					this.SendPropertyChanged("UsefulLife");
					this.OnUsefulLifeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalvageValue", DbType="Decimal(18,5) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal SalvageValue
		{
			get
			{
				return this._SalvageValue;
			}
			set
			{
				if ((this._SalvageValue != value))
				{
					this.OnSalvageValueChanging(value);
					this.SendPropertyChanging();
					this._SalvageValue = value;
					this.SendPropertyChanged("SalvageValue");
					this.OnSalvageValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualArticleOldCode", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string ManualArticleOldCode
		{
			get
			{
				return this._ManualArticleOldCode;
			}
			set
			{
				if ((this._ManualArticleOldCode != value))
				{
					this.OnManualArticleOldCodeChanging(value);
					this.SendPropertyChanging();
					this._ManualArticleOldCode = value;
					this.SendPropertyChanged("ManualArticleOldCode");
					this.OnManualArticleOldCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReorderQuantity", DbType="Decimal(18,5)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> ReorderQuantity
		{
			get
			{
				return this._ReorderQuantity;
			}
			set
			{
				if ((this._ReorderQuantity != value))
				{
					this.OnReorderQuantityChanging(value);
					this.SendPropertyChanging();
					this._ReorderQuantity = value;
					this.SendPropertyChanged("ReorderQuantity");
					this.OnReorderQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zSupplierId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> zSupplierId
		{
			get
			{
				return this._zSupplierId;
			}
			set
			{
				if ((this._zSupplierId != value))
				{
					this.OnzSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._zSupplierId = value;
					this.SendPropertyChanged("zSupplierId");
					this.OnzSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zSubCategory1", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string zSubCategory1
		{
			get
			{
				return this._zSubCategory1;
			}
			set
			{
				if ((this._zSubCategory1 != value))
				{
					this.OnzSubCategory1Changing(value);
					this.SendPropertyChanging();
					this._zSubCategory1 = value;
					this.SendPropertyChanged("zSubCategory1");
					this.OnzSubCategory1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zSubCategory2", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string zSubCategory2
		{
			get
			{
				return this._zSubCategory2;
			}
			set
			{
				if ((this._zSubCategory2 != value))
				{
					this.OnzSubCategory2Changing(value);
					this.SendPropertyChanging();
					this._zSubCategory2 = value;
					this.SendPropertyChanged("zSubCategory2");
					this.OnzSubCategory2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zSubCategory3", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string zSubCategory3
		{
			get
			{
				return this._zSubCategory3;
			}
			set
			{
				if ((this._zSubCategory3 != value))
				{
					this.OnzSubCategory3Changing(value);
					this.SendPropertyChanging();
					this._zSubCategory3 = value;
					this.SendPropertyChanged("zSubCategory3");
					this.OnzSubCategory3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zSubCategory4", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string zSubCategory4
		{
			get
			{
				return this._zSubCategory4;
			}
			set
			{
				if ((this._zSubCategory4 != value))
				{
					this.OnzSubCategory4Changing(value);
					this.SendPropertyChanging();
					this._zSubCategory4 = value;
					this.SendPropertyChanged("zSubCategory4");
					this.OnzSubCategory4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zIsEOMTerms", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> zIsEOMTerms
		{
			get
			{
				return this._zIsEOMTerms;
			}
			set
			{
				if ((this._zIsEOMTerms != value))
				{
					this.OnzIsEOMTermsChanging(value);
					this.SendPropertyChanging();
					this._zIsEOMTerms = value;
					this.SendPropertyChanged("zIsEOMTerms");
					this.OnzIsEOMTermsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MyTimeStamp", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary MyTimeStamp
		{
			get
			{
				return this._MyTimeStamp;
			}
			set
			{
				if ((this._MyTimeStamp != value))
				{
					this.OnMyTimeStampChanging(value);
					this.SendPropertyChanging();
					this._MyTimeStamp = value;
					this.SendPropertyChanged("MyTimeStamp");
					this.OnMyTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnStockTransferItem", Storage="_TrnStockTransferItems", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<TrnStockTransferItem> TrnStockTransferItems
		{
			get
			{
				return this._TrnStockTransferItems;
			}
			set
			{
				this._TrnStockTransferItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleComponent", Storage="_MstArticleComponents", ThisKey="Id", OtherKey="ArticleId")]
		public EntitySet<MstArticleComponent> MstArticleComponents
		{
			get
			{
				return this._MstArticleComponents;
			}
			set
			{
				this._MstArticleComponents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleComponent1", Storage="_MstArticleComponents1", ThisKey="Id", OtherKey="ComponentArticleId")]
		public EntitySet<MstArticleComponent> MstArticleComponents1
		{
			get
			{
				return this._MstArticleComponents1;
			}
			set
			{
				this._MstArticleComponents1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleContact", Storage="_MstArticleContacts", ThisKey="Id", OtherKey="ArticleId")]
		public EntitySet<MstArticleContact> MstArticleContacts
		{
			get
			{
				return this._MstArticleContacts;
			}
			set
			{
				this._MstArticleContacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleInventory", Storage="_MstArticleInventories", ThisKey="Id", OtherKey="ArticleId")]
		public EntitySet<MstArticleInventory> MstArticleInventories
		{
			get
			{
				return this._MstArticleInventories;
			}
			set
			{
				this._MstArticleInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticlePrice", Storage="_MstArticlePrices", ThisKey="Id", OtherKey="ArticleId")]
		public EntitySet<MstArticlePrice> MstArticlePrices
		{
			get
			{
				return this._MstArticlePrices;
			}
			set
			{
				this._MstArticlePrices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleUnit", Storage="_MstArticleUnits", ThisKey="Id", OtherKey="ArticleId")]
		public EntitySet<MstArticleUnit> MstArticleUnits
		{
			get
			{
				return this._MstArticleUnits;
			}
			set
			{
				this._MstArticleUnits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnCollection", Storage="_TrnCollections", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<TrnCollection> TrnCollections
		{
			get
			{
				return this._TrnCollections;
			}
			set
			{
				this._TrnCollections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnCollectionLine", Storage="_TrnCollectionLines", ThisKey="Id", OtherKey="ArticleId")]
		public EntitySet<TrnCollectionLine> TrnCollectionLines
		{
			get
			{
				return this._TrnCollectionLines;
			}
			set
			{
				this._TrnCollectionLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnCollectionLine1", Storage="_TrnCollectionLines1", ThisKey="Id", OtherKey="DepositoryBankId")]
		public EntitySet<TrnCollectionLine> TrnCollectionLines1
		{
			get
			{
				return this._TrnCollectionLines1;
			}
			set
			{
				this._TrnCollectionLines1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnDisbursement", Storage="_TrnDisbursements", ThisKey="Id", OtherKey="SupplierId")]
		public EntitySet<TrnDisbursement> TrnDisbursements
		{
			get
			{
				return this._TrnDisbursements;
			}
			set
			{
				this._TrnDisbursements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnDisbursement1", Storage="_TrnDisbursements1", ThisKey="Id", OtherKey="BankId")]
		public EntitySet<TrnDisbursement> TrnDisbursements1
		{
			get
			{
				return this._TrnDisbursements1;
			}
			set
			{
				this._TrnDisbursements1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnDisbursementLine", Storage="_TrnDisbursementLines", ThisKey="Id", OtherKey="ArticleId")]
		public EntitySet<TrnDisbursementLine> TrnDisbursementLines
		{
			get
			{
				return this._TrnDisbursementLines;
			}
			set
			{
				this._TrnDisbursementLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnInventory", Storage="_TrnInventories", ThisKey="Id", OtherKey="ArticleId")]
		public EntitySet<TrnInventory> TrnInventories
		{
			get
			{
				return this._TrnInventories;
			}
			set
			{
				this._TrnInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="ArticleId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnJournalVoucherLine", Storage="_TrnJournalVoucherLines", ThisKey="Id", OtherKey="ArticleId")]
		public EntitySet<TrnJournalVoucherLine> TrnJournalVoucherLines
		{
			get
			{
				return this._TrnJournalVoucherLines;
			}
			set
			{
				this._TrnJournalVoucherLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnPurchaseOrder", Storage="_TrnPurchaseOrders", ThisKey="Id", OtherKey="SupplierId")]
		public EntitySet<TrnPurchaseOrder> TrnPurchaseOrders
		{
			get
			{
				return this._TrnPurchaseOrders;
			}
			set
			{
				this._TrnPurchaseOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnPurchaseOrderItem", Storage="_TrnPurchaseOrderItems", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<TrnPurchaseOrderItem> TrnPurchaseOrderItems
		{
			get
			{
				return this._TrnPurchaseOrderItems;
			}
			set
			{
				this._TrnPurchaseOrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnReceivingReceipt", Storage="_TrnReceivingReceipts", ThisKey="Id", OtherKey="SupplierId")]
		public EntitySet<TrnReceivingReceipt> TrnReceivingReceipts
		{
			get
			{
				return this._TrnReceivingReceipts;
			}
			set
			{
				this._TrnReceivingReceipts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnReceivingReceiptItem", Storage="_TrnReceivingReceiptItems", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<TrnReceivingReceiptItem> TrnReceivingReceiptItems
		{
			get
			{
				return this._TrnReceivingReceiptItems;
			}
			set
			{
				this._TrnReceivingReceiptItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnSalesInvoice", Storage="_TrnSalesInvoices", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices
		{
			get
			{
				return this._TrnSalesInvoices;
			}
			set
			{
				this._TrnSalesInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnSalesInvoiceItem", Storage="_TrnSalesInvoiceItems", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<TrnSalesInvoiceItem> TrnSalesInvoiceItems
		{
			get
			{
				return this._TrnSalesInvoiceItems;
			}
			set
			{
				this._TrnSalesInvoiceItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnStockCountItem", Storage="_TrnStockCountItems", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<TrnStockCountItem> TrnStockCountItems
		{
			get
			{
				return this._TrnStockCountItems;
			}
			set
			{
				this._TrnStockCountItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnStockIn", Storage="_TrnStockIns", ThisKey="Id", OtherKey="ArticleId")]
		public EntitySet<TrnStockIn> TrnStockIns
		{
			get
			{
				return this._TrnStockIns;
			}
			set
			{
				this._TrnStockIns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnStockInItem", Storage="_TrnStockInItems", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<TrnStockInItem> TrnStockInItems
		{
			get
			{
				return this._TrnStockInItems;
			}
			set
			{
				this._TrnStockInItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnStockOut", Storage="_TrnStockOuts", ThisKey="Id", OtherKey="ArticleId")]
		public EntitySet<TrnStockOut> TrnStockOuts
		{
			get
			{
				return this._TrnStockOuts;
			}
			set
			{
				this._TrnStockOuts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnStockOutItem", Storage="_TrnStockOutItems", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<TrnStockOutItem> TrnStockOutItems
		{
			get
			{
				return this._TrnStockOutItems;
			}
			set
			{
				this._TrnStockOutItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticle", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.MstArticles.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.MstArticles.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticle1", Storage="_MstAccount1", ThisKey="SalesAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount1
		{
			get
			{
				return this._MstAccount1.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount1.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount1.Entity = null;
						previousValue.MstArticles1.Remove(this);
					}
					this._MstAccount1.Entity = value;
					if ((value != null))
					{
						value.MstArticles1.Add(this);
						this._SalesAccountId = value.Id;
					}
					else
					{
						this._SalesAccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticle2", Storage="_MstAccount2", ThisKey="CostAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount2
		{
			get
			{
				return this._MstAccount2.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount2.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount2.Entity = null;
						previousValue.MstArticles2.Remove(this);
					}
					this._MstAccount2.Entity = value;
					if ((value != null))
					{
						value.MstArticles2.Add(this);
						this._CostAccountId = value.Id;
					}
					else
					{
						this._CostAccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticle3", Storage="_MstAccount3", ThisKey="AssetAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount3
		{
			get
			{
				return this._MstAccount3.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount3.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount3.Entity = null;
						previousValue.MstArticles3.Remove(this);
					}
					this._MstAccount3.Entity = value;
					if ((value != null))
					{
						value.MstArticles3.Add(this);
						this._AssetAccountId = value.Id;
					}
					else
					{
						this._AssetAccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleGroup_MstArticle", Storage="_MstArticleGroup", ThisKey="ArticleGroupId", OtherKey="Id", IsForeignKey=true)]
		public MstArticleGroup MstArticleGroup
		{
			get
			{
				return this._MstArticleGroup.Entity;
			}
			set
			{
				MstArticleGroup previousValue = this._MstArticleGroup.Entity;
				if (((previousValue != value) 
							|| (this._MstArticleGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticleGroup.Entity = null;
						previousValue.MstArticles.Remove(this);
					}
					this._MstArticleGroup.Entity = value;
					if ((value != null))
					{
						value.MstArticles.Add(this);
						this._ArticleGroupId = value.Id;
					}
					else
					{
						this._ArticleGroupId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstArticleGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleType_MstArticle", Storage="_MstArticleType", ThisKey="ArticleTypeId", OtherKey="Id", IsForeignKey=true)]
		public MstArticleType MstArticleType
		{
			get
			{
				return this._MstArticleType.Entity;
			}
			set
			{
				MstArticleType previousValue = this._MstArticleType.Entity;
				if (((previousValue != value) 
							|| (this._MstArticleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticleType.Entity = null;
						previousValue.MstArticles.Remove(this);
					}
					this._MstArticleType.Entity = value;
					if ((value != null))
					{
						value.MstArticles.Add(this);
						this._ArticleTypeId = value.Id;
					}
					else
					{
						this._ArticleTypeId = default(int);
					}
					this.SendPropertyChanged("MstArticleType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTaxType_MstArticle", Storage="_MstTaxType", ThisKey="OutputTaxId", OtherKey="Id", IsForeignKey=true)]
		public MstTaxType MstTaxType
		{
			get
			{
				return this._MstTaxType.Entity;
			}
			set
			{
				MstTaxType previousValue = this._MstTaxType.Entity;
				if (((previousValue != value) 
							|| (this._MstTaxType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTaxType.Entity = null;
						previousValue.MstArticles.Remove(this);
					}
					this._MstTaxType.Entity = value;
					if ((value != null))
					{
						value.MstArticles.Add(this);
						this._OutputTaxId = value.Id;
					}
					else
					{
						this._OutputTaxId = default(int);
					}
					this.SendPropertyChanged("MstTaxType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTaxType_MstArticle1", Storage="_MstTaxType1", ThisKey="InputTaxId", OtherKey="Id", IsForeignKey=true)]
		public MstTaxType MstTaxType1
		{
			get
			{
				return this._MstTaxType1.Entity;
			}
			set
			{
				MstTaxType previousValue = this._MstTaxType1.Entity;
				if (((previousValue != value) 
							|| (this._MstTaxType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTaxType1.Entity = null;
						previousValue.MstArticles1.Remove(this);
					}
					this._MstTaxType1.Entity = value;
					if ((value != null))
					{
						value.MstArticles1.Add(this);
						this._InputTaxId = value.Id;
					}
					else
					{
						this._InputTaxId = default(int);
					}
					this.SendPropertyChanged("MstTaxType1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTaxType_MstArticle2", Storage="_MstTaxType2", ThisKey="WTaxTypeId", OtherKey="Id", IsForeignKey=true)]
		public MstTaxType MstTaxType2
		{
			get
			{
				return this._MstTaxType2.Entity;
			}
			set
			{
				MstTaxType previousValue = this._MstTaxType2.Entity;
				if (((previousValue != value) 
							|| (this._MstTaxType2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTaxType2.Entity = null;
						previousValue.MstArticles2.Remove(this);
					}
					this._MstTaxType2.Entity = value;
					if ((value != null))
					{
						value.MstArticles2.Add(this);
						this._WTaxTypeId = value.Id;
					}
					else
					{
						this._WTaxTypeId = default(int);
					}
					this.SendPropertyChanged("MstTaxType2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_MstArticle", Storage="_MstTerm", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public MstTerm MstTerm
		{
			get
			{
				return this._MstTerm.Entity;
			}
			set
			{
				MstTerm previousValue = this._MstTerm.Entity;
				if (((previousValue != value) 
							|| (this._MstTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTerm.Entity = null;
						previousValue.MstArticles.Remove(this);
					}
					this._MstTerm.Entity = value;
					if ((value != null))
					{
						value.MstArticles.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(int);
					}
					this.SendPropertyChanged("MstTerm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_MstArticle", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.MstArticles.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.MstArticles.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnStockTransferItems(TrnStockTransferItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnStockTransferItems(TrnStockTransferItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_MstArticleComponents(MstArticleComponent entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_MstArticleComponents(MstArticleComponent entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_MstArticleComponents1(MstArticleComponent entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle1 = this;
		}
		
		private void detach_MstArticleComponents1(MstArticleComponent entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle1 = null;
		}
		
		private void attach_MstArticleContacts(MstArticleContact entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_MstArticleContacts(MstArticleContact entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_MstArticleInventories(MstArticleInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_MstArticleInventories(MstArticleInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_MstArticlePrices(MstArticlePrice entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_MstArticlePrices(MstArticlePrice entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_MstArticleUnits(MstArticleUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_MstArticleUnits(MstArticleUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnCollectionLines1(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle1 = this;
		}
		
		private void detach_TrnCollectionLines1(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle1 = null;
		}
		
		private void attach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnDisbursements1(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle1 = this;
		}
		
		private void detach_TrnDisbursements1(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle1 = null;
		}
		
		private void attach_TrnDisbursementLines(TrnDisbursementLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnDisbursementLines(TrnDisbursementLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnJournalVoucherLines(TrnJournalVoucherLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnJournalVoucherLines(TrnJournalVoucherLine entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnPurchaseOrders(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnPurchaseOrders(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnPurchaseOrderItems(TrnPurchaseOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnPurchaseOrderItems(TrnPurchaseOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnReceivingReceipts(TrnReceivingReceipt entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnReceivingReceipts(TrnReceivingReceipt entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnReceivingReceiptItems(TrnReceivingReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnReceivingReceiptItems(TrnReceivingReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnSalesInvoiceItems(TrnSalesInvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnSalesInvoiceItems(TrnSalesInvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnStockCountItems(TrnStockCountItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnStockCountItems(TrnStockCountItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnStockIns(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnStockIns(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnStockInItems(TrnStockInItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnStockInItems(TrnStockInItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnStockOuts(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnStockOuts(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnStockOutItems(TrnStockOutItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnStockOutItems(TrnStockOutItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstArticleComponent")]
	public partial class MstArticleComponent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ArticleId;
		
		private int _ComponentArticleId;
		
		private decimal _Quantity;
		
		private string _Particulars;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstArticle> _MstArticle1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnArticleIdChanging(int value);
    partial void OnArticleIdChanged();
    partial void OnComponentArticleIdChanging(int value);
    partial void OnComponentArticleIdChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    #endregion
		
		public MstArticleComponent()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstArticle1 = default(EntityRef<MstArticle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="Int NOT NULL")]
		public int ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComponentArticleId", DbType="Int NOT NULL")]
		public int ComponentArticleId
		{
			get
			{
				return this._ComponentArticleId;
			}
			set
			{
				if ((this._ComponentArticleId != value))
				{
					if (this._MstArticle1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnComponentArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ComponentArticleId = value;
					this.SendPropertyChanged("ComponentArticleId");
					this.OnComponentArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,8) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleComponent", Storage="_MstArticle", ThisKey="ArticleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.MstArticleComponents.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.MstArticleComponents.Add(this);
						this._ArticleId = value.Id;
					}
					else
					{
						this._ArticleId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleComponent1", Storage="_MstArticle1", ThisKey="ComponentArticleId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle1
		{
			get
			{
				return this._MstArticle1.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle1.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle1.Entity = null;
						previousValue.MstArticleComponents1.Remove(this);
					}
					this._MstArticle1.Entity = value;
					if ((value != null))
					{
						value.MstArticleComponents1.Add(this);
						this._ComponentArticleId = value.Id;
					}
					else
					{
						this._ComponentArticleId = default(int);
					}
					this.SendPropertyChanged("MstArticle1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstArticleContact")]
	public partial class MstArticleContact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ArticleId;
		
		private string _ContactPerson;
		
		private string _ContactNumber;
		
		private string _Remarks;
		
		private EntityRef<MstArticle> _MstArticle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnArticleIdChanging(int value);
    partial void OnArticleIdChanged();
    partial void OnContactPersonChanging(string value);
    partial void OnContactPersonChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    #endregion
		
		public MstArticleContact()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="Int NOT NULL")]
		public int ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPerson", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ContactPerson
		{
			get
			{
				return this._ContactPerson;
			}
			set
			{
				if ((this._ContactPerson != value))
				{
					this.OnContactPersonChanging(value);
					this.SendPropertyChanging();
					this._ContactPerson = value;
					this.SendPropertyChanged("ContactPerson");
					this.OnContactPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleContact", Storage="_MstArticle", ThisKey="ArticleId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.MstArticleContacts.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.MstArticleContacts.Add(this);
						this._ArticleId = value.Id;
					}
					else
					{
						this._ArticleId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstArticleGroup")]
	public partial class MstArticleGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ArticleGroup;
		
		private int _ArticleTypeId;
		
		private int _AccountId;
		
		private int _SalesAccountId;
		
		private int _CostAccountId;
		
		private int _AssetAccountId;
		
		private int _ExpenseAccountId;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstArticle> _MstArticles;
		
		private EntityRef<MstArticleType> _MstArticleType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnArticleGroupChanging(string value);
    partial void OnArticleGroupChanged();
    partial void OnArticleTypeIdChanging(int value);
    partial void OnArticleTypeIdChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnSalesAccountIdChanging(int value);
    partial void OnSalesAccountIdChanged();
    partial void OnCostAccountIdChanging(int value);
    partial void OnCostAccountIdChanged();
    partial void OnAssetAccountIdChanging(int value);
    partial void OnAssetAccountIdChanged();
    partial void OnExpenseAccountIdChanging(int value);
    partial void OnExpenseAccountIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstArticleGroup()
		{
			this._MstArticles = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles), new Action<MstArticle>(this.detach_MstArticles));
			this._MstArticleType = default(EntityRef<MstArticleType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleGroup", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ArticleGroup
		{
			get
			{
				return this._ArticleGroup;
			}
			set
			{
				if ((this._ArticleGroup != value))
				{
					this.OnArticleGroupChanging(value);
					this.SendPropertyChanging();
					this._ArticleGroup = value;
					this.SendPropertyChanged("ArticleGroup");
					this.OnArticleGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleTypeId", DbType="Int NOT NULL")]
		public int ArticleTypeId
		{
			get
			{
				return this._ArticleTypeId;
			}
			set
			{
				if ((this._ArticleTypeId != value))
				{
					if (this._MstArticleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleTypeId = value;
					this.SendPropertyChanged("ArticleTypeId");
					this.OnArticleTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesAccountId", DbType="Int NOT NULL")]
		public int SalesAccountId
		{
			get
			{
				return this._SalesAccountId;
			}
			set
			{
				if ((this._SalesAccountId != value))
				{
					this.OnSalesAccountIdChanging(value);
					this.SendPropertyChanging();
					this._SalesAccountId = value;
					this.SendPropertyChanged("SalesAccountId");
					this.OnSalesAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostAccountId", DbType="Int NOT NULL")]
		public int CostAccountId
		{
			get
			{
				return this._CostAccountId;
			}
			set
			{
				if ((this._CostAccountId != value))
				{
					this.OnCostAccountIdChanging(value);
					this.SendPropertyChanging();
					this._CostAccountId = value;
					this.SendPropertyChanged("CostAccountId");
					this.OnCostAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetAccountId", DbType="Int NOT NULL")]
		public int AssetAccountId
		{
			get
			{
				return this._AssetAccountId;
			}
			set
			{
				if ((this._AssetAccountId != value))
				{
					this.OnAssetAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AssetAccountId = value;
					this.SendPropertyChanged("AssetAccountId");
					this.OnAssetAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenseAccountId", DbType="Int NOT NULL")]
		public int ExpenseAccountId
		{
			get
			{
				return this._ExpenseAccountId;
			}
			set
			{
				if ((this._ExpenseAccountId != value))
				{
					this.OnExpenseAccountIdChanging(value);
					this.SendPropertyChanging();
					this._ExpenseAccountId = value;
					this.SendPropertyChanged("ExpenseAccountId");
					this.OnExpenseAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleGroup_MstArticle", Storage="_MstArticles", ThisKey="Id", OtherKey="ArticleGroupId")]
		public EntitySet<MstArticle> MstArticles
		{
			get
			{
				return this._MstArticles;
			}
			set
			{
				this._MstArticles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleType_MstArticleGroup", Storage="_MstArticleType", ThisKey="ArticleTypeId", OtherKey="Id", IsForeignKey=true)]
		public MstArticleType MstArticleType
		{
			get
			{
				return this._MstArticleType.Entity;
			}
			set
			{
				MstArticleType previousValue = this._MstArticleType.Entity;
				if (((previousValue != value) 
							|| (this._MstArticleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticleType.Entity = null;
						previousValue.MstArticleGroups.Remove(this);
					}
					this._MstArticleType.Entity = value;
					if ((value != null))
					{
						value.MstArticleGroups.Add(this);
						this._ArticleTypeId = value.Id;
					}
					else
					{
						this._ArticleTypeId = default(int);
					}
					this.SendPropertyChanged("MstArticleType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleGroup = this;
		}
		
		private void detach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstArticleInventory")]
	public partial class MstArticleInventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BranchId;
		
		private int _ArticleId;
		
		private string _InventoryCode;
		
		private decimal _Quantity;
		
		private decimal _Cost;
		
		private decimal _Amount;
		
		private string _Particulars;
		
		private EntitySet<TrnStockTransferItem> _TrnStockTransferItems;
		
		private EntitySet<TrnInventory> _TrnInventories;
		
		private EntitySet<TrnSalesInvoiceItem> _TrnSalesInvoiceItems;
		
		private EntitySet<TrnStockOutItem> _TrnStockOutItems;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstBranch> _MstBranch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnArticleIdChanging(int value);
    partial void OnArticleIdChanged();
    partial void OnInventoryCodeChanging(string value);
    partial void OnInventoryCodeChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    #endregion
		
		public MstArticleInventory()
		{
			this._TrnStockTransferItems = new EntitySet<TrnStockTransferItem>(new Action<TrnStockTransferItem>(this.attach_TrnStockTransferItems), new Action<TrnStockTransferItem>(this.detach_TrnStockTransferItems));
			this._TrnInventories = new EntitySet<TrnInventory>(new Action<TrnInventory>(this.attach_TrnInventories), new Action<TrnInventory>(this.detach_TrnInventories));
			this._TrnSalesInvoiceItems = new EntitySet<TrnSalesInvoiceItem>(new Action<TrnSalesInvoiceItem>(this.attach_TrnSalesInvoiceItems), new Action<TrnSalesInvoiceItem>(this.detach_TrnSalesInvoiceItems));
			this._TrnStockOutItems = new EntitySet<TrnStockOutItem>(new Action<TrnStockOutItem>(this.attach_TrnStockOutItems), new Action<TrnStockOutItem>(this.detach_TrnStockOutItems));
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="Int NOT NULL")]
		public int ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string InventoryCode
		{
			get
			{
				return this._InventoryCode;
			}
			set
			{
				if ((this._InventoryCode != value))
				{
					this.OnInventoryCodeChanging(value);
					this.SendPropertyChanging();
					this._InventoryCode = value;
					this.SendPropertyChanged("InventoryCode");
					this.OnInventoryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleInventory_TrnStockTransferItem", Storage="_TrnStockTransferItems", ThisKey="Id", OtherKey="ItemInventoryId")]
		public EntitySet<TrnStockTransferItem> TrnStockTransferItems
		{
			get
			{
				return this._TrnStockTransferItems;
			}
			set
			{
				this._TrnStockTransferItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleInventory_TrnInventory", Storage="_TrnInventories", ThisKey="Id", OtherKey="ArticleInventoryId")]
		public EntitySet<TrnInventory> TrnInventories
		{
			get
			{
				return this._TrnInventories;
			}
			set
			{
				this._TrnInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleInventory_TrnSalesInvoiceItem", Storage="_TrnSalesInvoiceItems", ThisKey="Id", OtherKey="ItemInventoryId")]
		public EntitySet<TrnSalesInvoiceItem> TrnSalesInvoiceItems
		{
			get
			{
				return this._TrnSalesInvoiceItems;
			}
			set
			{
				this._TrnSalesInvoiceItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleInventory_TrnStockOutItem", Storage="_TrnStockOutItems", ThisKey="Id", OtherKey="ItemInventoryId")]
		public EntitySet<TrnStockOutItem> TrnStockOutItems
		{
			get
			{
				return this._TrnStockOutItems;
			}
			set
			{
				this._TrnStockOutItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleInventory", Storage="_MstArticle", ThisKey="ArticleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.MstArticleInventories.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.MstArticleInventories.Add(this);
						this._ArticleId = value.Id;
					}
					else
					{
						this._ArticleId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_MstArticleInventory", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.MstArticleInventories.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.MstArticleInventories.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnStockTransferItems(TrnStockTransferItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleInventory = this;
		}
		
		private void detach_TrnStockTransferItems(TrnStockTransferItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleInventory = null;
		}
		
		private void attach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleInventory = this;
		}
		
		private void detach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleInventory = null;
		}
		
		private void attach_TrnSalesInvoiceItems(TrnSalesInvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleInventory = this;
		}
		
		private void detach_TrnSalesInvoiceItems(TrnSalesInvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleInventory = null;
		}
		
		private void attach_TrnStockOutItems(TrnStockOutItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleInventory = this;
		}
		
		private void detach_TrnStockOutItems(TrnStockOutItem entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleInventory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstArticlePrice")]
	public partial class MstArticlePrice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ArticleId;
		
		private string _PriceDescription;
		
		private decimal _Price;
		
		private string _Remarks;
		
		private EntityRef<MstArticle> _MstArticle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnArticleIdChanging(int value);
    partial void OnArticleIdChanged();
    partial void OnPriceDescriptionChanging(string value);
    partial void OnPriceDescriptionChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    #endregion
		
		public MstArticlePrice()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="Int NOT NULL")]
		public int ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceDescription", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PriceDescription
		{
			get
			{
				return this._PriceDescription;
			}
			set
			{
				if ((this._PriceDescription != value))
				{
					this.OnPriceDescriptionChanging(value);
					this.SendPropertyChanging();
					this._PriceDescription = value;
					this.SendPropertyChanged("PriceDescription");
					this.OnPriceDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,5) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticlePrice", Storage="_MstArticle", ThisKey="ArticleId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.MstArticlePrices.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.MstArticlePrices.Add(this);
						this._ArticleId = value.Id;
					}
					else
					{
						this._ArticleId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstArticleType")]
	public partial class MstArticleType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ArticleType;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstAccountArticleType> _MstAccountArticleTypes;
		
		private EntitySet<MstArticle> _MstArticles;
		
		private EntitySet<MstArticleGroup> _MstArticleGroups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnArticleTypeChanging(string value);
    partial void OnArticleTypeChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstArticleType()
		{
			this._MstAccountArticleTypes = new EntitySet<MstAccountArticleType>(new Action<MstAccountArticleType>(this.attach_MstAccountArticleTypes), new Action<MstAccountArticleType>(this.detach_MstAccountArticleTypes));
			this._MstArticles = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles), new Action<MstArticle>(this.detach_MstArticles));
			this._MstArticleGroups = new EntitySet<MstArticleGroup>(new Action<MstArticleGroup>(this.attach_MstArticleGroups), new Action<MstArticleGroup>(this.detach_MstArticleGroups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ArticleType
		{
			get
			{
				return this._ArticleType;
			}
			set
			{
				if ((this._ArticleType != value))
				{
					this.OnArticleTypeChanging(value);
					this.SendPropertyChanging();
					this._ArticleType = value;
					this.SendPropertyChanged("ArticleType");
					this.OnArticleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleType_MstAccountArticleType", Storage="_MstAccountArticleTypes", ThisKey="Id", OtherKey="ArticleTypeId")]
		public EntitySet<MstAccountArticleType> MstAccountArticleTypes
		{
			get
			{
				return this._MstAccountArticleTypes;
			}
			set
			{
				this._MstAccountArticleTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleType_MstArticle", Storage="_MstArticles", ThisKey="Id", OtherKey="ArticleTypeId")]
		public EntitySet<MstArticle> MstArticles
		{
			get
			{
				return this._MstArticles;
			}
			set
			{
				this._MstArticles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleType_MstArticleGroup", Storage="_MstArticleGroups", ThisKey="Id", OtherKey="ArticleTypeId")]
		public EntitySet<MstArticleGroup> MstArticleGroups
		{
			get
			{
				return this._MstArticleGroups;
			}
			set
			{
				this._MstArticleGroups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstAccountArticleTypes(MstAccountArticleType entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleType = this;
		}
		
		private void detach_MstAccountArticleTypes(MstAccountArticleType entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleType = null;
		}
		
		private void attach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleType = this;
		}
		
		private void detach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleType = null;
		}
		
		private void attach_MstArticleGroups(MstArticleGroup entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleType = this;
		}
		
		private void detach_MstArticleGroups(MstArticleGroup entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstArticleUnit")]
	public partial class MstArticleUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ArticleId;
		
		private int _UnitId;
		
		private decimal _Multiplier;
		
		private System.Nullable<bool> _IsCountUnit;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstUnit> _MstUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnArticleIdChanging(int value);
    partial void OnArticleIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnMultiplierChanging(decimal value);
    partial void OnMultiplierChanged();
    partial void OnIsCountUnitChanging(System.Nullable<bool> value);
    partial void OnIsCountUnitChanged();
    #endregion
		
		public MstArticleUnit()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstUnit = default(EntityRef<MstUnit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="Int NOT NULL")]
		public int ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Multiplier", DbType="Decimal(18,12) NOT NULL")]
		public decimal Multiplier
		{
			get
			{
				return this._Multiplier;
			}
			set
			{
				if ((this._Multiplier != value))
				{
					this.OnMultiplierChanging(value);
					this.SendPropertyChanging();
					this._Multiplier = value;
					this.SendPropertyChanged("Multiplier");
					this.OnMultiplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCountUnit", DbType="Bit")]
		public System.Nullable<bool> IsCountUnit
		{
			get
			{
				return this._IsCountUnit;
			}
			set
			{
				if ((this._IsCountUnit != value))
				{
					this.OnIsCountUnitChanging(value);
					this.SendPropertyChanging();
					this._IsCountUnit = value;
					this.SendPropertyChanged("IsCountUnit");
					this.OnIsCountUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_MstArticleUnit", Storage="_MstArticle", ThisKey="ArticleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.MstArticleUnits.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.MstArticleUnits.Add(this);
						this._ArticleId = value.Id;
					}
					else
					{
						this._ArticleId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_MstArticleUnit", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.MstArticleUnits.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.MstArticleUnits.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstBranch")]
	public partial class MstBranch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CompanyId;
		
		private string _BranchCode;
		
		private string _Branch;
		
		private string _Address;
		
		private string _ContactNumber;
		
		private string _TaxNumber;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstArticleInventory> _MstArticleInventories;
		
		private EntitySet<TrnCollection> _TrnCollections;
		
		private EntitySet<TrnCollectionLine> _TrnCollectionLines;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements;
		
		private EntitySet<TrnDisbursementLine> _TrnDisbursementLines;
		
		private EntitySet<TrnInventory> _TrnInventories;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntitySet<TrnJournalVoucherLine> _TrnJournalVoucherLines;
		
		private EntitySet<TrnPurchaseOrder> _TrnPurchaseOrders;
		
		private EntitySet<TrnReceivingReceipt> _TrnReceivingReceipts;
		
		private EntitySet<TrnReceivingReceiptItem> _TrnReceivingReceiptItems;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices;
		
		private EntitySet<TrnStockCount> _TrnStockCounts;
		
		private EntitySet<TrnStockIn> _TrnStockIns;
		
		private EntitySet<TrnStockOut> _TrnStockOuts;
		
		private EntitySet<TrnStockTransfer> _TrnStockTransfers;
		
		private EntitySet<TrnStockTransfer> _TrnStockTransfers1;
		
		private EntityRef<MstCompany> _MstCompany;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnBranchCodeChanging(string value);
    partial void OnBranchCodeChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    partial void OnTaxNumberChanging(string value);
    partial void OnTaxNumberChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstBranch()
		{
			this._MstArticleInventories = new EntitySet<MstArticleInventory>(new Action<MstArticleInventory>(this.attach_MstArticleInventories), new Action<MstArticleInventory>(this.detach_MstArticleInventories));
			this._TrnCollections = new EntitySet<TrnCollection>(new Action<TrnCollection>(this.attach_TrnCollections), new Action<TrnCollection>(this.detach_TrnCollections));
			this._TrnCollectionLines = new EntitySet<TrnCollectionLine>(new Action<TrnCollectionLine>(this.attach_TrnCollectionLines), new Action<TrnCollectionLine>(this.detach_TrnCollectionLines));
			this._TrnDisbursements = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements), new Action<TrnDisbursement>(this.detach_TrnDisbursements));
			this._TrnDisbursementLines = new EntitySet<TrnDisbursementLine>(new Action<TrnDisbursementLine>(this.attach_TrnDisbursementLines), new Action<TrnDisbursementLine>(this.detach_TrnDisbursementLines));
			this._TrnInventories = new EntitySet<TrnInventory>(new Action<TrnInventory>(this.attach_TrnInventories), new Action<TrnInventory>(this.detach_TrnInventories));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._TrnJournalVoucherLines = new EntitySet<TrnJournalVoucherLine>(new Action<TrnJournalVoucherLine>(this.attach_TrnJournalVoucherLines), new Action<TrnJournalVoucherLine>(this.detach_TrnJournalVoucherLines));
			this._TrnPurchaseOrders = new EntitySet<TrnPurchaseOrder>(new Action<TrnPurchaseOrder>(this.attach_TrnPurchaseOrders), new Action<TrnPurchaseOrder>(this.detach_TrnPurchaseOrders));
			this._TrnReceivingReceipts = new EntitySet<TrnReceivingReceipt>(new Action<TrnReceivingReceipt>(this.attach_TrnReceivingReceipts), new Action<TrnReceivingReceipt>(this.detach_TrnReceivingReceipts));
			this._TrnReceivingReceiptItems = new EntitySet<TrnReceivingReceiptItem>(new Action<TrnReceivingReceiptItem>(this.attach_TrnReceivingReceiptItems), new Action<TrnReceivingReceiptItem>(this.detach_TrnReceivingReceiptItems));
			this._TrnSalesInvoices = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices));
			this._TrnStockCounts = new EntitySet<TrnStockCount>(new Action<TrnStockCount>(this.attach_TrnStockCounts), new Action<TrnStockCount>(this.detach_TrnStockCounts));
			this._TrnStockIns = new EntitySet<TrnStockIn>(new Action<TrnStockIn>(this.attach_TrnStockIns), new Action<TrnStockIn>(this.detach_TrnStockIns));
			this._TrnStockOuts = new EntitySet<TrnStockOut>(new Action<TrnStockOut>(this.attach_TrnStockOuts), new Action<TrnStockOut>(this.detach_TrnStockOuts));
			this._TrnStockTransfers = new EntitySet<TrnStockTransfer>(new Action<TrnStockTransfer>(this.attach_TrnStockTransfers), new Action<TrnStockTransfer>(this.detach_TrnStockTransfers));
			this._TrnStockTransfers1 = new EntitySet<TrnStockTransfer>(new Action<TrnStockTransfer>(this.attach_TrnStockTransfers1), new Action<TrnStockTransfer>(this.detach_TrnStockTransfers1));
			this._MstCompany = default(EntityRef<MstCompany>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._MstCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string BranchCode
		{
			get
			{
				return this._BranchCode;
			}
			set
			{
				if ((this._BranchCode != value))
				{
					this.OnBranchCodeChanging(value);
					this.SendPropertyChanging();
					this._BranchCode = value;
					this.SendPropertyChanged("BranchCode");
					this.OnBranchCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxNumber", DbType="NVarChar(100)")]
		public string TaxNumber
		{
			get
			{
				return this._TaxNumber;
			}
			set
			{
				if ((this._TaxNumber != value))
				{
					this.OnTaxNumberChanging(value);
					this.SendPropertyChanging();
					this._TaxNumber = value;
					this.SendPropertyChanged("TaxNumber");
					this.OnTaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_MstArticleInventory", Storage="_MstArticleInventories", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<MstArticleInventory> MstArticleInventories
		{
			get
			{
				return this._MstArticleInventories;
			}
			set
			{
				this._MstArticleInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnCollection", Storage="_TrnCollections", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnCollection> TrnCollections
		{
			get
			{
				return this._TrnCollections;
			}
			set
			{
				this._TrnCollections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnCollectionLine", Storage="_TrnCollectionLines", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnCollectionLine> TrnCollectionLines
		{
			get
			{
				return this._TrnCollectionLines;
			}
			set
			{
				this._TrnCollectionLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnDisbursement", Storage="_TrnDisbursements", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnDisbursement> TrnDisbursements
		{
			get
			{
				return this._TrnDisbursements;
			}
			set
			{
				this._TrnDisbursements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnDisbursementLine", Storage="_TrnDisbursementLines", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnDisbursementLine> TrnDisbursementLines
		{
			get
			{
				return this._TrnDisbursementLines;
			}
			set
			{
				this._TrnDisbursementLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnInventory", Storage="_TrnInventories", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnInventory> TrnInventories
		{
			get
			{
				return this._TrnInventories;
			}
			set
			{
				this._TrnInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnJournalVoucherLine", Storage="_TrnJournalVoucherLines", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnJournalVoucherLine> TrnJournalVoucherLines
		{
			get
			{
				return this._TrnJournalVoucherLines;
			}
			set
			{
				this._TrnJournalVoucherLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnPurchaseOrder", Storage="_TrnPurchaseOrders", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnPurchaseOrder> TrnPurchaseOrders
		{
			get
			{
				return this._TrnPurchaseOrders;
			}
			set
			{
				this._TrnPurchaseOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnReceivingReceipt", Storage="_TrnReceivingReceipts", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnReceivingReceipt> TrnReceivingReceipts
		{
			get
			{
				return this._TrnReceivingReceipts;
			}
			set
			{
				this._TrnReceivingReceipts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnReceivingReceiptItem", Storage="_TrnReceivingReceiptItems", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnReceivingReceiptItem> TrnReceivingReceiptItems
		{
			get
			{
				return this._TrnReceivingReceiptItems;
			}
			set
			{
				this._TrnReceivingReceiptItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnSalesInvoice", Storage="_TrnSalesInvoices", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices
		{
			get
			{
				return this._TrnSalesInvoices;
			}
			set
			{
				this._TrnSalesInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnStockCount", Storage="_TrnStockCounts", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnStockCount> TrnStockCounts
		{
			get
			{
				return this._TrnStockCounts;
			}
			set
			{
				this._TrnStockCounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnStockIn", Storage="_TrnStockIns", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnStockIn> TrnStockIns
		{
			get
			{
				return this._TrnStockIns;
			}
			set
			{
				this._TrnStockIns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnStockOut", Storage="_TrnStockOuts", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnStockOut> TrnStockOuts
		{
			get
			{
				return this._TrnStockOuts;
			}
			set
			{
				this._TrnStockOuts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnStockTransfer", Storage="_TrnStockTransfers", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnStockTransfer> TrnStockTransfers
		{
			get
			{
				return this._TrnStockTransfers;
			}
			set
			{
				this._TrnStockTransfers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnStockTransfer1", Storage="_TrnStockTransfers1", ThisKey="Id", OtherKey="ToBranchId")]
		public EntitySet<TrnStockTransfer> TrnStockTransfers1
		{
			get
			{
				return this._TrnStockTransfers1;
			}
			set
			{
				this._TrnStockTransfers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCompany_MstBranch", Storage="_MstCompany", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true)]
		public MstCompany MstCompany
		{
			get
			{
				return this._MstCompany.Entity;
			}
			set
			{
				MstCompany previousValue = this._MstCompany.Entity;
				if (((previousValue != value) 
							|| (this._MstCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstCompany.Entity = null;
						previousValue.MstBranches.Remove(this);
					}
					this._MstCompany.Entity = value;
					if ((value != null))
					{
						value.MstBranches.Add(this);
						this._CompanyId = value.Id;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("MstCompany");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstArticleInventories(MstArticleInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_MstArticleInventories(MstArticleInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnCollections(TrnCollection entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnDisbursementLines(TrnDisbursementLine entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnDisbursementLines(TrnDisbursementLine entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnJournalVoucherLines(TrnJournalVoucherLine entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnJournalVoucherLines(TrnJournalVoucherLine entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnPurchaseOrders(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnPurchaseOrders(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnReceivingReceipts(TrnReceivingReceipt entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnReceivingReceipts(TrnReceivingReceipt entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnReceivingReceiptItems(TrnReceivingReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnReceivingReceiptItems(TrnReceivingReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnStockCounts(TrnStockCount entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnStockCounts(TrnStockCount entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnStockIns(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnStockIns(TrnStockIn entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnStockOuts(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnStockOuts(TrnStockOut entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnStockTransfers(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnStockTransfers(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_TrnStockTransfers1(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch1 = this;
		}
		
		private void detach_TrnStockTransfers1(TrnStockTransfer entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstCompany")]
	public partial class MstCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Company;
		
		private string _Address;
		
		private string _ContactNumber;
		
		private string _TaxNumber;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstBranch> _MstBranches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    partial void OnTaxNumberChanging(string value);
    partial void OnTaxNumberChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstCompany()
		{
			this._MstBranches = new EntitySet<MstBranch>(new Action<MstBranch>(this.attach_MstBranches), new Action<MstBranch>(this.detach_MstBranches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TaxNumber
		{
			get
			{
				return this._TaxNumber;
			}
			set
			{
				if ((this._TaxNumber != value))
				{
					this.OnTaxNumberChanging(value);
					this.SendPropertyChanging();
					this._TaxNumber = value;
					this.SendPropertyChanged("TaxNumber");
					this.OnTaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCompany_MstBranch", Storage="_MstBranches", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<MstBranch> MstBranches
		{
			get
			{
				return this._MstBranches;
			}
			set
			{
				this._MstBranches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstBranches(MstBranch entity)
		{
			this.SendPropertyChanging();
			entity.MstCompany = this;
		}
		
		private void detach_MstBranches(MstBranch entity)
		{
			this.SendPropertyChanging();
			entity.MstCompany = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstDiscount")]
	public partial class MstDiscount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Discount;
		
		private decimal _DiscountRate;
		
		private bool _IsInclusive;
		
		private int _AccountId;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnSalesInvoiceItem> _TrnSalesInvoiceItems;
		
		private EntityRef<MstAccount> _MstAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDiscountChanging(string value);
    partial void OnDiscountChanged();
    partial void OnDiscountRateChanging(decimal value);
    partial void OnDiscountRateChanged();
    partial void OnIsInclusiveChanging(bool value);
    partial void OnIsInclusiveChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstDiscount()
		{
			this._TrnSalesInvoiceItems = new EntitySet<TrnSalesInvoiceItem>(new Action<TrnSalesInvoiceItem>(this.attach_TrnSalesInvoiceItems), new Action<TrnSalesInvoiceItem>(this.detach_TrnSalesInvoiceItems));
			this._MstAccount = default(EntityRef<MstAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal DiscountRate
		{
			get
			{
				return this._DiscountRate;
			}
			set
			{
				if ((this._DiscountRate != value))
				{
					this.OnDiscountRateChanging(value);
					this.SendPropertyChanging();
					this._DiscountRate = value;
					this.SendPropertyChanged("DiscountRate");
					this.OnDiscountRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInclusive", DbType="Bit NOT NULL")]
		public bool IsInclusive
		{
			get
			{
				return this._IsInclusive;
			}
			set
			{
				if ((this._IsInclusive != value))
				{
					this.OnIsInclusiveChanging(value);
					this.SendPropertyChanging();
					this._IsInclusive = value;
					this.SendPropertyChanged("IsInclusive");
					this.OnIsInclusiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstDiscount_TrnSalesInvoiceItem", Storage="_TrnSalesInvoiceItems", ThisKey="Id", OtherKey="DiscountId")]
		public EntitySet<TrnSalesInvoiceItem> TrnSalesInvoiceItems
		{
			get
			{
				return this._TrnSalesInvoiceItems;
			}
			set
			{
				this._TrnSalesInvoiceItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstDiscount", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.MstDiscounts.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.MstDiscounts.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnSalesInvoiceItems(TrnSalesInvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.MstDiscount = this;
		}
		
		private void detach_TrnSalesInvoiceItems(TrnSalesInvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.MstDiscount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstPayType")]
	public partial class MstPayType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _PayType;
		
		private int _AccountId;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnCollectionLine> _TrnCollectionLines;
		
		private EntitySet<TrnDisbursement> _TrnDisbursements;
		
		private EntityRef<MstAccount> _MstAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPayTypeChanging(string value);
    partial void OnPayTypeChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstPayType()
		{
			this._TrnCollectionLines = new EntitySet<TrnCollectionLine>(new Action<TrnCollectionLine>(this.attach_TrnCollectionLines), new Action<TrnCollectionLine>(this.detach_TrnCollectionLines));
			this._TrnDisbursements = new EntitySet<TrnDisbursement>(new Action<TrnDisbursement>(this.attach_TrnDisbursements), new Action<TrnDisbursement>(this.detach_TrnDisbursements));
			this._MstAccount = default(EntityRef<MstAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayType", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string PayType
		{
			get
			{
				return this._PayType;
			}
			set
			{
				if ((this._PayType != value))
				{
					this.OnPayTypeChanging(value);
					this.SendPropertyChanging();
					this._PayType = value;
					this.SendPropertyChanged("PayType");
					this.OnPayTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayType_TrnCollectionLine", Storage="_TrnCollectionLines", ThisKey="Id", OtherKey="PayTypeId")]
		public EntitySet<TrnCollectionLine> TrnCollectionLines
		{
			get
			{
				return this._TrnCollectionLines;
			}
			set
			{
				this._TrnCollectionLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayType_TrnDisbursement", Storage="_TrnDisbursements", ThisKey="Id", OtherKey="PayTypeId")]
		public EntitySet<TrnDisbursement> TrnDisbursements
		{
			get
			{
				return this._TrnDisbursements;
			}
			set
			{
				this._TrnDisbursements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstPayType", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.MstPayTypes.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.MstPayTypes.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstPayType = this;
		}
		
		private void detach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.MstPayType = null;
		}
		
		private void attach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstPayType = this;
		}
		
		private void detach_TrnDisbursements(TrnDisbursement entity)
		{
			this.SendPropertyChanging();
			entity.MstPayType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstTaxType")]
	public partial class MstTaxType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TaxType;
		
		private decimal _TaxRate;
		
		private bool _IsInclusive;
		
		private int _AccountId;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstArticle> _MstArticles;
		
		private EntitySet<MstArticle> _MstArticles1;
		
		private EntitySet<MstArticle> _MstArticles2;
		
		private EntitySet<TrnReceivingReceiptItem> _TrnReceivingReceiptItems;
		
		private EntitySet<TrnReceivingReceiptItem> _TrnReceivingReceiptItems1;
		
		private EntitySet<TrnSalesInvoiceItem> _TrnSalesInvoiceItems;
		
		private EntityRef<MstAccount> _MstAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTaxTypeChanging(string value);
    partial void OnTaxTypeChanged();
    partial void OnTaxRateChanging(decimal value);
    partial void OnTaxRateChanged();
    partial void OnIsInclusiveChanging(bool value);
    partial void OnIsInclusiveChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstTaxType()
		{
			this._MstArticles = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles), new Action<MstArticle>(this.detach_MstArticles));
			this._MstArticles1 = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles1), new Action<MstArticle>(this.detach_MstArticles1));
			this._MstArticles2 = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles2), new Action<MstArticle>(this.detach_MstArticles2));
			this._TrnReceivingReceiptItems = new EntitySet<TrnReceivingReceiptItem>(new Action<TrnReceivingReceiptItem>(this.attach_TrnReceivingReceiptItems), new Action<TrnReceivingReceiptItem>(this.detach_TrnReceivingReceiptItems));
			this._TrnReceivingReceiptItems1 = new EntitySet<TrnReceivingReceiptItem>(new Action<TrnReceivingReceiptItem>(this.attach_TrnReceivingReceiptItems1), new Action<TrnReceivingReceiptItem>(this.detach_TrnReceivingReceiptItems1));
			this._TrnSalesInvoiceItems = new EntitySet<TrnSalesInvoiceItem>(new Action<TrnSalesInvoiceItem>(this.attach_TrnSalesInvoiceItems), new Action<TrnSalesInvoiceItem>(this.detach_TrnSalesInvoiceItems));
			this._MstAccount = default(EntityRef<MstAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TaxType
		{
			get
			{
				return this._TaxType;
			}
			set
			{
				if ((this._TaxType != value))
				{
					this.OnTaxTypeChanging(value);
					this.SendPropertyChanging();
					this._TaxType = value;
					this.SendPropertyChanged("TaxType");
					this.OnTaxTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal TaxRate
		{
			get
			{
				return this._TaxRate;
			}
			set
			{
				if ((this._TaxRate != value))
				{
					this.OnTaxRateChanging(value);
					this.SendPropertyChanging();
					this._TaxRate = value;
					this.SendPropertyChanged("TaxRate");
					this.OnTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInclusive", DbType="Bit NOT NULL")]
		public bool IsInclusive
		{
			get
			{
				return this._IsInclusive;
			}
			set
			{
				if ((this._IsInclusive != value))
				{
					this.OnIsInclusiveChanging(value);
					this.SendPropertyChanging();
					this._IsInclusive = value;
					this.SendPropertyChanged("IsInclusive");
					this.OnIsInclusiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTaxType_MstArticle", Storage="_MstArticles", ThisKey="Id", OtherKey="OutputTaxId")]
		public EntitySet<MstArticle> MstArticles
		{
			get
			{
				return this._MstArticles;
			}
			set
			{
				this._MstArticles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTaxType_MstArticle1", Storage="_MstArticles1", ThisKey="Id", OtherKey="InputTaxId")]
		public EntitySet<MstArticle> MstArticles1
		{
			get
			{
				return this._MstArticles1;
			}
			set
			{
				this._MstArticles1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTaxType_MstArticle2", Storage="_MstArticles2", ThisKey="Id", OtherKey="WTaxTypeId")]
		public EntitySet<MstArticle> MstArticles2
		{
			get
			{
				return this._MstArticles2;
			}
			set
			{
				this._MstArticles2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTaxType_TrnReceivingReceiptItem", Storage="_TrnReceivingReceiptItems", ThisKey="Id", OtherKey="VATId")]
		public EntitySet<TrnReceivingReceiptItem> TrnReceivingReceiptItems
		{
			get
			{
				return this._TrnReceivingReceiptItems;
			}
			set
			{
				this._TrnReceivingReceiptItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTaxType_TrnReceivingReceiptItem1", Storage="_TrnReceivingReceiptItems1", ThisKey="Id", OtherKey="WTAXId")]
		public EntitySet<TrnReceivingReceiptItem> TrnReceivingReceiptItems1
		{
			get
			{
				return this._TrnReceivingReceiptItems1;
			}
			set
			{
				this._TrnReceivingReceiptItems1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTaxType_TrnSalesInvoiceItem", Storage="_TrnSalesInvoiceItems", ThisKey="Id", OtherKey="VATId")]
		public EntitySet<TrnSalesInvoiceItem> TrnSalesInvoiceItems
		{
			get
			{
				return this._TrnSalesInvoiceItems;
			}
			set
			{
				this._TrnSalesInvoiceItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstTaxType", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.MstTaxTypes.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.MstTaxTypes.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstTaxType = this;
		}
		
		private void detach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstTaxType = null;
		}
		
		private void attach_MstArticles1(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstTaxType1 = this;
		}
		
		private void detach_MstArticles1(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstTaxType1 = null;
		}
		
		private void attach_MstArticles2(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstTaxType2 = this;
		}
		
		private void detach_MstArticles2(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstTaxType2 = null;
		}
		
		private void attach_TrnReceivingReceiptItems(TrnReceivingReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.MstTaxType = this;
		}
		
		private void detach_TrnReceivingReceiptItems(TrnReceivingReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.MstTaxType = null;
		}
		
		private void attach_TrnReceivingReceiptItems1(TrnReceivingReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.MstTaxType1 = this;
		}
		
		private void detach_TrnReceivingReceiptItems1(TrnReceivingReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.MstTaxType1 = null;
		}
		
		private void attach_TrnSalesInvoiceItems(TrnSalesInvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.MstTaxType = this;
		}
		
		private void detach_TrnSalesInvoiceItems(TrnSalesInvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.MstTaxType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstTerm")]
	public partial class MstTerm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Term;
		
		private decimal _NumberOfDays;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstArticle> _MstArticles;
		
		private EntitySet<TrnPurchaseOrder> _TrnPurchaseOrders;
		
		private EntitySet<TrnReceivingReceipt> _TrnReceivingReceipts;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTermChanging(string value);
    partial void OnTermChanged();
    partial void OnNumberOfDaysChanging(decimal value);
    partial void OnNumberOfDaysChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstTerm()
		{
			this._MstArticles = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles), new Action<MstArticle>(this.detach_MstArticles));
			this._TrnPurchaseOrders = new EntitySet<TrnPurchaseOrder>(new Action<TrnPurchaseOrder>(this.attach_TrnPurchaseOrders), new Action<TrnPurchaseOrder>(this.detach_TrnPurchaseOrders));
			this._TrnReceivingReceipts = new EntitySet<TrnReceivingReceipt>(new Action<TrnReceivingReceipt>(this.attach_TrnReceivingReceipts), new Action<TrnReceivingReceipt>(this.detach_TrnReceivingReceipts));
			this._TrnSalesInvoices = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this.OnTermChanging(value);
					this.SendPropertyChanging();
					this._Term = value;
					this.SendPropertyChanged("Term");
					this.OnTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfDays", DbType="Decimal(18,5) NOT NULL")]
		public decimal NumberOfDays
		{
			get
			{
				return this._NumberOfDays;
			}
			set
			{
				if ((this._NumberOfDays != value))
				{
					this.OnNumberOfDaysChanging(value);
					this.SendPropertyChanging();
					this._NumberOfDays = value;
					this.SendPropertyChanged("NumberOfDays");
					this.OnNumberOfDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_MstArticle", Storage="_MstArticles", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<MstArticle> MstArticles
		{
			get
			{
				return this._MstArticles;
			}
			set
			{
				this._MstArticles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_TrnPurchaseOrder", Storage="_TrnPurchaseOrders", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<TrnPurchaseOrder> TrnPurchaseOrders
		{
			get
			{
				return this._TrnPurchaseOrders;
			}
			set
			{
				this._TrnPurchaseOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_TrnReceivingReceipt", Storage="_TrnReceivingReceipts", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<TrnReceivingReceipt> TrnReceivingReceipts
		{
			get
			{
				return this._TrnReceivingReceipts;
			}
			set
			{
				this._TrnReceivingReceipts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_TrnSalesInvoice", Storage="_TrnSalesInvoices", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices
		{
			get
			{
				return this._TrnSalesInvoices;
			}
			set
			{
				this._TrnSalesInvoices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = this;
		}
		
		private void detach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = null;
		}
		
		private void attach_TrnPurchaseOrders(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = this;
		}
		
		private void detach_TrnPurchaseOrders(TrnPurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = null;
		}
		
		private void attach_TrnReceivingReceipts(TrnReceivingReceipt entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = this;
		}
		
		private void detach_TrnReceivingReceipts(TrnReceivingReceipt entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = null;
		}
		
		private void attach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = this;
		}
		
		private void detach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstUnit")]
	public partial class MstUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Unit;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnStockTransferItem> _TrnStockTransferItems;
		
		private EntitySet<TrnStockTransferItem> _TrnStockTransferItems1;
		
		private EntitySet<MstArticle> _MstArticles;
		
		private EntitySet<MstArticleUnit> _MstArticleUnits;
		
		private EntitySet<TrnPurchaseOrderItem> _TrnPurchaseOrderItems;
		
		private EntitySet<TrnReceivingReceiptItem> _TrnReceivingReceiptItems;
		
		private EntitySet<TrnReceivingReceiptItem> _TrnReceivingReceiptItems1;
		
		private EntitySet<TrnSalesInvoiceItem> _TrnSalesInvoiceItems;
		
		private EntitySet<TrnSalesInvoiceItem> _TrnSalesInvoiceItems1;
		
		private EntitySet<TrnStockInItem> _TrnStockInItems;
		
		private EntitySet<TrnStockInItem> _TrnStockInItems1;
		
		private EntitySet<TrnStockOutItem> _TrnStockOutItems;
		
		private EntitySet<TrnStockOutItem> _TrnStockOutItems1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstUnit()
		{
			this._TrnStockTransferItems = new EntitySet<TrnStockTransferItem>(new Action<TrnStockTransferItem>(this.attach_TrnStockTransferItems), new Action<TrnStockTransferItem>(this.detach_TrnStockTransferItems));
			this._TrnStockTransferItems1 = new EntitySet<TrnStockTransferItem>(new Action<TrnStockTransferItem>(this.attach_TrnStockTransferItems1), new Action<TrnStockTransferItem>(this.detach_TrnStockTransferItems1));
			this._MstArticles = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles), new Action<MstArticle>(this.detach_MstArticles));
			this._MstArticleUnits = new EntitySet<MstArticleUnit>(new Action<MstArticleUnit>(this.attach_MstArticleUnits), new Action<MstArticleUnit>(this.detach_MstArticleUnits));
			this._TrnPurchaseOrderItems = new EntitySet<TrnPurchaseOrderItem>(new Action<TrnPurchaseOrderItem>(this.attach_TrnPurchaseOrderItems), new Action<TrnPurchaseOrderItem>(this.detach_TrnPurchaseOrderItems));
			this._TrnReceivingReceiptItems = new EntitySet<TrnReceivingReceiptItem>(new Action<TrnReceivingReceiptItem>(this.attach_TrnReceivingReceiptItems), new Action<TrnReceivingReceiptItem>(this.detach_TrnReceivingReceiptItems));
			this._TrnReceivingReceiptItems1 = new EntitySet<TrnReceivingReceiptItem>(new Action<TrnReceivingReceiptItem>(this.attach_TrnReceivingReceiptItems1), new Action<TrnReceivingReceiptItem>(this.detach_TrnReceivingReceiptItems1));
			this._TrnSalesInvoiceItems = new EntitySet<TrnSalesInvoiceItem>(new Action<TrnSalesInvoiceItem>(this.attach_TrnSalesInvoiceItems), new Action<TrnSalesInvoiceItem>(this.detach_TrnSalesInvoiceItems));
			this._TrnSalesInvoiceItems1 = new EntitySet<TrnSalesInvoiceItem>(new Action<TrnSalesInvoiceItem>(this.attach_TrnSalesInvoiceItems1), new Action<TrnSalesInvoiceItem>(this.detach_TrnSalesInvoiceItems1));
			this._TrnStockInItems = new EntitySet<TrnStockInItem>(new Action<TrnStockInItem>(this.attach_TrnStockInItems), new Action<TrnStockInItem>(this.detach_TrnStockInItems));
			this._TrnStockInItems1 = new EntitySet<TrnStockInItem>(new Action<TrnStockInItem>(this.attach_TrnStockInItems1), new Action<TrnStockInItem>(this.detach_TrnStockInItems1));
			this._TrnStockOutItems = new EntitySet<TrnStockOutItem>(new Action<TrnStockOutItem>(this.attach_TrnStockOutItems), new Action<TrnStockOutItem>(this.detach_TrnStockOutItems));
			this._TrnStockOutItems1 = new EntitySet<TrnStockOutItem>(new Action<TrnStockOutItem>(this.attach_TrnStockOutItems1), new Action<TrnStockOutItem>(this.detach_TrnStockOutItems1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockTransferItem", Storage="_TrnStockTransferItems", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<TrnStockTransferItem> TrnStockTransferItems
		{
			get
			{
				return this._TrnStockTransferItems;
			}
			set
			{
				this._TrnStockTransferItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockTransferItem1", Storage="_TrnStockTransferItems1", ThisKey="Id", OtherKey="BaseUnitId")]
		public EntitySet<TrnStockTransferItem> TrnStockTransferItems1
		{
			get
			{
				return this._TrnStockTransferItems1;
			}
			set
			{
				this._TrnStockTransferItems1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_MstArticle", Storage="_MstArticles", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<MstArticle> MstArticles
		{
			get
			{
				return this._MstArticles;
			}
			set
			{
				this._MstArticles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_MstArticleUnit", Storage="_MstArticleUnits", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<MstArticleUnit> MstArticleUnits
		{
			get
			{
				return this._MstArticleUnits;
			}
			set
			{
				this._MstArticleUnits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnPurchaseOrderItem", Storage="_TrnPurchaseOrderItems", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<TrnPurchaseOrderItem> TrnPurchaseOrderItems
		{
			get
			{
				return this._TrnPurchaseOrderItems;
			}
			set
			{
				this._TrnPurchaseOrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnReceivingReceiptItem", Storage="_TrnReceivingReceiptItems", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<TrnReceivingReceiptItem> TrnReceivingReceiptItems
		{
			get
			{
				return this._TrnReceivingReceiptItems;
			}
			set
			{
				this._TrnReceivingReceiptItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnReceivingReceiptItem1", Storage="_TrnReceivingReceiptItems1", ThisKey="Id", OtherKey="BaseUnitId")]
		public EntitySet<TrnReceivingReceiptItem> TrnReceivingReceiptItems1
		{
			get
			{
				return this._TrnReceivingReceiptItems1;
			}
			set
			{
				this._TrnReceivingReceiptItems1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnSalesInvoiceItem", Storage="_TrnSalesInvoiceItems", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<TrnSalesInvoiceItem> TrnSalesInvoiceItems
		{
			get
			{
				return this._TrnSalesInvoiceItems;
			}
			set
			{
				this._TrnSalesInvoiceItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnSalesInvoiceItem1", Storage="_TrnSalesInvoiceItems1", ThisKey="Id", OtherKey="BaseUnitId")]
		public EntitySet<TrnSalesInvoiceItem> TrnSalesInvoiceItems1
		{
			get
			{
				return this._TrnSalesInvoiceItems1;
			}
			set
			{
				this._TrnSalesInvoiceItems1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockInItem", Storage="_TrnStockInItems", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<TrnStockInItem> TrnStockInItems
		{
			get
			{
				return this._TrnStockInItems;
			}
			set
			{
				this._TrnStockInItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockInItem1", Storage="_TrnStockInItems1", ThisKey="Id", OtherKey="BaseUnitId")]
		public EntitySet<TrnStockInItem> TrnStockInItems1
		{
			get
			{
				return this._TrnStockInItems1;
			}
			set
			{
				this._TrnStockInItems1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockOutItem", Storage="_TrnStockOutItems", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<TrnStockOutItem> TrnStockOutItems
		{
			get
			{
				return this._TrnStockOutItems;
			}
			set
			{
				this._TrnStockOutItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockOutItem1", Storage="_TrnStockOutItems1", ThisKey="Id", OtherKey="BaseUnitId")]
		public EntitySet<TrnStockOutItem> TrnStockOutItems1
		{
			get
			{
				return this._TrnStockOutItems1;
			}
			set
			{
				this._TrnStockOutItems1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnStockTransferItems(TrnStockTransferItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_TrnStockTransferItems(TrnStockTransferItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_TrnStockTransferItems1(TrnStockTransferItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit1 = this;
		}
		
		private void detach_TrnStockTransferItems1(TrnStockTransferItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit1 = null;
		}
		
		private void attach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_MstArticleUnits(MstArticleUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_MstArticleUnits(MstArticleUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_TrnPurchaseOrderItems(TrnPurchaseOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_TrnPurchaseOrderItems(TrnPurchaseOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_TrnReceivingReceiptItems(TrnReceivingReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_TrnReceivingReceiptItems(TrnReceivingReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_TrnReceivingReceiptItems1(TrnReceivingReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit1 = this;
		}
		
		private void detach_TrnReceivingReceiptItems1(TrnReceivingReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit1 = null;
		}
		
		private void attach_TrnSalesInvoiceItems(TrnSalesInvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_TrnSalesInvoiceItems(TrnSalesInvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_TrnSalesInvoiceItems1(TrnSalesInvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit1 = this;
		}
		
		private void detach_TrnSalesInvoiceItems1(TrnSalesInvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit1 = null;
		}
		
		private void attach_TrnStockInItems(TrnStockInItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_TrnStockInItems(TrnStockInItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_TrnStockInItems1(TrnStockInItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit1 = this;
		}
		
		private void detach_TrnStockInItems1(TrnStockInItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit1 = null;
		}
		
		private void attach_TrnStockOutItems(TrnStockOutItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_TrnStockOutItems(TrnStockOutItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
		
		private void attach_TrnStockOutItems1(TrnStockOutItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit1 = this;
		}
		
		private void detach_TrnStockOutItems1(TrnStockOutItem entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstUser")]
	public partial class MstUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserName;
		
		private string _Password;
		
		private string _FullName;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstUserForm> _MstUserForms;
		
		private EntitySet<SysAuditTrail> _SysAuditTrails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstUser()
		{
			this._MstUserForms = new EntitySet<MstUserForm>(new Action<MstUserForm>(this.attach_MstUserForms), new Action<MstUserForm>(this.detach_MstUserForms));
			this._SysAuditTrails = new EntitySet<SysAuditTrail>(new Action<SysAuditTrail>(this.attach_SysAuditTrails), new Action<SysAuditTrail>(this.detach_SysAuditTrails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUserForm", Storage="_MstUserForms", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<MstUserForm> MstUserForms
		{
			get
			{
				return this._MstUserForms;
			}
			set
			{
				this._MstUserForms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_SysAuditTrail", Storage="_SysAuditTrails", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<SysAuditTrail> SysAuditTrails
		{
			get
			{
				return this._SysAuditTrails;
			}
			set
			{
				this._SysAuditTrails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstUserForms(MstUserForm entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstUserForms(MstUserForm entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_SysAuditTrails(SysAuditTrail entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_SysAuditTrails(SysAuditTrail entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstUserForm")]
	public partial class MstUserForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private int _FormId;
		
		private bool _CanAdd;
		
		private bool _CanEdit;
		
		private bool _CanDelete;
		
		private bool _CanLock;
		
		private bool _CanUnlock;
		
		private bool _CanPrint;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<SysForm> _SysForm;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnFormIdChanging(int value);
    partial void OnFormIdChanged();
    partial void OnCanAddChanging(bool value);
    partial void OnCanAddChanged();
    partial void OnCanEditChanging(bool value);
    partial void OnCanEditChanged();
    partial void OnCanDeleteChanging(bool value);
    partial void OnCanDeleteChanged();
    partial void OnCanLockChanging(bool value);
    partial void OnCanLockChanged();
    partial void OnCanUnlockChanging(bool value);
    partial void OnCanUnlockChanged();
    partial void OnCanPrintChanging(bool value);
    partial void OnCanPrintChanged();
    #endregion
		
		public MstUserForm()
		{
			this._MstUser = default(EntityRef<MstUser>);
			this._SysForm = default(EntityRef<SysForm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormId", DbType="Int NOT NULL")]
		public int FormId
		{
			get
			{
				return this._FormId;
			}
			set
			{
				if ((this._FormId != value))
				{
					if (this._SysForm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFormIdChanging(value);
					this.SendPropertyChanging();
					this._FormId = value;
					this.SendPropertyChanged("FormId");
					this.OnFormIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAdd", DbType="Bit NOT NULL")]
		public bool CanAdd
		{
			get
			{
				return this._CanAdd;
			}
			set
			{
				if ((this._CanAdd != value))
				{
					this.OnCanAddChanging(value);
					this.SendPropertyChanging();
					this._CanAdd = value;
					this.SendPropertyChanged("CanAdd");
					this.OnCanAddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanEdit", DbType="Bit NOT NULL")]
		public bool CanEdit
		{
			get
			{
				return this._CanEdit;
			}
			set
			{
				if ((this._CanEdit != value))
				{
					this.OnCanEditChanging(value);
					this.SendPropertyChanging();
					this._CanEdit = value;
					this.SendPropertyChanged("CanEdit");
					this.OnCanEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanDelete", DbType="Bit NOT NULL")]
		public bool CanDelete
		{
			get
			{
				return this._CanDelete;
			}
			set
			{
				if ((this._CanDelete != value))
				{
					this.OnCanDeleteChanging(value);
					this.SendPropertyChanging();
					this._CanDelete = value;
					this.SendPropertyChanged("CanDelete");
					this.OnCanDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanLock", DbType="Bit NOT NULL")]
		public bool CanLock
		{
			get
			{
				return this._CanLock;
			}
			set
			{
				if ((this._CanLock != value))
				{
					this.OnCanLockChanging(value);
					this.SendPropertyChanging();
					this._CanLock = value;
					this.SendPropertyChanged("CanLock");
					this.OnCanLockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanUnlock", DbType="Bit NOT NULL")]
		public bool CanUnlock
		{
			get
			{
				return this._CanUnlock;
			}
			set
			{
				if ((this._CanUnlock != value))
				{
					this.OnCanUnlockChanging(value);
					this.SendPropertyChanging();
					this._CanUnlock = value;
					this.SendPropertyChanged("CanUnlock");
					this.OnCanUnlockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanPrint", DbType="Bit NOT NULL")]
		public bool CanPrint
		{
			get
			{
				return this._CanPrint;
			}
			set
			{
				if ((this._CanPrint != value))
				{
					this.OnCanPrintChanging(value);
					this.SendPropertyChanging();
					this._CanPrint = value;
					this.SendPropertyChanged("CanPrint");
					this.OnCanPrintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUserForm", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstUserForms.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstUserForms.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysForm_MstUserForm", Storage="_SysForm", ThisKey="FormId", OtherKey="Id", IsForeignKey=true)]
		public SysForm SysForm
		{
			get
			{
				return this._SysForm.Entity;
			}
			set
			{
				SysForm previousValue = this._SysForm.Entity;
				if (((previousValue != value) 
							|| (this._SysForm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SysForm.Entity = null;
						previousValue.MstUserForms.Remove(this);
					}
					this._SysForm.Entity = value;
					if ((value != null))
					{
						value.MstUserForms.Add(this);
						this._FormId = value.Id;
					}
					else
					{
						this._FormId = default(int);
					}
					this.SendPropertyChanged("SysForm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sheet3$")]
	public partial class Sheet3_
	{
		
		private string _ArticleCode;
		
		private string _ManualArticleCode;
		
		private string _Article;
		
		private string _Category;
		
		private System.Nullable<double> _ArticleTypeId;
		
		private System.Nullable<double> _ArticleGroupId;
		
		private System.Nullable<double> _AccountId;
		
		private System.Nullable<double> _SalesAccountId;
		
		private System.Nullable<double> _CostAccountId;
		
		private System.Nullable<double> _AssetAccountId;
		
		private System.Nullable<double> _ExpenseAccountId;
		
		private System.Nullable<double> _UnitID;
		
		private System.Nullable<double> _OutputTaxId;
		
		private System.Nullable<double> _InputTaxId;
		
		private System.Nullable<double> _WTaxTypeId;
		
		private System.Nullable<double> _Price;
		
		private System.Nullable<double> _Cost;
		
		private bool _IsInventory;
		
		private string _Particulars;
		
		private string _Address;
		
		private System.Nullable<double> _TermId;
		
		private string _ContactNumber;
		
		private string _ContactPerson;
		
		private string _TaxNumber;
		
		private System.Nullable<double> _CreditLimit;
		
		private System.Nullable<double> _DateAcquired;
		
		private System.Nullable<double> _UsefulLife;
		
		private System.Nullable<double> _SalvageValue;
		
		private string _ManualArticleOldCode;
		
		private bool _IsLocked;
		
		private System.Nullable<double> _CreatedById;
		
		private System.Nullable<double> _CreatedDateTime;
		
		private System.Nullable<double> _UpdatedById;
		
		private System.Nullable<double> _UpdatedDateTime;
		
		private System.Nullable<double> _ReorderQuantity;
		
		private System.Nullable<double> _zSupplierId;
		
		private string _zSubCategory1;
		
		private string _zSubCategory2;
		
		private string _zSubCategory3;
		
		private string _zSubCategory4;
		
		public Sheet3_()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleCode", DbType="NVarChar(255)")]
		public string ArticleCode
		{
			get
			{
				return this._ArticleCode;
			}
			set
			{
				if ((this._ArticleCode != value))
				{
					this._ArticleCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualArticleCode", DbType="NVarChar(255)")]
		public string ManualArticleCode
		{
			get
			{
				return this._ManualArticleCode;
			}
			set
			{
				if ((this._ManualArticleCode != value))
				{
					this._ManualArticleCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Article", DbType="NVarChar(255)")]
		public string Article
		{
			get
			{
				return this._Article;
			}
			set
			{
				if ((this._Article != value))
				{
					this._Article = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(255)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleTypeId", DbType="Float")]
		public System.Nullable<double> ArticleTypeId
		{
			get
			{
				return this._ArticleTypeId;
			}
			set
			{
				if ((this._ArticleTypeId != value))
				{
					this._ArticleTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleGroupId", DbType="Float")]
		public System.Nullable<double> ArticleGroupId
		{
			get
			{
				return this._ArticleGroupId;
			}
			set
			{
				if ((this._ArticleGroupId != value))
				{
					this._ArticleGroupId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Float")]
		public System.Nullable<double> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this._AccountId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesAccountId", DbType="Float")]
		public System.Nullable<double> SalesAccountId
		{
			get
			{
				return this._SalesAccountId;
			}
			set
			{
				if ((this._SalesAccountId != value))
				{
					this._SalesAccountId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostAccountId", DbType="Float")]
		public System.Nullable<double> CostAccountId
		{
			get
			{
				return this._CostAccountId;
			}
			set
			{
				if ((this._CostAccountId != value))
				{
					this._CostAccountId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetAccountId", DbType="Float")]
		public System.Nullable<double> AssetAccountId
		{
			get
			{
				return this._AssetAccountId;
			}
			set
			{
				if ((this._AssetAccountId != value))
				{
					this._AssetAccountId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenseAccountId", DbType="Float")]
		public System.Nullable<double> ExpenseAccountId
		{
			get
			{
				return this._ExpenseAccountId;
			}
			set
			{
				if ((this._ExpenseAccountId != value))
				{
					this._ExpenseAccountId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitID", DbType="Float")]
		public System.Nullable<double> UnitID
		{
			get
			{
				return this._UnitID;
			}
			set
			{
				if ((this._UnitID != value))
				{
					this._UnitID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutputTaxId", DbType="Float")]
		public System.Nullable<double> OutputTaxId
		{
			get
			{
				return this._OutputTaxId;
			}
			set
			{
				if ((this._OutputTaxId != value))
				{
					this._OutputTaxId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputTaxId", DbType="Float")]
		public System.Nullable<double> InputTaxId
		{
			get
			{
				return this._InputTaxId;
			}
			set
			{
				if ((this._InputTaxId != value))
				{
					this._InputTaxId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WTaxTypeId", DbType="Float")]
		public System.Nullable<double> WTaxTypeId
		{
			get
			{
				return this._WTaxTypeId;
			}
			set
			{
				if ((this._WTaxTypeId != value))
				{
					this._WTaxTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Float")]
		public System.Nullable<double> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this._Cost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInventory", DbType="Bit NOT NULL")]
		public bool IsInventory
		{
			get
			{
				return this._IsInventory;
			}
			set
			{
				if ((this._IsInventory != value))
				{
					this._IsInventory = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255)")]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this._Particulars = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="Float")]
		public System.Nullable<double> TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					this._TermId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(255)")]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this._ContactNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPerson", DbType="NVarChar(255)")]
		public string ContactPerson
		{
			get
			{
				return this._ContactPerson;
			}
			set
			{
				if ((this._ContactPerson != value))
				{
					this._ContactPerson = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxNumber", DbType="NVarChar(255)")]
		public string TaxNumber
		{
			get
			{
				return this._TaxNumber;
			}
			set
			{
				if ((this._TaxNumber != value))
				{
					this._TaxNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditLimit", DbType="Float")]
		public System.Nullable<double> CreditLimit
		{
			get
			{
				return this._CreditLimit;
			}
			set
			{
				if ((this._CreditLimit != value))
				{
					this._CreditLimit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAcquired", DbType="Float")]
		public System.Nullable<double> DateAcquired
		{
			get
			{
				return this._DateAcquired;
			}
			set
			{
				if ((this._DateAcquired != value))
				{
					this._DateAcquired = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsefulLife", DbType="Float")]
		public System.Nullable<double> UsefulLife
		{
			get
			{
				return this._UsefulLife;
			}
			set
			{
				if ((this._UsefulLife != value))
				{
					this._UsefulLife = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalvageValue", DbType="Float")]
		public System.Nullable<double> SalvageValue
		{
			get
			{
				return this._SalvageValue;
			}
			set
			{
				if ((this._SalvageValue != value))
				{
					this._SalvageValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualArticleOldCode", DbType="NVarChar(255)")]
		public string ManualArticleOldCode
		{
			get
			{
				return this._ManualArticleOldCode;
			}
			set
			{
				if ((this._ManualArticleOldCode != value))
				{
					this._ManualArticleOldCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this._IsLocked = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Float")]
		public System.Nullable<double> CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this._CreatedById = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="Float")]
		public System.Nullable<double> CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this._CreatedDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Float")]
		public System.Nullable<double> UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					this._UpdatedById = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="Float")]
		public System.Nullable<double> UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this._UpdatedDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReorderQuantity", DbType="Float")]
		public System.Nullable<double> ReorderQuantity
		{
			get
			{
				return this._ReorderQuantity;
			}
			set
			{
				if ((this._ReorderQuantity != value))
				{
					this._ReorderQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zSupplierId", DbType="Float")]
		public System.Nullable<double> zSupplierId
		{
			get
			{
				return this._zSupplierId;
			}
			set
			{
				if ((this._zSupplierId != value))
				{
					this._zSupplierId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zSubCategory1", DbType="NVarChar(255)")]
		public string zSubCategory1
		{
			get
			{
				return this._zSubCategory1;
			}
			set
			{
				if ((this._zSubCategory1 != value))
				{
					this._zSubCategory1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zSubCategory2", DbType="NVarChar(255)")]
		public string zSubCategory2
		{
			get
			{
				return this._zSubCategory2;
			}
			set
			{
				if ((this._zSubCategory2 != value))
				{
					this._zSubCategory2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zSubCategory3", DbType="NVarChar(255)")]
		public string zSubCategory3
		{
			get
			{
				return this._zSubCategory3;
			}
			set
			{
				if ((this._zSubCategory3 != value))
				{
					this._zSubCategory3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zSubCategory4", DbType="NVarChar(255)")]
		public string zSubCategory4
		{
			get
			{
				return this._zSubCategory4;
			}
			set
			{
				if ((this._zSubCategory4 != value))
				{
					this._zSubCategory4 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysAuditTrail")]
	public partial class SysAuditTrail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private System.DateTime _AuditDate;
		
		private string _TableInformation;
		
		private string _RecordInformation;
		
		private string _FormInformation;
		
		private string _ActionInformation;
		
		private EntityRef<MstUser> _MstUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnAuditDateChanging(System.DateTime value);
    partial void OnAuditDateChanged();
    partial void OnTableInformationChanging(string value);
    partial void OnTableInformationChanged();
    partial void OnRecordInformationChanging(string value);
    partial void OnRecordInformationChanged();
    partial void OnFormInformationChanging(string value);
    partial void OnFormInformationChanged();
    partial void OnActionInformationChanging(string value);
    partial void OnActionInformationChanged();
    #endregion
		
		public SysAuditTrail()
		{
			this._MstUser = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDate", DbType="DateTime NOT NULL")]
		public System.DateTime AuditDate
		{
			get
			{
				return this._AuditDate;
			}
			set
			{
				if ((this._AuditDate != value))
				{
					this.OnAuditDateChanging(value);
					this.SendPropertyChanging();
					this._AuditDate = value;
					this.SendPropertyChanged("AuditDate");
					this.OnAuditDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableInformation", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TableInformation
		{
			get
			{
				return this._TableInformation;
			}
			set
			{
				if ((this._TableInformation != value))
				{
					this.OnTableInformationChanging(value);
					this.SendPropertyChanging();
					this._TableInformation = value;
					this.SendPropertyChanged("TableInformation");
					this.OnTableInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordInformation", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string RecordInformation
		{
			get
			{
				return this._RecordInformation;
			}
			set
			{
				if ((this._RecordInformation != value))
				{
					this.OnRecordInformationChanging(value);
					this.SendPropertyChanging();
					this._RecordInformation = value;
					this.SendPropertyChanged("RecordInformation");
					this.OnRecordInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormInformation", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FormInformation
		{
			get
			{
				return this._FormInformation;
			}
			set
			{
				if ((this._FormInformation != value))
				{
					this.OnFormInformationChanging(value);
					this.SendPropertyChanging();
					this._FormInformation = value;
					this.SendPropertyChanged("FormInformation");
					this.OnFormInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionInformation", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ActionInformation
		{
			get
			{
				return this._ActionInformation;
			}
			set
			{
				if ((this._ActionInformation != value))
				{
					this.OnActionInformationChanging(value);
					this.SendPropertyChanging();
					this._ActionInformation = value;
					this.SendPropertyChanged("ActionInformation");
					this.OnActionInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_SysAuditTrail", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.SysAuditTrails.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.SysAuditTrails.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysForm")]
	public partial class SysForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _FormName;
		
		private string _Particulars;
		
		private EntitySet<MstUserForm> _MstUserForms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFormNameChanging(string value);
    partial void OnFormNameChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    #endregion
		
		public SysForm()
		{
			this._MstUserForms = new EntitySet<MstUserForm>(new Action<MstUserForm>(this.attach_MstUserForms), new Action<MstUserForm>(this.detach_MstUserForms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FormName
		{
			get
			{
				return this._FormName;
			}
			set
			{
				if ((this._FormName != value))
				{
					this.OnFormNameChanging(value);
					this.SendPropertyChanging();
					this._FormName = value;
					this.SendPropertyChanged("FormName");
					this.OnFormNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysForm_MstUserForm", Storage="_MstUserForms", ThisKey="Id", OtherKey="FormId")]
		public EntitySet<MstUserForm> MstUserForms
		{
			get
			{
				return this._MstUserForms;
			}
			set
			{
				this._MstUserForms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstUserForms(MstUserForm entity)
		{
			this.SendPropertyChanging();
			entity.SysForm = this;
		}
		
		private void detach_MstUserForms(MstUserForm entity)
		{
			this.SendPropertyChanging();
			entity.SysForm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnCollection")]
	public partial class TrnCollection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BranchId;
		
		private string _ORNumber;
		
		private System.DateTime _ORDate;
		
		private int _CustomerId;
		
		private string _Particulars;
		
		private string _ManualORNumber;
		
		private int _PreparedById;
		
		private int _CheckedById;
		
		private int _ApprovedById;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnCollectionLine> _TrnCollectionLines;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstBranch> _MstBranch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnORNumberChanging(string value);
    partial void OnORNumberChanged();
    partial void OnORDateChanging(System.DateTime value);
    partial void OnORDateChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnManualORNumberChanging(string value);
    partial void OnManualORNumberChanged();
    partial void OnPreparedByIdChanging(int value);
    partial void OnPreparedByIdChanged();
    partial void OnCheckedByIdChanging(int value);
    partial void OnCheckedByIdChanged();
    partial void OnApprovedByIdChanging(int value);
    partial void OnApprovedByIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnCollection()
		{
			this._TrnCollectionLines = new EntitySet<TrnCollectionLine>(new Action<TrnCollectionLine>(this.attach_TrnCollectionLines), new Action<TrnCollectionLine>(this.detach_TrnCollectionLines));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ORNumber
		{
			get
			{
				return this._ORNumber;
			}
			set
			{
				if ((this._ORNumber != value))
				{
					this.OnORNumberChanging(value);
					this.SendPropertyChanging();
					this._ORNumber = value;
					this.SendPropertyChanged("ORNumber");
					this.OnORNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORDate", DbType="DateTime NOT NULL")]
		public System.DateTime ORDate
		{
			get
			{
				return this._ORDate;
			}
			set
			{
				if ((this._ORDate != value))
				{
					this.OnORDateChanging(value);
					this.SendPropertyChanging();
					this._ORDate = value;
					this.SendPropertyChanged("ORDate");
					this.OnORDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualORNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ManualORNumber
		{
			get
			{
				return this._ManualORNumber;
			}
			set
			{
				if ((this._ManualORNumber != value))
				{
					this.OnManualORNumberChanging(value);
					this.SendPropertyChanging();
					this._ManualORNumber = value;
					this.SendPropertyChanged("ManualORNumber");
					this.OnManualORNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedById", DbType="Int NOT NULL")]
		public int PreparedById
		{
			get
			{
				return this._PreparedById;
			}
			set
			{
				if ((this._PreparedById != value))
				{
					this.OnPreparedByIdChanging(value);
					this.SendPropertyChanging();
					this._PreparedById = value;
					this.SendPropertyChanged("PreparedById");
					this.OnPreparedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedById", DbType="Int NOT NULL")]
		public int CheckedById
		{
			get
			{
				return this._CheckedById;
			}
			set
			{
				if ((this._CheckedById != value))
				{
					this.OnCheckedByIdChanging(value);
					this.SendPropertyChanging();
					this._CheckedById = value;
					this.SendPropertyChanged("CheckedById");
					this.OnCheckedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedById", DbType="Int NOT NULL")]
		public int ApprovedById
		{
			get
			{
				return this._ApprovedById;
			}
			set
			{
				if ((this._ApprovedById != value))
				{
					this.OnApprovedByIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedById = value;
					this.SendPropertyChanged("ApprovedById");
					this.OnApprovedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnCollection_TrnCollectionLine", Storage="_TrnCollectionLines", ThisKey="Id", OtherKey="ORId")]
		public EntitySet<TrnCollectionLine> TrnCollectionLines
		{
			get
			{
				return this._TrnCollectionLines;
			}
			set
			{
				this._TrnCollectionLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnCollection_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="ORId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnCollection", Storage="_MstArticle", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnCollections.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnCollections.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnCollection", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnCollections.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnCollections.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnCollection = this;
		}
		
		private void detach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnCollection = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnCollection = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnCollection = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnCollectionLine")]
	public partial class TrnCollectionLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ORId;
		
		private int _BranchId;
		
		private int _AccountId;
		
		private int _ArticleId;
		
		private System.Nullable<int> _SIId;
		
		private string _Particulars;
		
		private decimal _Amount;
		
		private int _PayTypeId;
		
		private string _CheckNumber;
		
		private System.DateTime _CheckDate;
		
		private string _CheckBank;
		
		private System.Nullable<int> _DepositoryBankId;
		
		private bool _IsClear;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstArticle> _MstArticle1;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstPayType> _MstPayType;
		
		private EntityRef<TrnCollection> _TrnCollection;
		
		private EntityRef<TrnSalesInvoice> _TrnSalesInvoice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnORIdChanging(int value);
    partial void OnORIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnArticleIdChanging(int value);
    partial void OnArticleIdChanged();
    partial void OnSIIdChanging(System.Nullable<int> value);
    partial void OnSIIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnPayTypeIdChanging(int value);
    partial void OnPayTypeIdChanged();
    partial void OnCheckNumberChanging(string value);
    partial void OnCheckNumberChanged();
    partial void OnCheckDateChanging(System.DateTime value);
    partial void OnCheckDateChanged();
    partial void OnCheckBankChanging(string value);
    partial void OnCheckBankChanged();
    partial void OnDepositoryBankIdChanging(System.Nullable<int> value);
    partial void OnDepositoryBankIdChanged();
    partial void OnIsClearChanging(bool value);
    partial void OnIsClearChanged();
    #endregion
		
		public TrnCollectionLine()
		{
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstArticle1 = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstPayType = default(EntityRef<MstPayType>);
			this._TrnCollection = default(EntityRef<TrnCollection>);
			this._TrnSalesInvoice = default(EntityRef<TrnSalesInvoice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORId", DbType="Int NOT NULL")]
		public int ORId
		{
			get
			{
				return this._ORId;
			}
			set
			{
				if ((this._ORId != value))
				{
					if (this._TrnCollection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnORIdChanging(value);
					this.SendPropertyChanging();
					this._ORId = value;
					this.SendPropertyChanged("ORId");
					this.OnORIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="Int NOT NULL")]
		public int ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIId", DbType="Int")]
		public System.Nullable<int> SIId
		{
			get
			{
				return this._SIId;
			}
			set
			{
				if ((this._SIId != value))
				{
					if (this._TrnSalesInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSIIdChanging(value);
					this.SendPropertyChanging();
					this._SIId = value;
					this.SendPropertyChanged("SIId");
					this.OnSIIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayTypeId", DbType="Int NOT NULL")]
		public int PayTypeId
		{
			get
			{
				return this._PayTypeId;
			}
			set
			{
				if ((this._PayTypeId != value))
				{
					if (this._MstPayType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PayTypeId = value;
					this.SendPropertyChanged("PayTypeId");
					this.OnPayTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CheckNumber
		{
			get
			{
				return this._CheckNumber;
			}
			set
			{
				if ((this._CheckNumber != value))
				{
					this.OnCheckNumberChanging(value);
					this.SendPropertyChanging();
					this._CheckNumber = value;
					this.SendPropertyChanged("CheckNumber");
					this.OnCheckNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime NOT NULL")]
		public System.DateTime CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckBank", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CheckBank
		{
			get
			{
				return this._CheckBank;
			}
			set
			{
				if ((this._CheckBank != value))
				{
					this.OnCheckBankChanging(value);
					this.SendPropertyChanging();
					this._CheckBank = value;
					this.SendPropertyChanged("CheckBank");
					this.OnCheckBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositoryBankId", DbType="Int")]
		public System.Nullable<int> DepositoryBankId
		{
			get
			{
				return this._DepositoryBankId;
			}
			set
			{
				if ((this._DepositoryBankId != value))
				{
					if (this._MstArticle1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepositoryBankIdChanging(value);
					this.SendPropertyChanging();
					this._DepositoryBankId = value;
					this.SendPropertyChanged("DepositoryBankId");
					this.OnDepositoryBankIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClear", DbType="Bit NOT NULL")]
		public bool IsClear
		{
			get
			{
				return this._IsClear;
			}
			set
			{
				if ((this._IsClear != value))
				{
					this.OnIsClearChanging(value);
					this.SendPropertyChanging();
					this._IsClear = value;
					this.SendPropertyChanged("IsClear");
					this.OnIsClearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnCollectionLine", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.TrnCollectionLines.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.TrnCollectionLines.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnCollectionLine", Storage="_MstArticle", ThisKey="ArticleId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnCollectionLines.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnCollectionLines.Add(this);
						this._ArticleId = value.Id;
					}
					else
					{
						this._ArticleId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnCollectionLine1", Storage="_MstArticle1", ThisKey="DepositoryBankId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle1
		{
			get
			{
				return this._MstArticle1.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle1.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle1.Entity = null;
						previousValue.TrnCollectionLines1.Remove(this);
					}
					this._MstArticle1.Entity = value;
					if ((value != null))
					{
						value.TrnCollectionLines1.Add(this);
						this._DepositoryBankId = value.Id;
					}
					else
					{
						this._DepositoryBankId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstArticle1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnCollectionLine", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnCollectionLines.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnCollectionLines.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayType_TrnCollectionLine", Storage="_MstPayType", ThisKey="PayTypeId", OtherKey="Id", IsForeignKey=true)]
		public MstPayType MstPayType
		{
			get
			{
				return this._MstPayType.Entity;
			}
			set
			{
				MstPayType previousValue = this._MstPayType.Entity;
				if (((previousValue != value) 
							|| (this._MstPayType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPayType.Entity = null;
						previousValue.TrnCollectionLines.Remove(this);
					}
					this._MstPayType.Entity = value;
					if ((value != null))
					{
						value.TrnCollectionLines.Add(this);
						this._PayTypeId = value.Id;
					}
					else
					{
						this._PayTypeId = default(int);
					}
					this.SendPropertyChanged("MstPayType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnCollection_TrnCollectionLine", Storage="_TrnCollection", ThisKey="ORId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnCollection TrnCollection
		{
			get
			{
				return this._TrnCollection.Entity;
			}
			set
			{
				TrnCollection previousValue = this._TrnCollection.Entity;
				if (((previousValue != value) 
							|| (this._TrnCollection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnCollection.Entity = null;
						previousValue.TrnCollectionLines.Remove(this);
					}
					this._TrnCollection.Entity = value;
					if ((value != null))
					{
						value.TrnCollectionLines.Add(this);
						this._ORId = value.Id;
					}
					else
					{
						this._ORId = default(int);
					}
					this.SendPropertyChanged("TrnCollection");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_TrnCollectionLine", Storage="_TrnSalesInvoice", ThisKey="SIId", OtherKey="Id", IsForeignKey=true)]
		public TrnSalesInvoice TrnSalesInvoice
		{
			get
			{
				return this._TrnSalesInvoice.Entity;
			}
			set
			{
				TrnSalesInvoice previousValue = this._TrnSalesInvoice.Entity;
				if (((previousValue != value) 
							|| (this._TrnSalesInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnSalesInvoice.Entity = null;
						previousValue.TrnCollectionLines.Remove(this);
					}
					this._TrnSalesInvoice.Entity = value;
					if ((value != null))
					{
						value.TrnCollectionLines.Add(this);
						this._SIId = value.Id;
					}
					else
					{
						this._SIId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnSalesInvoice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnDisbursement")]
	public partial class TrnDisbursement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BranchId;
		
		private string _CVNumber;
		
		private System.DateTime _CVDate;
		
		private int _SupplierId;
		
		private string _Payee;
		
		private int _PayTypeId;
		
		private int _BankId;
		
		private string _ManualCVNumber;
		
		private string _Particulars;
		
		private string _CheckNumber;
		
		private System.DateTime _CheckDate;
		
		private decimal _Amount;
		
		private bool _IsCrossCheck;
		
		private bool _IsClear;
		
		private int _PreparedById;
		
		private int _CheckedById;
		
		private int _ApprovedById;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnDisbursementLine> _TrnDisbursementLines;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstArticle> _MstArticle1;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstPayType> _MstPayType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnCVNumberChanging(string value);
    partial void OnCVNumberChanged();
    partial void OnCVDateChanging(System.DateTime value);
    partial void OnCVDateChanged();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnPayeeChanging(string value);
    partial void OnPayeeChanged();
    partial void OnPayTypeIdChanging(int value);
    partial void OnPayTypeIdChanged();
    partial void OnBankIdChanging(int value);
    partial void OnBankIdChanged();
    partial void OnManualCVNumberChanging(string value);
    partial void OnManualCVNumberChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnCheckNumberChanging(string value);
    partial void OnCheckNumberChanged();
    partial void OnCheckDateChanging(System.DateTime value);
    partial void OnCheckDateChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnIsCrossCheckChanging(bool value);
    partial void OnIsCrossCheckChanged();
    partial void OnIsClearChanging(bool value);
    partial void OnIsClearChanged();
    partial void OnPreparedByIdChanging(int value);
    partial void OnPreparedByIdChanged();
    partial void OnCheckedByIdChanging(int value);
    partial void OnCheckedByIdChanged();
    partial void OnApprovedByIdChanging(int value);
    partial void OnApprovedByIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnDisbursement()
		{
			this._TrnDisbursementLines = new EntitySet<TrnDisbursementLine>(new Action<TrnDisbursementLine>(this.attach_TrnDisbursementLines), new Action<TrnDisbursementLine>(this.detach_TrnDisbursementLines));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstArticle1 = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstPayType = default(EntityRef<MstPayType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CVNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CVNumber
		{
			get
			{
				return this._CVNumber;
			}
			set
			{
				if ((this._CVNumber != value))
				{
					this.OnCVNumberChanging(value);
					this.SendPropertyChanging();
					this._CVNumber = value;
					this.SendPropertyChanged("CVNumber");
					this.OnCVNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CVDate", DbType="DateTime NOT NULL")]
		public System.DateTime CVDate
		{
			get
			{
				return this._CVDate;
			}
			set
			{
				if ((this._CVDate != value))
				{
					this.OnCVDateChanging(value);
					this.SendPropertyChanging();
					this._CVDate = value;
					this.SendPropertyChanged("CVDate");
					this.OnCVDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payee", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Payee
		{
			get
			{
				return this._Payee;
			}
			set
			{
				if ((this._Payee != value))
				{
					this.OnPayeeChanging(value);
					this.SendPropertyChanging();
					this._Payee = value;
					this.SendPropertyChanged("Payee");
					this.OnPayeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayTypeId", DbType="Int NOT NULL")]
		public int PayTypeId
		{
			get
			{
				return this._PayTypeId;
			}
			set
			{
				if ((this._PayTypeId != value))
				{
					if (this._MstPayType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPayTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PayTypeId = value;
					this.SendPropertyChanged("PayTypeId");
					this.OnPayTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankId", DbType="Int NOT NULL")]
		public int BankId
		{
			get
			{
				return this._BankId;
			}
			set
			{
				if ((this._BankId != value))
				{
					if (this._MstArticle1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankIdChanging(value);
					this.SendPropertyChanging();
					this._BankId = value;
					this.SendPropertyChanged("BankId");
					this.OnBankIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualCVNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ManualCVNumber
		{
			get
			{
				return this._ManualCVNumber;
			}
			set
			{
				if ((this._ManualCVNumber != value))
				{
					this.OnManualCVNumberChanging(value);
					this.SendPropertyChanging();
					this._ManualCVNumber = value;
					this.SendPropertyChanged("ManualCVNumber");
					this.OnManualCVNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CheckNumber
		{
			get
			{
				return this._CheckNumber;
			}
			set
			{
				if ((this._CheckNumber != value))
				{
					this.OnCheckNumberChanging(value);
					this.SendPropertyChanging();
					this._CheckNumber = value;
					this.SendPropertyChanged("CheckNumber");
					this.OnCheckNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime NOT NULL")]
		public System.DateTime CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCrossCheck", DbType="Bit NOT NULL")]
		public bool IsCrossCheck
		{
			get
			{
				return this._IsCrossCheck;
			}
			set
			{
				if ((this._IsCrossCheck != value))
				{
					this.OnIsCrossCheckChanging(value);
					this.SendPropertyChanging();
					this._IsCrossCheck = value;
					this.SendPropertyChanged("IsCrossCheck");
					this.OnIsCrossCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClear", DbType="Bit NOT NULL")]
		public bool IsClear
		{
			get
			{
				return this._IsClear;
			}
			set
			{
				if ((this._IsClear != value))
				{
					this.OnIsClearChanging(value);
					this.SendPropertyChanging();
					this._IsClear = value;
					this.SendPropertyChanged("IsClear");
					this.OnIsClearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedById", DbType="Int NOT NULL")]
		public int PreparedById
		{
			get
			{
				return this._PreparedById;
			}
			set
			{
				if ((this._PreparedById != value))
				{
					this.OnPreparedByIdChanging(value);
					this.SendPropertyChanging();
					this._PreparedById = value;
					this.SendPropertyChanged("PreparedById");
					this.OnPreparedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedById", DbType="Int NOT NULL")]
		public int CheckedById
		{
			get
			{
				return this._CheckedById;
			}
			set
			{
				if ((this._CheckedById != value))
				{
					this.OnCheckedByIdChanging(value);
					this.SendPropertyChanging();
					this._CheckedById = value;
					this.SendPropertyChanged("CheckedById");
					this.OnCheckedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedById", DbType="Int NOT NULL")]
		public int ApprovedById
		{
			get
			{
				return this._ApprovedById;
			}
			set
			{
				if ((this._ApprovedById != value))
				{
					this.OnApprovedByIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedById = value;
					this.SendPropertyChanged("ApprovedById");
					this.OnApprovedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnDisbursement_TrnDisbursementLine", Storage="_TrnDisbursementLines", ThisKey="Id", OtherKey="CVId")]
		public EntitySet<TrnDisbursementLine> TrnDisbursementLines
		{
			get
			{
				return this._TrnDisbursementLines;
			}
			set
			{
				this._TrnDisbursementLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnDisbursement_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="CVId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnDisbursement", Storage="_MstArticle", ThisKey="SupplierId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnDisbursements.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements.Add(this);
						this._SupplierId = value.Id;
					}
					else
					{
						this._SupplierId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnDisbursement1", Storage="_MstArticle1", ThisKey="BankId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle1
		{
			get
			{
				return this._MstArticle1.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle1.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle1.Entity = null;
						previousValue.TrnDisbursements1.Remove(this);
					}
					this._MstArticle1.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements1.Add(this);
						this._BankId = value.Id;
					}
					else
					{
						this._BankId = default(int);
					}
					this.SendPropertyChanged("MstArticle1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnDisbursement", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnDisbursements.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstPayType_TrnDisbursement", Storage="_MstPayType", ThisKey="PayTypeId", OtherKey="Id", IsForeignKey=true)]
		public MstPayType MstPayType
		{
			get
			{
				return this._MstPayType.Entity;
			}
			set
			{
				MstPayType previousValue = this._MstPayType.Entity;
				if (((previousValue != value) 
							|| (this._MstPayType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstPayType.Entity = null;
						previousValue.TrnDisbursements.Remove(this);
					}
					this._MstPayType.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursements.Add(this);
						this._PayTypeId = value.Id;
					}
					else
					{
						this._PayTypeId = default(int);
					}
					this.SendPropertyChanged("MstPayType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnDisbursementLines(TrnDisbursementLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnDisbursement = this;
		}
		
		private void detach_TrnDisbursementLines(TrnDisbursementLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnDisbursement = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnDisbursement = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnDisbursement = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnDisbursementLine")]
	public partial class TrnDisbursementLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CVId;
		
		private int _BranchId;
		
		private int _AccountId;
		
		private int _ArticleId;
		
		private System.Nullable<int> _RRId;
		
		private string _Particulars;
		
		private decimal _Amount;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<TrnDisbursement> _TrnDisbursement;
		
		private EntityRef<TrnReceivingReceipt> _TrnReceivingReceipt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCVIdChanging(int value);
    partial void OnCVIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnArticleIdChanging(int value);
    partial void OnArticleIdChanged();
    partial void OnRRIdChanging(System.Nullable<int> value);
    partial void OnRRIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    #endregion
		
		public TrnDisbursementLine()
		{
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._TrnDisbursement = default(EntityRef<TrnDisbursement>);
			this._TrnReceivingReceipt = default(EntityRef<TrnReceivingReceipt>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CVId", DbType="Int NOT NULL")]
		public int CVId
		{
			get
			{
				return this._CVId;
			}
			set
			{
				if ((this._CVId != value))
				{
					if (this._TrnDisbursement.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCVIdChanging(value);
					this.SendPropertyChanging();
					this._CVId = value;
					this.SendPropertyChanged("CVId");
					this.OnCVIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="Int NOT NULL")]
		public int ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RRId", DbType="Int")]
		public System.Nullable<int> RRId
		{
			get
			{
				return this._RRId;
			}
			set
			{
				if ((this._RRId != value))
				{
					if (this._TrnReceivingReceipt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRRIdChanging(value);
					this.SendPropertyChanging();
					this._RRId = value;
					this.SendPropertyChanged("RRId");
					this.OnRRIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnDisbursementLine", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.TrnDisbursementLines.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursementLines.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnDisbursementLine", Storage="_MstArticle", ThisKey="ArticleId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnDisbursementLines.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursementLines.Add(this);
						this._ArticleId = value.Id;
					}
					else
					{
						this._ArticleId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnDisbursementLine", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnDisbursementLines.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursementLines.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnDisbursement_TrnDisbursementLine", Storage="_TrnDisbursement", ThisKey="CVId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnDisbursement TrnDisbursement
		{
			get
			{
				return this._TrnDisbursement.Entity;
			}
			set
			{
				TrnDisbursement previousValue = this._TrnDisbursement.Entity;
				if (((previousValue != value) 
							|| (this._TrnDisbursement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnDisbursement.Entity = null;
						previousValue.TrnDisbursementLines.Remove(this);
					}
					this._TrnDisbursement.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursementLines.Add(this);
						this._CVId = value.Id;
					}
					else
					{
						this._CVId = default(int);
					}
					this.SendPropertyChanged("TrnDisbursement");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnReceivingReceipt_TrnDisbursementLine", Storage="_TrnReceivingReceipt", ThisKey="RRId", OtherKey="Id", IsForeignKey=true)]
		public TrnReceivingReceipt TrnReceivingReceipt
		{
			get
			{
				return this._TrnReceivingReceipt.Entity;
			}
			set
			{
				TrnReceivingReceipt previousValue = this._TrnReceivingReceipt.Entity;
				if (((previousValue != value) 
							|| (this._TrnReceivingReceipt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnReceivingReceipt.Entity = null;
						previousValue.TrnDisbursementLines.Remove(this);
					}
					this._TrnReceivingReceipt.Entity = value;
					if ((value != null))
					{
						value.TrnDisbursementLines.Add(this);
						this._RRId = value.Id;
					}
					else
					{
						this._RRId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnReceivingReceipt");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnInventory")]
	public partial class TrnInventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BranchId;
		
		private System.DateTime _InventoryDate;
		
		private int _ArticleId;
		
		private int _ArticleInventoryId;
		
		private System.Nullable<int> _RRId;
		
		private System.Nullable<int> _SIId;
		
		private System.Nullable<int> _INId;
		
		private System.Nullable<int> _OTId;
		
		private System.Nullable<int> _STId;
		
		private decimal _QuantityIn;
		
		private decimal _QuantityOut;
		
		private decimal _Quantity;
		
		private decimal _Amount;
		
		private string _Particulars;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstArticleInventory> _MstArticleInventory;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<TrnReceivingReceipt> _TrnReceivingReceipt;
		
		private EntityRef<TrnSalesInvoice> _TrnSalesInvoice;
		
		private EntityRef<TrnStockIn> _TrnStockIn;
		
		private EntityRef<TrnStockOut> _TrnStockOut;
		
		private EntityRef<TrnStockTransfer> _TrnStockTransfer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnInventoryDateChanging(System.DateTime value);
    partial void OnInventoryDateChanged();
    partial void OnArticleIdChanging(int value);
    partial void OnArticleIdChanged();
    partial void OnArticleInventoryIdChanging(int value);
    partial void OnArticleInventoryIdChanged();
    partial void OnRRIdChanging(System.Nullable<int> value);
    partial void OnRRIdChanged();
    partial void OnSIIdChanging(System.Nullable<int> value);
    partial void OnSIIdChanged();
    partial void OnINIdChanging(System.Nullable<int> value);
    partial void OnINIdChanged();
    partial void OnOTIdChanging(System.Nullable<int> value);
    partial void OnOTIdChanged();
    partial void OnSTIdChanging(System.Nullable<int> value);
    partial void OnSTIdChanged();
    partial void OnQuantityInChanging(decimal value);
    partial void OnQuantityInChanged();
    partial void OnQuantityOutChanging(decimal value);
    partial void OnQuantityOutChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    #endregion
		
		public TrnInventory()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstArticleInventory = default(EntityRef<MstArticleInventory>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._TrnReceivingReceipt = default(EntityRef<TrnReceivingReceipt>);
			this._TrnSalesInvoice = default(EntityRef<TrnSalesInvoice>);
			this._TrnStockIn = default(EntityRef<TrnStockIn>);
			this._TrnStockOut = default(EntityRef<TrnStockOut>);
			this._TrnStockTransfer = default(EntityRef<TrnStockTransfer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryDate", DbType="DateTime NOT NULL")]
		public System.DateTime InventoryDate
		{
			get
			{
				return this._InventoryDate;
			}
			set
			{
				if ((this._InventoryDate != value))
				{
					this.OnInventoryDateChanging(value);
					this.SendPropertyChanging();
					this._InventoryDate = value;
					this.SendPropertyChanged("InventoryDate");
					this.OnInventoryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="Int NOT NULL")]
		public int ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleInventoryId", DbType="Int NOT NULL")]
		public int ArticleInventoryId
		{
			get
			{
				return this._ArticleInventoryId;
			}
			set
			{
				if ((this._ArticleInventoryId != value))
				{
					if (this._MstArticleInventory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleInventoryIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleInventoryId = value;
					this.SendPropertyChanged("ArticleInventoryId");
					this.OnArticleInventoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RRId", DbType="Int")]
		public System.Nullable<int> RRId
		{
			get
			{
				return this._RRId;
			}
			set
			{
				if ((this._RRId != value))
				{
					if (this._TrnReceivingReceipt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRRIdChanging(value);
					this.SendPropertyChanging();
					this._RRId = value;
					this.SendPropertyChanged("RRId");
					this.OnRRIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIId", DbType="Int")]
		public System.Nullable<int> SIId
		{
			get
			{
				return this._SIId;
			}
			set
			{
				if ((this._SIId != value))
				{
					if (this._TrnSalesInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSIIdChanging(value);
					this.SendPropertyChanging();
					this._SIId = value;
					this.SendPropertyChanged("SIId");
					this.OnSIIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INId", DbType="Int")]
		public System.Nullable<int> INId
		{
			get
			{
				return this._INId;
			}
			set
			{
				if ((this._INId != value))
				{
					if (this._TrnStockIn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnINIdChanging(value);
					this.SendPropertyChanging();
					this._INId = value;
					this.SendPropertyChanged("INId");
					this.OnINIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTId", DbType="Int")]
		public System.Nullable<int> OTId
		{
			get
			{
				return this._OTId;
			}
			set
			{
				if ((this._OTId != value))
				{
					if (this._TrnStockOut.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOTIdChanging(value);
					this.SendPropertyChanging();
					this._OTId = value;
					this.SendPropertyChanged("OTId");
					this.OnOTIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STId", DbType="Int")]
		public System.Nullable<int> STId
		{
			get
			{
				return this._STId;
			}
			set
			{
				if ((this._STId != value))
				{
					if (this._TrnStockTransfer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTIdChanging(value);
					this.SendPropertyChanging();
					this._STId = value;
					this.SendPropertyChanged("STId");
					this.OnSTIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityIn", DbType="Decimal(18,5) NOT NULL")]
		public decimal QuantityIn
		{
			get
			{
				return this._QuantityIn;
			}
			set
			{
				if ((this._QuantityIn != value))
				{
					this.OnQuantityInChanging(value);
					this.SendPropertyChanging();
					this._QuantityIn = value;
					this.SendPropertyChanged("QuantityIn");
					this.OnQuantityInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityOut", DbType="Decimal(18,5) NOT NULL")]
		public decimal QuantityOut
		{
			get
			{
				return this._QuantityOut;
			}
			set
			{
				if ((this._QuantityOut != value))
				{
					this.OnQuantityOutChanging(value);
					this.SendPropertyChanging();
					this._QuantityOut = value;
					this.SendPropertyChanged("QuantityOut");
					this.OnQuantityOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnInventory", Storage="_MstArticle", ThisKey="ArticleId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnInventories.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnInventories.Add(this);
						this._ArticleId = value.Id;
					}
					else
					{
						this._ArticleId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleInventory_TrnInventory", Storage="_MstArticleInventory", ThisKey="ArticleInventoryId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MstArticleInventory MstArticleInventory
		{
			get
			{
				return this._MstArticleInventory.Entity;
			}
			set
			{
				MstArticleInventory previousValue = this._MstArticleInventory.Entity;
				if (((previousValue != value) 
							|| (this._MstArticleInventory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticleInventory.Entity = null;
						previousValue.TrnInventories.Remove(this);
					}
					this._MstArticleInventory.Entity = value;
					if ((value != null))
					{
						value.TrnInventories.Add(this);
						this._ArticleInventoryId = value.Id;
					}
					else
					{
						this._ArticleInventoryId = default(int);
					}
					this.SendPropertyChanged("MstArticleInventory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnInventory", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnInventories.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnInventories.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnReceivingReceipt_TrnInventory", Storage="_TrnReceivingReceipt", ThisKey="RRId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnReceivingReceipt TrnReceivingReceipt
		{
			get
			{
				return this._TrnReceivingReceipt.Entity;
			}
			set
			{
				TrnReceivingReceipt previousValue = this._TrnReceivingReceipt.Entity;
				if (((previousValue != value) 
							|| (this._TrnReceivingReceipt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnReceivingReceipt.Entity = null;
						previousValue.TrnInventories.Remove(this);
					}
					this._TrnReceivingReceipt.Entity = value;
					if ((value != null))
					{
						value.TrnInventories.Add(this);
						this._RRId = value.Id;
					}
					else
					{
						this._RRId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnReceivingReceipt");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_TrnInventory", Storage="_TrnSalesInvoice", ThisKey="SIId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnSalesInvoice TrnSalesInvoice
		{
			get
			{
				return this._TrnSalesInvoice.Entity;
			}
			set
			{
				TrnSalesInvoice previousValue = this._TrnSalesInvoice.Entity;
				if (((previousValue != value) 
							|| (this._TrnSalesInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnSalesInvoice.Entity = null;
						previousValue.TrnInventories.Remove(this);
					}
					this._TrnSalesInvoice.Entity = value;
					if ((value != null))
					{
						value.TrnInventories.Add(this);
						this._SIId = value.Id;
					}
					else
					{
						this._SIId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnSalesInvoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockIn_TrnInventory", Storage="_TrnStockIn", ThisKey="INId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnStockIn TrnStockIn
		{
			get
			{
				return this._TrnStockIn.Entity;
			}
			set
			{
				TrnStockIn previousValue = this._TrnStockIn.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockIn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockIn.Entity = null;
						previousValue.TrnInventories.Remove(this);
					}
					this._TrnStockIn.Entity = value;
					if ((value != null))
					{
						value.TrnInventories.Add(this);
						this._INId = value.Id;
					}
					else
					{
						this._INId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnStockIn");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockOut_TrnInventory", Storage="_TrnStockOut", ThisKey="OTId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnStockOut TrnStockOut
		{
			get
			{
				return this._TrnStockOut.Entity;
			}
			set
			{
				TrnStockOut previousValue = this._TrnStockOut.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockOut.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockOut.Entity = null;
						previousValue.TrnInventories.Remove(this);
					}
					this._TrnStockOut.Entity = value;
					if ((value != null))
					{
						value.TrnInventories.Add(this);
						this._OTId = value.Id;
					}
					else
					{
						this._OTId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnStockOut");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockTransfer_TrnInventory", Storage="_TrnStockTransfer", ThisKey="STId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnStockTransfer TrnStockTransfer
		{
			get
			{
				return this._TrnStockTransfer.Entity;
			}
			set
			{
				TrnStockTransfer previousValue = this._TrnStockTransfer.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockTransfer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockTransfer.Entity = null;
						previousValue.TrnInventories.Remove(this);
					}
					this._TrnStockTransfer.Entity = value;
					if ((value != null))
					{
						value.TrnInventories.Add(this);
						this._STId = value.Id;
					}
					else
					{
						this._STId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnStockTransfer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnJournal")]
	public partial class TrnJournal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _JournalDate;
		
		private int _BranchId;
		
		private int _AccountId;
		
		private int _ArticleId;
		
		private string _Particulars;
		
		private decimal _DebitAmount;
		
		private decimal _CreditAmount;
		
		private System.Nullable<int> _ORId;
		
		private System.Nullable<int> _CVId;
		
		private System.Nullable<int> _JVId;
		
		private System.Nullable<int> _RRId;
		
		private System.Nullable<int> _SIId;
		
		private System.Nullable<int> _INId;
		
		private System.Nullable<int> _OTId;
		
		private System.Nullable<int> _STId;
		
		private string _DocumentReference;
		
		private System.Nullable<int> _APRRId;
		
		private System.Nullable<int> _ARSIId;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<TrnCollection> _TrnCollection;
		
		private EntityRef<TrnDisbursement> _TrnDisbursement;
		
		private EntityRef<TrnJournalVoucher> _TrnJournalVoucher;
		
		private EntityRef<TrnReceivingReceipt> _TrnReceivingReceipt;
		
		private EntityRef<TrnReceivingReceipt> _TrnReceivingReceipt1;
		
		private EntityRef<TrnSalesInvoice> _TrnSalesInvoice;
		
		private EntityRef<TrnSalesInvoice> _TrnSalesInvoice1;
		
		private EntityRef<TrnStockIn> _TrnStockIn;
		
		private EntityRef<TrnStockOut> _TrnStockOut;
		
		private EntityRef<TrnStockTransfer> _TrnStockTransfer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnJournalDateChanging(System.DateTime value);
    partial void OnJournalDateChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnArticleIdChanging(int value);
    partial void OnArticleIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnDebitAmountChanging(decimal value);
    partial void OnDebitAmountChanged();
    partial void OnCreditAmountChanging(decimal value);
    partial void OnCreditAmountChanged();
    partial void OnORIdChanging(System.Nullable<int> value);
    partial void OnORIdChanged();
    partial void OnCVIdChanging(System.Nullable<int> value);
    partial void OnCVIdChanged();
    partial void OnJVIdChanging(System.Nullable<int> value);
    partial void OnJVIdChanged();
    partial void OnRRIdChanging(System.Nullable<int> value);
    partial void OnRRIdChanged();
    partial void OnSIIdChanging(System.Nullable<int> value);
    partial void OnSIIdChanged();
    partial void OnINIdChanging(System.Nullable<int> value);
    partial void OnINIdChanged();
    partial void OnOTIdChanging(System.Nullable<int> value);
    partial void OnOTIdChanged();
    partial void OnSTIdChanging(System.Nullable<int> value);
    partial void OnSTIdChanged();
    partial void OnDocumentReferenceChanging(string value);
    partial void OnDocumentReferenceChanged();
    partial void OnAPRRIdChanging(System.Nullable<int> value);
    partial void OnAPRRIdChanged();
    partial void OnARSIIdChanging(System.Nullable<int> value);
    partial void OnARSIIdChanged();
    #endregion
		
		public TrnJournal()
		{
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._TrnCollection = default(EntityRef<TrnCollection>);
			this._TrnDisbursement = default(EntityRef<TrnDisbursement>);
			this._TrnJournalVoucher = default(EntityRef<TrnJournalVoucher>);
			this._TrnReceivingReceipt = default(EntityRef<TrnReceivingReceipt>);
			this._TrnReceivingReceipt1 = default(EntityRef<TrnReceivingReceipt>);
			this._TrnSalesInvoice = default(EntityRef<TrnSalesInvoice>);
			this._TrnSalesInvoice1 = default(EntityRef<TrnSalesInvoice>);
			this._TrnStockIn = default(EntityRef<TrnStockIn>);
			this._TrnStockOut = default(EntityRef<TrnStockOut>);
			this._TrnStockTransfer = default(EntityRef<TrnStockTransfer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JournalDate", DbType="DateTime NOT NULL")]
		public System.DateTime JournalDate
		{
			get
			{
				return this._JournalDate;
			}
			set
			{
				if ((this._JournalDate != value))
				{
					this.OnJournalDateChanging(value);
					this.SendPropertyChanging();
					this._JournalDate = value;
					this.SendPropertyChanged("JournalDate");
					this.OnJournalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="Int NOT NULL")]
		public int ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebitAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal DebitAmount
		{
			get
			{
				return this._DebitAmount;
			}
			set
			{
				if ((this._DebitAmount != value))
				{
					this.OnDebitAmountChanging(value);
					this.SendPropertyChanging();
					this._DebitAmount = value;
					this.SendPropertyChanged("DebitAmount");
					this.OnDebitAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal CreditAmount
		{
			get
			{
				return this._CreditAmount;
			}
			set
			{
				if ((this._CreditAmount != value))
				{
					this.OnCreditAmountChanging(value);
					this.SendPropertyChanging();
					this._CreditAmount = value;
					this.SendPropertyChanged("CreditAmount");
					this.OnCreditAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORId", DbType="Int")]
		public System.Nullable<int> ORId
		{
			get
			{
				return this._ORId;
			}
			set
			{
				if ((this._ORId != value))
				{
					if (this._TrnCollection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnORIdChanging(value);
					this.SendPropertyChanging();
					this._ORId = value;
					this.SendPropertyChanged("ORId");
					this.OnORIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CVId", DbType="Int")]
		public System.Nullable<int> CVId
		{
			get
			{
				return this._CVId;
			}
			set
			{
				if ((this._CVId != value))
				{
					if (this._TrnDisbursement.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCVIdChanging(value);
					this.SendPropertyChanging();
					this._CVId = value;
					this.SendPropertyChanged("CVId");
					this.OnCVIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JVId", DbType="Int")]
		public System.Nullable<int> JVId
		{
			get
			{
				return this._JVId;
			}
			set
			{
				if ((this._JVId != value))
				{
					if (this._TrnJournalVoucher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJVIdChanging(value);
					this.SendPropertyChanging();
					this._JVId = value;
					this.SendPropertyChanged("JVId");
					this.OnJVIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RRId", DbType="Int")]
		public System.Nullable<int> RRId
		{
			get
			{
				return this._RRId;
			}
			set
			{
				if ((this._RRId != value))
				{
					if (this._TrnReceivingReceipt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRRIdChanging(value);
					this.SendPropertyChanging();
					this._RRId = value;
					this.SendPropertyChanged("RRId");
					this.OnRRIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIId", DbType="Int")]
		public System.Nullable<int> SIId
		{
			get
			{
				return this._SIId;
			}
			set
			{
				if ((this._SIId != value))
				{
					if (this._TrnSalesInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSIIdChanging(value);
					this.SendPropertyChanging();
					this._SIId = value;
					this.SendPropertyChanged("SIId");
					this.OnSIIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INId", DbType="Int")]
		public System.Nullable<int> INId
		{
			get
			{
				return this._INId;
			}
			set
			{
				if ((this._INId != value))
				{
					if (this._TrnStockIn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnINIdChanging(value);
					this.SendPropertyChanging();
					this._INId = value;
					this.SendPropertyChanged("INId");
					this.OnINIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTId", DbType="Int")]
		public System.Nullable<int> OTId
		{
			get
			{
				return this._OTId;
			}
			set
			{
				if ((this._OTId != value))
				{
					if (this._TrnStockOut.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOTIdChanging(value);
					this.SendPropertyChanging();
					this._OTId = value;
					this.SendPropertyChanged("OTId");
					this.OnOTIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STId", DbType="Int")]
		public System.Nullable<int> STId
		{
			get
			{
				return this._STId;
			}
			set
			{
				if ((this._STId != value))
				{
					if (this._TrnStockTransfer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTIdChanging(value);
					this.SendPropertyChanging();
					this._STId = value;
					this.SendPropertyChanged("STId");
					this.OnSTIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentReference", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DocumentReference
		{
			get
			{
				return this._DocumentReference;
			}
			set
			{
				if ((this._DocumentReference != value))
				{
					this.OnDocumentReferenceChanging(value);
					this.SendPropertyChanging();
					this._DocumentReference = value;
					this.SendPropertyChanged("DocumentReference");
					this.OnDocumentReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APRRId", DbType="Int")]
		public System.Nullable<int> APRRId
		{
			get
			{
				return this._APRRId;
			}
			set
			{
				if ((this._APRRId != value))
				{
					if (this._TrnReceivingReceipt1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAPRRIdChanging(value);
					this.SendPropertyChanging();
					this._APRRId = value;
					this.SendPropertyChanged("APRRId");
					this.OnAPRRIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ARSIId", DbType="Int")]
		public System.Nullable<int> ARSIId
		{
			get
			{
				return this._ARSIId;
			}
			set
			{
				if ((this._ARSIId != value))
				{
					if (this._TrnSalesInvoice1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnARSIIdChanging(value);
					this.SendPropertyChanging();
					this._ARSIId = value;
					this.SendPropertyChanged("ARSIId");
					this.OnARSIIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnJournal", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnJournal", Storage="_MstArticle", ThisKey="ArticleId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._ArticleId = value.Id;
					}
					else
					{
						this._ArticleId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnJournal", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnCollection_TrnJournal", Storage="_TrnCollection", ThisKey="ORId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnCollection TrnCollection
		{
			get
			{
				return this._TrnCollection.Entity;
			}
			set
			{
				TrnCollection previousValue = this._TrnCollection.Entity;
				if (((previousValue != value) 
							|| (this._TrnCollection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnCollection.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._TrnCollection.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._ORId = value.Id;
					}
					else
					{
						this._ORId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnCollection");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnDisbursement_TrnJournal", Storage="_TrnDisbursement", ThisKey="CVId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnDisbursement TrnDisbursement
		{
			get
			{
				return this._TrnDisbursement.Entity;
			}
			set
			{
				TrnDisbursement previousValue = this._TrnDisbursement.Entity;
				if (((previousValue != value) 
							|| (this._TrnDisbursement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnDisbursement.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._TrnDisbursement.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._CVId = value.Id;
					}
					else
					{
						this._CVId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnDisbursement");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnJournalVoucher_TrnJournal", Storage="_TrnJournalVoucher", ThisKey="JVId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnJournalVoucher TrnJournalVoucher
		{
			get
			{
				return this._TrnJournalVoucher.Entity;
			}
			set
			{
				TrnJournalVoucher previousValue = this._TrnJournalVoucher.Entity;
				if (((previousValue != value) 
							|| (this._TrnJournalVoucher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnJournalVoucher.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._TrnJournalVoucher.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._JVId = value.Id;
					}
					else
					{
						this._JVId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnJournalVoucher");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnReceivingReceipt_TrnJournal", Storage="_TrnReceivingReceipt", ThisKey="RRId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnReceivingReceipt TrnReceivingReceipt
		{
			get
			{
				return this._TrnReceivingReceipt.Entity;
			}
			set
			{
				TrnReceivingReceipt previousValue = this._TrnReceivingReceipt.Entity;
				if (((previousValue != value) 
							|| (this._TrnReceivingReceipt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnReceivingReceipt.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._TrnReceivingReceipt.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._RRId = value.Id;
					}
					else
					{
						this._RRId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnReceivingReceipt");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnReceivingReceipt_TrnJournal1", Storage="_TrnReceivingReceipt1", ThisKey="APRRId", OtherKey="Id", IsForeignKey=true)]
		public TrnReceivingReceipt TrnReceivingReceipt1
		{
			get
			{
				return this._TrnReceivingReceipt1.Entity;
			}
			set
			{
				TrnReceivingReceipt previousValue = this._TrnReceivingReceipt1.Entity;
				if (((previousValue != value) 
							|| (this._TrnReceivingReceipt1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnReceivingReceipt1.Entity = null;
						previousValue.TrnJournals1.Remove(this);
					}
					this._TrnReceivingReceipt1.Entity = value;
					if ((value != null))
					{
						value.TrnJournals1.Add(this);
						this._APRRId = value.Id;
					}
					else
					{
						this._APRRId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnReceivingReceipt1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_TrnJournal", Storage="_TrnSalesInvoice", ThisKey="SIId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnSalesInvoice TrnSalesInvoice
		{
			get
			{
				return this._TrnSalesInvoice.Entity;
			}
			set
			{
				TrnSalesInvoice previousValue = this._TrnSalesInvoice.Entity;
				if (((previousValue != value) 
							|| (this._TrnSalesInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnSalesInvoice.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._TrnSalesInvoice.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._SIId = value.Id;
					}
					else
					{
						this._SIId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnSalesInvoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_TrnJournal1", Storage="_TrnSalesInvoice1", ThisKey="ARSIId", OtherKey="Id", IsForeignKey=true)]
		public TrnSalesInvoice TrnSalesInvoice1
		{
			get
			{
				return this._TrnSalesInvoice1.Entity;
			}
			set
			{
				TrnSalesInvoice previousValue = this._TrnSalesInvoice1.Entity;
				if (((previousValue != value) 
							|| (this._TrnSalesInvoice1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnSalesInvoice1.Entity = null;
						previousValue.TrnJournals1.Remove(this);
					}
					this._TrnSalesInvoice1.Entity = value;
					if ((value != null))
					{
						value.TrnJournals1.Add(this);
						this._ARSIId = value.Id;
					}
					else
					{
						this._ARSIId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnSalesInvoice1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockIn_TrnJournal", Storage="_TrnStockIn", ThisKey="INId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnStockIn TrnStockIn
		{
			get
			{
				return this._TrnStockIn.Entity;
			}
			set
			{
				TrnStockIn previousValue = this._TrnStockIn.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockIn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockIn.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._TrnStockIn.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._INId = value.Id;
					}
					else
					{
						this._INId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnStockIn");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockOut_TrnJournal", Storage="_TrnStockOut", ThisKey="OTId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnStockOut TrnStockOut
		{
			get
			{
				return this._TrnStockOut.Entity;
			}
			set
			{
				TrnStockOut previousValue = this._TrnStockOut.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockOut.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockOut.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._TrnStockOut.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._OTId = value.Id;
					}
					else
					{
						this._OTId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnStockOut");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockTransfer_TrnJournal", Storage="_TrnStockTransfer", ThisKey="STId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public TrnStockTransfer TrnStockTransfer
		{
			get
			{
				return this._TrnStockTransfer.Entity;
			}
			set
			{
				TrnStockTransfer previousValue = this._TrnStockTransfer.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockTransfer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockTransfer.Entity = null;
						previousValue.TrnJournals.Remove(this);
					}
					this._TrnStockTransfer.Entity = value;
					if ((value != null))
					{
						value.TrnJournals.Add(this);
						this._STId = value.Id;
					}
					else
					{
						this._STId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnStockTransfer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnJournalVoucher")]
	public partial class TrnJournalVoucher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BranchId;
		
		private string _JVNumber;
		
		private System.DateTime _JVDate;
		
		private string _Particulars;
		
		private string _ManualJVNumber;
		
		private int _PreparedById;
		
		private int _CheckedById;
		
		private int _ApprovedById;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntitySet<TrnJournalVoucherLine> _TrnJournalVoucherLines;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnJVNumberChanging(string value);
    partial void OnJVNumberChanged();
    partial void OnJVDateChanging(System.DateTime value);
    partial void OnJVDateChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnManualJVNumberChanging(string value);
    partial void OnManualJVNumberChanged();
    partial void OnPreparedByIdChanging(int value);
    partial void OnPreparedByIdChanged();
    partial void OnCheckedByIdChanging(int value);
    partial void OnCheckedByIdChanged();
    partial void OnApprovedByIdChanging(int value);
    partial void OnApprovedByIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnJournalVoucher()
		{
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._TrnJournalVoucherLines = new EntitySet<TrnJournalVoucherLine>(new Action<TrnJournalVoucherLine>(this.attach_TrnJournalVoucherLines), new Action<TrnJournalVoucherLine>(this.detach_TrnJournalVoucherLines));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JVNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string JVNumber
		{
			get
			{
				return this._JVNumber;
			}
			set
			{
				if ((this._JVNumber != value))
				{
					this.OnJVNumberChanging(value);
					this.SendPropertyChanging();
					this._JVNumber = value;
					this.SendPropertyChanged("JVNumber");
					this.OnJVNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JVDate", DbType="DateTime NOT NULL")]
		public System.DateTime JVDate
		{
			get
			{
				return this._JVDate;
			}
			set
			{
				if ((this._JVDate != value))
				{
					this.OnJVDateChanging(value);
					this.SendPropertyChanging();
					this._JVDate = value;
					this.SendPropertyChanged("JVDate");
					this.OnJVDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualJVNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ManualJVNumber
		{
			get
			{
				return this._ManualJVNumber;
			}
			set
			{
				if ((this._ManualJVNumber != value))
				{
					this.OnManualJVNumberChanging(value);
					this.SendPropertyChanging();
					this._ManualJVNumber = value;
					this.SendPropertyChanged("ManualJVNumber");
					this.OnManualJVNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedById", DbType="Int NOT NULL")]
		public int PreparedById
		{
			get
			{
				return this._PreparedById;
			}
			set
			{
				if ((this._PreparedById != value))
				{
					this.OnPreparedByIdChanging(value);
					this.SendPropertyChanging();
					this._PreparedById = value;
					this.SendPropertyChanged("PreparedById");
					this.OnPreparedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedById", DbType="Int NOT NULL")]
		public int CheckedById
		{
			get
			{
				return this._CheckedById;
			}
			set
			{
				if ((this._CheckedById != value))
				{
					this.OnCheckedByIdChanging(value);
					this.SendPropertyChanging();
					this._CheckedById = value;
					this.SendPropertyChanged("CheckedById");
					this.OnCheckedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedById", DbType="Int NOT NULL")]
		public int ApprovedById
		{
			get
			{
				return this._ApprovedById;
			}
			set
			{
				if ((this._ApprovedById != value))
				{
					this.OnApprovedByIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedById = value;
					this.SendPropertyChanged("ApprovedById");
					this.OnApprovedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnJournalVoucher_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="JVId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnJournalVoucher_TrnJournalVoucherLine", Storage="_TrnJournalVoucherLines", ThisKey="Id", OtherKey="JVId")]
		public EntitySet<TrnJournalVoucherLine> TrnJournalVoucherLines
		{
			get
			{
				return this._TrnJournalVoucherLines;
			}
			set
			{
				this._TrnJournalVoucherLines.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnJournalVoucher = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnJournalVoucher = null;
		}
		
		private void attach_TrnJournalVoucherLines(TrnJournalVoucherLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnJournalVoucher = this;
		}
		
		private void detach_TrnJournalVoucherLines(TrnJournalVoucherLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnJournalVoucher = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnJournalVoucherLine")]
	public partial class TrnJournalVoucherLine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _JVId;
		
		private int _BranchId;
		
		private int _AccountId;
		
		private int _ArticleId;
		
		private string _Particulars;
		
		private decimal _DebitAmount;
		
		private decimal _CreditAmount;
		
		private System.Nullable<int> _APRRId;
		
		private System.Nullable<int> _ARSIId;
		
		private bool _IsClear;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<TrnJournalVoucher> _TrnJournalVoucher;
		
		private EntityRef<TrnReceivingReceipt> _TrnReceivingReceipt;
		
		private EntityRef<TrnSalesInvoice> _TrnSalesInvoice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnJVIdChanging(int value);
    partial void OnJVIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnArticleIdChanging(int value);
    partial void OnArticleIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnDebitAmountChanging(decimal value);
    partial void OnDebitAmountChanged();
    partial void OnCreditAmountChanging(decimal value);
    partial void OnCreditAmountChanged();
    partial void OnAPRRIdChanging(System.Nullable<int> value);
    partial void OnAPRRIdChanged();
    partial void OnARSIIdChanging(System.Nullable<int> value);
    partial void OnARSIIdChanged();
    partial void OnIsClearChanging(bool value);
    partial void OnIsClearChanged();
    #endregion
		
		public TrnJournalVoucherLine()
		{
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._TrnJournalVoucher = default(EntityRef<TrnJournalVoucher>);
			this._TrnReceivingReceipt = default(EntityRef<TrnReceivingReceipt>);
			this._TrnSalesInvoice = default(EntityRef<TrnSalesInvoice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JVId", DbType="Int NOT NULL")]
		public int JVId
		{
			get
			{
				return this._JVId;
			}
			set
			{
				if ((this._JVId != value))
				{
					if (this._TrnJournalVoucher.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJVIdChanging(value);
					this.SendPropertyChanging();
					this._JVId = value;
					this.SendPropertyChanged("JVId");
					this.OnJVIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="Int NOT NULL")]
		public int ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebitAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal DebitAmount
		{
			get
			{
				return this._DebitAmount;
			}
			set
			{
				if ((this._DebitAmount != value))
				{
					this.OnDebitAmountChanging(value);
					this.SendPropertyChanging();
					this._DebitAmount = value;
					this.SendPropertyChanged("DebitAmount");
					this.OnDebitAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal CreditAmount
		{
			get
			{
				return this._CreditAmount;
			}
			set
			{
				if ((this._CreditAmount != value))
				{
					this.OnCreditAmountChanging(value);
					this.SendPropertyChanging();
					this._CreditAmount = value;
					this.SendPropertyChanged("CreditAmount");
					this.OnCreditAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APRRId", DbType="Int")]
		public System.Nullable<int> APRRId
		{
			get
			{
				return this._APRRId;
			}
			set
			{
				if ((this._APRRId != value))
				{
					if (this._TrnReceivingReceipt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAPRRIdChanging(value);
					this.SendPropertyChanging();
					this._APRRId = value;
					this.SendPropertyChanged("APRRId");
					this.OnAPRRIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ARSIId", DbType="Int")]
		public System.Nullable<int> ARSIId
		{
			get
			{
				return this._ARSIId;
			}
			set
			{
				if ((this._ARSIId != value))
				{
					if (this._TrnSalesInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnARSIIdChanging(value);
					this.SendPropertyChanging();
					this._ARSIId = value;
					this.SendPropertyChanged("ARSIId");
					this.OnARSIIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClear", DbType="Bit NOT NULL")]
		public bool IsClear
		{
			get
			{
				return this._IsClear;
			}
			set
			{
				if ((this._IsClear != value))
				{
					this.OnIsClearChanging(value);
					this.SendPropertyChanging();
					this._IsClear = value;
					this.SendPropertyChanged("IsClear");
					this.OnIsClearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnJournalVoucherLine", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.TrnJournalVoucherLines.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.TrnJournalVoucherLines.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnJournalVoucherLine", Storage="_MstArticle", ThisKey="ArticleId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnJournalVoucherLines.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnJournalVoucherLines.Add(this);
						this._ArticleId = value.Id;
					}
					else
					{
						this._ArticleId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnJournalVoucherLine", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnJournalVoucherLines.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnJournalVoucherLines.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnJournalVoucher_TrnJournalVoucherLine", Storage="_TrnJournalVoucher", ThisKey="JVId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnJournalVoucher TrnJournalVoucher
		{
			get
			{
				return this._TrnJournalVoucher.Entity;
			}
			set
			{
				TrnJournalVoucher previousValue = this._TrnJournalVoucher.Entity;
				if (((previousValue != value) 
							|| (this._TrnJournalVoucher.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnJournalVoucher.Entity = null;
						previousValue.TrnJournalVoucherLines.Remove(this);
					}
					this._TrnJournalVoucher.Entity = value;
					if ((value != null))
					{
						value.TrnJournalVoucherLines.Add(this);
						this._JVId = value.Id;
					}
					else
					{
						this._JVId = default(int);
					}
					this.SendPropertyChanged("TrnJournalVoucher");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnReceivingReceipt_TrnJournalVoucherLine", Storage="_TrnReceivingReceipt", ThisKey="APRRId", OtherKey="Id", IsForeignKey=true)]
		public TrnReceivingReceipt TrnReceivingReceipt
		{
			get
			{
				return this._TrnReceivingReceipt.Entity;
			}
			set
			{
				TrnReceivingReceipt previousValue = this._TrnReceivingReceipt.Entity;
				if (((previousValue != value) 
							|| (this._TrnReceivingReceipt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnReceivingReceipt.Entity = null;
						previousValue.TrnJournalVoucherLines.Remove(this);
					}
					this._TrnReceivingReceipt.Entity = value;
					if ((value != null))
					{
						value.TrnJournalVoucherLines.Add(this);
						this._APRRId = value.Id;
					}
					else
					{
						this._APRRId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnReceivingReceipt");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_TrnJournalVoucherLine", Storage="_TrnSalesInvoice", ThisKey="ARSIId", OtherKey="Id", IsForeignKey=true)]
		public TrnSalesInvoice TrnSalesInvoice
		{
			get
			{
				return this._TrnSalesInvoice.Entity;
			}
			set
			{
				TrnSalesInvoice previousValue = this._TrnSalesInvoice.Entity;
				if (((previousValue != value) 
							|| (this._TrnSalesInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnSalesInvoice.Entity = null;
						previousValue.TrnJournalVoucherLines.Remove(this);
					}
					this._TrnSalesInvoice.Entity = value;
					if ((value != null))
					{
						value.TrnJournalVoucherLines.Add(this);
						this._ARSIId = value.Id;
					}
					else
					{
						this._ARSIId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnSalesInvoice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnPurchaseOrder")]
	public partial class TrnPurchaseOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BranchId;
		
		private string _PONumber;
		
		private System.DateTime _PODate;
		
		private int _SupplierId;
		
		private int _TermId;
		
		private string _ManualRequestNumber;
		
		private string _ManualPONumber;
		
		private System.DateTime _DateNeeded;
		
		private string _Remarks;
		
		private bool _IsClose;
		
		private int _RequestedById;
		
		private int _PreparedById;
		
		private int _CheckedById;
		
		private int _ApprovedById;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnPurchaseOrderItem> _TrnPurchaseOrderItems;
		
		private EntitySet<TrnReceivingReceiptItem> _TrnReceivingReceiptItems;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstTerm> _MstTerm;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnPONumberChanging(string value);
    partial void OnPONumberChanged();
    partial void OnPODateChanging(System.DateTime value);
    partial void OnPODateChanged();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnTermIdChanging(int value);
    partial void OnTermIdChanged();
    partial void OnManualRequestNumberChanging(string value);
    partial void OnManualRequestNumberChanged();
    partial void OnManualPONumberChanging(string value);
    partial void OnManualPONumberChanged();
    partial void OnDateNeededChanging(System.DateTime value);
    partial void OnDateNeededChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnIsCloseChanging(bool value);
    partial void OnIsCloseChanged();
    partial void OnRequestedByIdChanging(int value);
    partial void OnRequestedByIdChanged();
    partial void OnPreparedByIdChanging(int value);
    partial void OnPreparedByIdChanged();
    partial void OnCheckedByIdChanging(int value);
    partial void OnCheckedByIdChanged();
    partial void OnApprovedByIdChanging(int value);
    partial void OnApprovedByIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnPurchaseOrder()
		{
			this._TrnPurchaseOrderItems = new EntitySet<TrnPurchaseOrderItem>(new Action<TrnPurchaseOrderItem>(this.attach_TrnPurchaseOrderItems), new Action<TrnPurchaseOrderItem>(this.detach_TrnPurchaseOrderItems));
			this._TrnReceivingReceiptItems = new EntitySet<TrnReceivingReceiptItem>(new Action<TrnReceivingReceiptItem>(this.attach_TrnReceivingReceiptItems), new Action<TrnReceivingReceiptItem>(this.detach_TrnReceivingReceiptItems));
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstTerm = default(EntityRef<MstTerm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PONumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PONumber
		{
			get
			{
				return this._PONumber;
			}
			set
			{
				if ((this._PONumber != value))
				{
					this.OnPONumberChanging(value);
					this.SendPropertyChanging();
					this._PONumber = value;
					this.SendPropertyChanged("PONumber");
					this.OnPONumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PODate", DbType="DateTime NOT NULL")]
		public System.DateTime PODate
		{
			get
			{
				return this._PODate;
			}
			set
			{
				if ((this._PODate != value))
				{
					this.OnPODateChanging(value);
					this.SendPropertyChanging();
					this._PODate = value;
					this.SendPropertyChanged("PODate");
					this.OnPODateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="Int NOT NULL")]
		public int TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._MstTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualRequestNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ManualRequestNumber
		{
			get
			{
				return this._ManualRequestNumber;
			}
			set
			{
				if ((this._ManualRequestNumber != value))
				{
					this.OnManualRequestNumberChanging(value);
					this.SendPropertyChanging();
					this._ManualRequestNumber = value;
					this.SendPropertyChanged("ManualRequestNumber");
					this.OnManualRequestNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualPONumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ManualPONumber
		{
			get
			{
				return this._ManualPONumber;
			}
			set
			{
				if ((this._ManualPONumber != value))
				{
					this.OnManualPONumberChanging(value);
					this.SendPropertyChanging();
					this._ManualPONumber = value;
					this.SendPropertyChanged("ManualPONumber");
					this.OnManualPONumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateNeeded", DbType="DateTime NOT NULL")]
		public System.DateTime DateNeeded
		{
			get
			{
				return this._DateNeeded;
			}
			set
			{
				if ((this._DateNeeded != value))
				{
					this.OnDateNeededChanging(value);
					this.SendPropertyChanging();
					this._DateNeeded = value;
					this.SendPropertyChanged("DateNeeded");
					this.OnDateNeededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClose", DbType="Bit NOT NULL")]
		public bool IsClose
		{
			get
			{
				return this._IsClose;
			}
			set
			{
				if ((this._IsClose != value))
				{
					this.OnIsCloseChanging(value);
					this.SendPropertyChanging();
					this._IsClose = value;
					this.SendPropertyChanged("IsClose");
					this.OnIsCloseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestedById", DbType="Int NOT NULL")]
		public int RequestedById
		{
			get
			{
				return this._RequestedById;
			}
			set
			{
				if ((this._RequestedById != value))
				{
					this.OnRequestedByIdChanging(value);
					this.SendPropertyChanging();
					this._RequestedById = value;
					this.SendPropertyChanged("RequestedById");
					this.OnRequestedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedById", DbType="Int NOT NULL")]
		public int PreparedById
		{
			get
			{
				return this._PreparedById;
			}
			set
			{
				if ((this._PreparedById != value))
				{
					this.OnPreparedByIdChanging(value);
					this.SendPropertyChanging();
					this._PreparedById = value;
					this.SendPropertyChanged("PreparedById");
					this.OnPreparedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedById", DbType="Int NOT NULL")]
		public int CheckedById
		{
			get
			{
				return this._CheckedById;
			}
			set
			{
				if ((this._CheckedById != value))
				{
					this.OnCheckedByIdChanging(value);
					this.SendPropertyChanging();
					this._CheckedById = value;
					this.SendPropertyChanged("CheckedById");
					this.OnCheckedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedById", DbType="Int NOT NULL")]
		public int ApprovedById
		{
			get
			{
				return this._ApprovedById;
			}
			set
			{
				if ((this._ApprovedById != value))
				{
					this.OnApprovedByIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedById = value;
					this.SendPropertyChanged("ApprovedById");
					this.OnApprovedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPurchaseOrder_TrnPurchaseOrderItem", Storage="_TrnPurchaseOrderItems", ThisKey="Id", OtherKey="POId")]
		public EntitySet<TrnPurchaseOrderItem> TrnPurchaseOrderItems
		{
			get
			{
				return this._TrnPurchaseOrderItems;
			}
			set
			{
				this._TrnPurchaseOrderItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPurchaseOrder_TrnReceivingReceiptItem", Storage="_TrnReceivingReceiptItems", ThisKey="Id", OtherKey="POId")]
		public EntitySet<TrnReceivingReceiptItem> TrnReceivingReceiptItems
		{
			get
			{
				return this._TrnReceivingReceiptItems;
			}
			set
			{
				this._TrnReceivingReceiptItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnPurchaseOrder", Storage="_MstArticle", ThisKey="SupplierId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnPurchaseOrders.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrders.Add(this);
						this._SupplierId = value.Id;
					}
					else
					{
						this._SupplierId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnPurchaseOrder", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnPurchaseOrders.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrders.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_TrnPurchaseOrder", Storage="_MstTerm", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public MstTerm MstTerm
		{
			get
			{
				return this._MstTerm.Entity;
			}
			set
			{
				MstTerm previousValue = this._MstTerm.Entity;
				if (((previousValue != value) 
							|| (this._MstTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTerm.Entity = null;
						previousValue.TrnPurchaseOrders.Remove(this);
					}
					this._MstTerm.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrders.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(int);
					}
					this.SendPropertyChanged("MstTerm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnPurchaseOrderItems(TrnPurchaseOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnPurchaseOrder = this;
		}
		
		private void detach_TrnPurchaseOrderItems(TrnPurchaseOrderItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnPurchaseOrder = null;
		}
		
		private void attach_TrnReceivingReceiptItems(TrnReceivingReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnPurchaseOrder = this;
		}
		
		private void detach_TrnReceivingReceiptItems(TrnReceivingReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnPurchaseOrder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnPurchaseOrderItem")]
	public partial class TrnPurchaseOrderItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _POId;
		
		private int _ItemId;
		
		private string _Particulars;
		
		private int _UnitId;
		
		private decimal _Quantity;
		
		private decimal _Cost;
		
		private decimal _Amount;
		
		private int _BaseUnitId;
		
		private decimal _BaseQuantity;
		
		private decimal _BaseCost;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstUnit> _MstUnit;
		
		private EntityRef<TrnPurchaseOrder> _TrnPurchaseOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPOIdChanging(int value);
    partial void OnPOIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnBaseUnitIdChanging(int value);
    partial void OnBaseUnitIdChanged();
    partial void OnBaseQuantityChanging(decimal value);
    partial void OnBaseQuantityChanged();
    partial void OnBaseCostChanging(decimal value);
    partial void OnBaseCostChanged();
    #endregion
		
		public TrnPurchaseOrderItem()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstUnit = default(EntityRef<MstUnit>);
			this._TrnPurchaseOrder = default(EntityRef<TrnPurchaseOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POId", DbType="Int NOT NULL")]
		public int POId
		{
			get
			{
				return this._POId;
			}
			set
			{
				if ((this._POId != value))
				{
					if (this._TrnPurchaseOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPOIdChanging(value);
					this.SendPropertyChanging();
					this._POId = value;
					this.SendPropertyChanged("POId");
					this.OnPOIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseUnitId", DbType="Int NOT NULL")]
		public int BaseUnitId
		{
			get
			{
				return this._BaseUnitId;
			}
			set
			{
				if ((this._BaseUnitId != value))
				{
					this.OnBaseUnitIdChanging(value);
					this.SendPropertyChanging();
					this._BaseUnitId = value;
					this.SendPropertyChanged("BaseUnitId");
					this.OnBaseUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseQuantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal BaseQuantity
		{
			get
			{
				return this._BaseQuantity;
			}
			set
			{
				if ((this._BaseQuantity != value))
				{
					this.OnBaseQuantityChanging(value);
					this.SendPropertyChanging();
					this._BaseQuantity = value;
					this.SendPropertyChanged("BaseQuantity");
					this.OnBaseQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseCost", DbType="Decimal(18,5) NOT NULL")]
		public decimal BaseCost
		{
			get
			{
				return this._BaseCost;
			}
			set
			{
				if ((this._BaseCost != value))
				{
					this.OnBaseCostChanging(value);
					this.SendPropertyChanging();
					this._BaseCost = value;
					this.SendPropertyChanged("BaseCost");
					this.OnBaseCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnPurchaseOrderItem", Storage="_MstArticle", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnPurchaseOrderItems.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrderItems.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnPurchaseOrderItem", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.TrnPurchaseOrderItems.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrderItems.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPurchaseOrder_TrnPurchaseOrderItem", Storage="_TrnPurchaseOrder", ThisKey="POId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnPurchaseOrder TrnPurchaseOrder
		{
			get
			{
				return this._TrnPurchaseOrder.Entity;
			}
			set
			{
				TrnPurchaseOrder previousValue = this._TrnPurchaseOrder.Entity;
				if (((previousValue != value) 
							|| (this._TrnPurchaseOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnPurchaseOrder.Entity = null;
						previousValue.TrnPurchaseOrderItems.Remove(this);
					}
					this._TrnPurchaseOrder.Entity = value;
					if ((value != null))
					{
						value.TrnPurchaseOrderItems.Add(this);
						this._POId = value.Id;
					}
					else
					{
						this._POId = default(int);
					}
					this.SendPropertyChanged("TrnPurchaseOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnReceivingReceipt")]
	public partial class TrnReceivingReceipt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BranchId;
		
		private string _RRNumber;
		
		private System.DateTime _RRDate;
		
		private int _SupplierId;
		
		private int _TermId;
		
		private string _DocumentReference;
		
		private string _ManualRRNumber;
		
		private string _Remarks;
		
		private decimal _Amount;
		
		private decimal _WTaxAmount;
		
		private decimal _PaidAmount;
		
		private decimal _AdjustmentAmount;
		
		private decimal _BalanceAmount;
		
		private int _ReceivedById;
		
		private int _PreparedById;
		
		private int _CheckedById;
		
		private int _ApprovedById;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnDisbursementLine> _TrnDisbursementLines;
		
		private EntitySet<TrnInventory> _TrnInventories;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntitySet<TrnJournal> _TrnJournals1;
		
		private EntitySet<TrnJournalVoucherLine> _TrnJournalVoucherLines;
		
		private EntitySet<TrnReceivingReceiptItem> _TrnReceivingReceiptItems;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstTerm> _MstTerm;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnRRNumberChanging(string value);
    partial void OnRRNumberChanged();
    partial void OnRRDateChanging(System.DateTime value);
    partial void OnRRDateChanged();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnTermIdChanging(int value);
    partial void OnTermIdChanged();
    partial void OnDocumentReferenceChanging(string value);
    partial void OnDocumentReferenceChanged();
    partial void OnManualRRNumberChanging(string value);
    partial void OnManualRRNumberChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnWTaxAmountChanging(decimal value);
    partial void OnWTaxAmountChanged();
    partial void OnPaidAmountChanging(decimal value);
    partial void OnPaidAmountChanged();
    partial void OnAdjustmentAmountChanging(decimal value);
    partial void OnAdjustmentAmountChanged();
    partial void OnBalanceAmountChanging(decimal value);
    partial void OnBalanceAmountChanged();
    partial void OnReceivedByIdChanging(int value);
    partial void OnReceivedByIdChanged();
    partial void OnPreparedByIdChanging(int value);
    partial void OnPreparedByIdChanged();
    partial void OnCheckedByIdChanging(int value);
    partial void OnCheckedByIdChanged();
    partial void OnApprovedByIdChanging(int value);
    partial void OnApprovedByIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnReceivingReceipt()
		{
			this._TrnDisbursementLines = new EntitySet<TrnDisbursementLine>(new Action<TrnDisbursementLine>(this.attach_TrnDisbursementLines), new Action<TrnDisbursementLine>(this.detach_TrnDisbursementLines));
			this._TrnInventories = new EntitySet<TrnInventory>(new Action<TrnInventory>(this.attach_TrnInventories), new Action<TrnInventory>(this.detach_TrnInventories));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._TrnJournals1 = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals1), new Action<TrnJournal>(this.detach_TrnJournals1));
			this._TrnJournalVoucherLines = new EntitySet<TrnJournalVoucherLine>(new Action<TrnJournalVoucherLine>(this.attach_TrnJournalVoucherLines), new Action<TrnJournalVoucherLine>(this.detach_TrnJournalVoucherLines));
			this._TrnReceivingReceiptItems = new EntitySet<TrnReceivingReceiptItem>(new Action<TrnReceivingReceiptItem>(this.attach_TrnReceivingReceiptItems), new Action<TrnReceivingReceiptItem>(this.detach_TrnReceivingReceiptItems));
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstTerm = default(EntityRef<MstTerm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RRNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RRNumber
		{
			get
			{
				return this._RRNumber;
			}
			set
			{
				if ((this._RRNumber != value))
				{
					this.OnRRNumberChanging(value);
					this.SendPropertyChanging();
					this._RRNumber = value;
					this.SendPropertyChanged("RRNumber");
					this.OnRRNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RRDate", DbType="DateTime NOT NULL")]
		public System.DateTime RRDate
		{
			get
			{
				return this._RRDate;
			}
			set
			{
				if ((this._RRDate != value))
				{
					this.OnRRDateChanging(value);
					this.SendPropertyChanging();
					this._RRDate = value;
					this.SendPropertyChanged("RRDate");
					this.OnRRDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="Int NOT NULL")]
		public int TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._MstTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentReference", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DocumentReference
		{
			get
			{
				return this._DocumentReference;
			}
			set
			{
				if ((this._DocumentReference != value))
				{
					this.OnDocumentReferenceChanging(value);
					this.SendPropertyChanging();
					this._DocumentReference = value;
					this.SendPropertyChanged("DocumentReference");
					this.OnDocumentReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualRRNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ManualRRNumber
		{
			get
			{
				return this._ManualRRNumber;
			}
			set
			{
				if ((this._ManualRRNumber != value))
				{
					this.OnManualRRNumberChanging(value);
					this.SendPropertyChanging();
					this._ManualRRNumber = value;
					this.SendPropertyChanged("ManualRRNumber");
					this.OnManualRRNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WTaxAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal WTaxAmount
		{
			get
			{
				return this._WTaxAmount;
			}
			set
			{
				if ((this._WTaxAmount != value))
				{
					this.OnWTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._WTaxAmount = value;
					this.SendPropertyChanged("WTaxAmount");
					this.OnWTaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal PaidAmount
		{
			get
			{
				return this._PaidAmount;
			}
			set
			{
				if ((this._PaidAmount != value))
				{
					this.OnPaidAmountChanging(value);
					this.SendPropertyChanging();
					this._PaidAmount = value;
					this.SendPropertyChanged("PaidAmount");
					this.OnPaidAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdjustmentAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal AdjustmentAmount
		{
			get
			{
				return this._AdjustmentAmount;
			}
			set
			{
				if ((this._AdjustmentAmount != value))
				{
					this.OnAdjustmentAmountChanging(value);
					this.SendPropertyChanging();
					this._AdjustmentAmount = value;
					this.SendPropertyChanged("AdjustmentAmount");
					this.OnAdjustmentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal BalanceAmount
		{
			get
			{
				return this._BalanceAmount;
			}
			set
			{
				if ((this._BalanceAmount != value))
				{
					this.OnBalanceAmountChanging(value);
					this.SendPropertyChanging();
					this._BalanceAmount = value;
					this.SendPropertyChanged("BalanceAmount");
					this.OnBalanceAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedById", DbType="Int NOT NULL")]
		public int ReceivedById
		{
			get
			{
				return this._ReceivedById;
			}
			set
			{
				if ((this._ReceivedById != value))
				{
					this.OnReceivedByIdChanging(value);
					this.SendPropertyChanging();
					this._ReceivedById = value;
					this.SendPropertyChanged("ReceivedById");
					this.OnReceivedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedById", DbType="Int NOT NULL")]
		public int PreparedById
		{
			get
			{
				return this._PreparedById;
			}
			set
			{
				if ((this._PreparedById != value))
				{
					this.OnPreparedByIdChanging(value);
					this.SendPropertyChanging();
					this._PreparedById = value;
					this.SendPropertyChanged("PreparedById");
					this.OnPreparedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedById", DbType="Int NOT NULL")]
		public int CheckedById
		{
			get
			{
				return this._CheckedById;
			}
			set
			{
				if ((this._CheckedById != value))
				{
					this.OnCheckedByIdChanging(value);
					this.SendPropertyChanging();
					this._CheckedById = value;
					this.SendPropertyChanged("CheckedById");
					this.OnCheckedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedById", DbType="Int NOT NULL")]
		public int ApprovedById
		{
			get
			{
				return this._ApprovedById;
			}
			set
			{
				if ((this._ApprovedById != value))
				{
					this.OnApprovedByIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedById = value;
					this.SendPropertyChanged("ApprovedById");
					this.OnApprovedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnReceivingReceipt_TrnDisbursementLine", Storage="_TrnDisbursementLines", ThisKey="Id", OtherKey="RRId")]
		public EntitySet<TrnDisbursementLine> TrnDisbursementLines
		{
			get
			{
				return this._TrnDisbursementLines;
			}
			set
			{
				this._TrnDisbursementLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnReceivingReceipt_TrnInventory", Storage="_TrnInventories", ThisKey="Id", OtherKey="RRId")]
		public EntitySet<TrnInventory> TrnInventories
		{
			get
			{
				return this._TrnInventories;
			}
			set
			{
				this._TrnInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnReceivingReceipt_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="RRId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnReceivingReceipt_TrnJournal1", Storage="_TrnJournals1", ThisKey="Id", OtherKey="APRRId")]
		public EntitySet<TrnJournal> TrnJournals1
		{
			get
			{
				return this._TrnJournals1;
			}
			set
			{
				this._TrnJournals1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnReceivingReceipt_TrnJournalVoucherLine", Storage="_TrnJournalVoucherLines", ThisKey="Id", OtherKey="APRRId")]
		public EntitySet<TrnJournalVoucherLine> TrnJournalVoucherLines
		{
			get
			{
				return this._TrnJournalVoucherLines;
			}
			set
			{
				this._TrnJournalVoucherLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnReceivingReceipt_TrnReceivingReceiptItem", Storage="_TrnReceivingReceiptItems", ThisKey="Id", OtherKey="RRId")]
		public EntitySet<TrnReceivingReceiptItem> TrnReceivingReceiptItems
		{
			get
			{
				return this._TrnReceivingReceiptItems;
			}
			set
			{
				this._TrnReceivingReceiptItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnReceivingReceipt", Storage="_MstArticle", ThisKey="SupplierId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnReceivingReceipts.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnReceivingReceipts.Add(this);
						this._SupplierId = value.Id;
					}
					else
					{
						this._SupplierId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnReceivingReceipt", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnReceivingReceipts.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnReceivingReceipts.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_TrnReceivingReceipt", Storage="_MstTerm", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public MstTerm MstTerm
		{
			get
			{
				return this._MstTerm.Entity;
			}
			set
			{
				MstTerm previousValue = this._MstTerm.Entity;
				if (((previousValue != value) 
							|| (this._MstTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTerm.Entity = null;
						previousValue.TrnReceivingReceipts.Remove(this);
					}
					this._MstTerm.Entity = value;
					if ((value != null))
					{
						value.TrnReceivingReceipts.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(int);
					}
					this.SendPropertyChanged("MstTerm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnDisbursementLines(TrnDisbursementLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnReceivingReceipt = this;
		}
		
		private void detach_TrnDisbursementLines(TrnDisbursementLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnReceivingReceipt = null;
		}
		
		private void attach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnReceivingReceipt = this;
		}
		
		private void detach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnReceivingReceipt = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnReceivingReceipt = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnReceivingReceipt = null;
		}
		
		private void attach_TrnJournals1(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnReceivingReceipt1 = this;
		}
		
		private void detach_TrnJournals1(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnReceivingReceipt1 = null;
		}
		
		private void attach_TrnJournalVoucherLines(TrnJournalVoucherLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnReceivingReceipt = this;
		}
		
		private void detach_TrnJournalVoucherLines(TrnJournalVoucherLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnReceivingReceipt = null;
		}
		
		private void attach_TrnReceivingReceiptItems(TrnReceivingReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnReceivingReceipt = this;
		}
		
		private void detach_TrnReceivingReceiptItems(TrnReceivingReceiptItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnReceivingReceipt = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnReceivingReceiptItem")]
	public partial class TrnReceivingReceiptItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _RRId;
		
		private int _POId;
		
		private int _ItemId;
		
		private string _Particulars;
		
		private int _UnitId;
		
		private decimal _Quantity;
		
		private decimal _Cost;
		
		private decimal _Amount;
		
		private int _VATId;
		
		private decimal _VATPercentage;
		
		private decimal _VATAmount;
		
		private int _WTAXId;
		
		private decimal _WTAXPercentage;
		
		private decimal _WTAXAmount;
		
		private int _BranchId;
		
		private int _BaseUnitId;
		
		private decimal _BaseQuantity;
		
		private decimal _BaseCost;
		
		private int _DiscountId;
		
		private decimal _DiscountRate;
		
		private decimal _DiscountAmount;
		
		private decimal _NetCost;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstTaxType> _MstTaxType;
		
		private EntityRef<MstTaxType> _MstTaxType1;
		
		private EntityRef<MstUnit> _MstUnit;
		
		private EntityRef<MstUnit> _MstUnit1;
		
		private EntityRef<TrnPurchaseOrder> _TrnPurchaseOrder;
		
		private EntityRef<TrnReceivingReceipt> _TrnReceivingReceipt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRRIdChanging(int value);
    partial void OnRRIdChanged();
    partial void OnPOIdChanging(int value);
    partial void OnPOIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnVATIdChanging(int value);
    partial void OnVATIdChanged();
    partial void OnVATPercentageChanging(decimal value);
    partial void OnVATPercentageChanged();
    partial void OnVATAmountChanging(decimal value);
    partial void OnVATAmountChanged();
    partial void OnWTAXIdChanging(int value);
    partial void OnWTAXIdChanged();
    partial void OnWTAXPercentageChanging(decimal value);
    partial void OnWTAXPercentageChanged();
    partial void OnWTAXAmountChanging(decimal value);
    partial void OnWTAXAmountChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnBaseUnitIdChanging(int value);
    partial void OnBaseUnitIdChanged();
    partial void OnBaseQuantityChanging(decimal value);
    partial void OnBaseQuantityChanged();
    partial void OnBaseCostChanging(decimal value);
    partial void OnBaseCostChanged();
    partial void OnDiscountIdChanging(int value);
    partial void OnDiscountIdChanged();
    partial void OnDiscountRateChanging(decimal value);
    partial void OnDiscountRateChanged();
    partial void OnDiscountAmountChanging(decimal value);
    partial void OnDiscountAmountChanged();
    partial void OnNetCostChanging(decimal value);
    partial void OnNetCostChanged();
    #endregion
		
		public TrnReceivingReceiptItem()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstTaxType = default(EntityRef<MstTaxType>);
			this._MstTaxType1 = default(EntityRef<MstTaxType>);
			this._MstUnit = default(EntityRef<MstUnit>);
			this._MstUnit1 = default(EntityRef<MstUnit>);
			this._TrnPurchaseOrder = default(EntityRef<TrnPurchaseOrder>);
			this._TrnReceivingReceipt = default(EntityRef<TrnReceivingReceipt>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RRId", DbType="Int NOT NULL")]
		public int RRId
		{
			get
			{
				return this._RRId;
			}
			set
			{
				if ((this._RRId != value))
				{
					if (this._TrnReceivingReceipt.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRRIdChanging(value);
					this.SendPropertyChanging();
					this._RRId = value;
					this.SendPropertyChanged("RRId");
					this.OnRRIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POId", DbType="Int NOT NULL")]
		public int POId
		{
			get
			{
				return this._POId;
			}
			set
			{
				if ((this._POId != value))
				{
					if (this._TrnPurchaseOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPOIdChanging(value);
					this.SendPropertyChanging();
					this._POId = value;
					this.SendPropertyChanged("POId");
					this.OnPOIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VATId", DbType="Int NOT NULL")]
		public int VATId
		{
			get
			{
				return this._VATId;
			}
			set
			{
				if ((this._VATId != value))
				{
					if (this._MstTaxType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVATIdChanging(value);
					this.SendPropertyChanging();
					this._VATId = value;
					this.SendPropertyChanged("VATId");
					this.OnVATIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VATPercentage", DbType="Decimal(18,5) NOT NULL")]
		public decimal VATPercentage
		{
			get
			{
				return this._VATPercentage;
			}
			set
			{
				if ((this._VATPercentage != value))
				{
					this.OnVATPercentageChanging(value);
					this.SendPropertyChanging();
					this._VATPercentage = value;
					this.SendPropertyChanged("VATPercentage");
					this.OnVATPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VATAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal VATAmount
		{
			get
			{
				return this._VATAmount;
			}
			set
			{
				if ((this._VATAmount != value))
				{
					this.OnVATAmountChanging(value);
					this.SendPropertyChanging();
					this._VATAmount = value;
					this.SendPropertyChanged("VATAmount");
					this.OnVATAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WTAXId", DbType="Int NOT NULL")]
		public int WTAXId
		{
			get
			{
				return this._WTAXId;
			}
			set
			{
				if ((this._WTAXId != value))
				{
					if (this._MstTaxType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWTAXIdChanging(value);
					this.SendPropertyChanging();
					this._WTAXId = value;
					this.SendPropertyChanged("WTAXId");
					this.OnWTAXIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WTAXPercentage", DbType="Decimal(18,5) NOT NULL")]
		public decimal WTAXPercentage
		{
			get
			{
				return this._WTAXPercentage;
			}
			set
			{
				if ((this._WTAXPercentage != value))
				{
					this.OnWTAXPercentageChanging(value);
					this.SendPropertyChanging();
					this._WTAXPercentage = value;
					this.SendPropertyChanged("WTAXPercentage");
					this.OnWTAXPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WTAXAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal WTAXAmount
		{
			get
			{
				return this._WTAXAmount;
			}
			set
			{
				if ((this._WTAXAmount != value))
				{
					this.OnWTAXAmountChanging(value);
					this.SendPropertyChanging();
					this._WTAXAmount = value;
					this.SendPropertyChanged("WTAXAmount");
					this.OnWTAXAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseUnitId", DbType="Int NOT NULL")]
		public int BaseUnitId
		{
			get
			{
				return this._BaseUnitId;
			}
			set
			{
				if ((this._BaseUnitId != value))
				{
					if (this._MstUnit1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBaseUnitIdChanging(value);
					this.SendPropertyChanging();
					this._BaseUnitId = value;
					this.SendPropertyChanged("BaseUnitId");
					this.OnBaseUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseQuantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal BaseQuantity
		{
			get
			{
				return this._BaseQuantity;
			}
			set
			{
				if ((this._BaseQuantity != value))
				{
					this.OnBaseQuantityChanging(value);
					this.SendPropertyChanging();
					this._BaseQuantity = value;
					this.SendPropertyChanged("BaseQuantity");
					this.OnBaseQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseCost", DbType="Decimal(18,5) NOT NULL")]
		public decimal BaseCost
		{
			get
			{
				return this._BaseCost;
			}
			set
			{
				if ((this._BaseCost != value))
				{
					this.OnBaseCostChanging(value);
					this.SendPropertyChanging();
					this._BaseCost = value;
					this.SendPropertyChanged("BaseCost");
					this.OnBaseCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountId", DbType="Int NOT NULL")]
		public int DiscountId
		{
			get
			{
				return this._DiscountId;
			}
			set
			{
				if ((this._DiscountId != value))
				{
					this.OnDiscountIdChanging(value);
					this.SendPropertyChanging();
					this._DiscountId = value;
					this.SendPropertyChanged("DiscountId");
					this.OnDiscountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal DiscountRate
		{
			get
			{
				return this._DiscountRate;
			}
			set
			{
				if ((this._DiscountRate != value))
				{
					this.OnDiscountRateChanging(value);
					this.SendPropertyChanging();
					this._DiscountRate = value;
					this.SendPropertyChanged("DiscountRate");
					this.OnDiscountRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal DiscountAmount
		{
			get
			{
				return this._DiscountAmount;
			}
			set
			{
				if ((this._DiscountAmount != value))
				{
					this.OnDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._DiscountAmount = value;
					this.SendPropertyChanged("DiscountAmount");
					this.OnDiscountAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetCost", DbType="Decimal(18,5) NOT NULL")]
		public decimal NetCost
		{
			get
			{
				return this._NetCost;
			}
			set
			{
				if ((this._NetCost != value))
				{
					this.OnNetCostChanging(value);
					this.SendPropertyChanging();
					this._NetCost = value;
					this.SendPropertyChanged("NetCost");
					this.OnNetCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnReceivingReceiptItem", Storage="_MstArticle", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnReceivingReceiptItems.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnReceivingReceiptItems.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnReceivingReceiptItem", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnReceivingReceiptItems.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnReceivingReceiptItems.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTaxType_TrnReceivingReceiptItem", Storage="_MstTaxType", ThisKey="VATId", OtherKey="Id", IsForeignKey=true)]
		public MstTaxType MstTaxType
		{
			get
			{
				return this._MstTaxType.Entity;
			}
			set
			{
				MstTaxType previousValue = this._MstTaxType.Entity;
				if (((previousValue != value) 
							|| (this._MstTaxType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTaxType.Entity = null;
						previousValue.TrnReceivingReceiptItems.Remove(this);
					}
					this._MstTaxType.Entity = value;
					if ((value != null))
					{
						value.TrnReceivingReceiptItems.Add(this);
						this._VATId = value.Id;
					}
					else
					{
						this._VATId = default(int);
					}
					this.SendPropertyChanged("MstTaxType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTaxType_TrnReceivingReceiptItem1", Storage="_MstTaxType1", ThisKey="WTAXId", OtherKey="Id", IsForeignKey=true)]
		public MstTaxType MstTaxType1
		{
			get
			{
				return this._MstTaxType1.Entity;
			}
			set
			{
				MstTaxType previousValue = this._MstTaxType1.Entity;
				if (((previousValue != value) 
							|| (this._MstTaxType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTaxType1.Entity = null;
						previousValue.TrnReceivingReceiptItems1.Remove(this);
					}
					this._MstTaxType1.Entity = value;
					if ((value != null))
					{
						value.TrnReceivingReceiptItems1.Add(this);
						this._WTAXId = value.Id;
					}
					else
					{
						this._WTAXId = default(int);
					}
					this.SendPropertyChanged("MstTaxType1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnReceivingReceiptItem", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.TrnReceivingReceiptItems.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.TrnReceivingReceiptItems.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnReceivingReceiptItem1", Storage="_MstUnit1", ThisKey="BaseUnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit1
		{
			get
			{
				return this._MstUnit1.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit1.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit1.Entity = null;
						previousValue.TrnReceivingReceiptItems1.Remove(this);
					}
					this._MstUnit1.Entity = value;
					if ((value != null))
					{
						value.TrnReceivingReceiptItems1.Add(this);
						this._BaseUnitId = value.Id;
					}
					else
					{
						this._BaseUnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnPurchaseOrder_TrnReceivingReceiptItem", Storage="_TrnPurchaseOrder", ThisKey="POId", OtherKey="Id", IsForeignKey=true)]
		public TrnPurchaseOrder TrnPurchaseOrder
		{
			get
			{
				return this._TrnPurchaseOrder.Entity;
			}
			set
			{
				TrnPurchaseOrder previousValue = this._TrnPurchaseOrder.Entity;
				if (((previousValue != value) 
							|| (this._TrnPurchaseOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnPurchaseOrder.Entity = null;
						previousValue.TrnReceivingReceiptItems.Remove(this);
					}
					this._TrnPurchaseOrder.Entity = value;
					if ((value != null))
					{
						value.TrnReceivingReceiptItems.Add(this);
						this._POId = value.Id;
					}
					else
					{
						this._POId = default(int);
					}
					this.SendPropertyChanged("TrnPurchaseOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnReceivingReceipt_TrnReceivingReceiptItem", Storage="_TrnReceivingReceipt", ThisKey="RRId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnReceivingReceipt TrnReceivingReceipt
		{
			get
			{
				return this._TrnReceivingReceipt.Entity;
			}
			set
			{
				TrnReceivingReceipt previousValue = this._TrnReceivingReceipt.Entity;
				if (((previousValue != value) 
							|| (this._TrnReceivingReceipt.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnReceivingReceipt.Entity = null;
						previousValue.TrnReceivingReceiptItems.Remove(this);
					}
					this._TrnReceivingReceipt.Entity = value;
					if ((value != null))
					{
						value.TrnReceivingReceiptItems.Add(this);
						this._RRId = value.Id;
					}
					else
					{
						this._RRId = default(int);
					}
					this.SendPropertyChanged("TrnReceivingReceipt");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnSalesInvoice")]
	public partial class TrnSalesInvoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BranchId;
		
		private string _SINumber;
		
		private System.DateTime _SIDate;
		
		private int _CustomerId;
		
		private int _TermId;
		
		private string _DocumentReference;
		
		private string _ManualSINumber;
		
		private string _Remarks;
		
		private decimal _Amount;
		
		private decimal _PaidAmount;
		
		private decimal _AdjustmentAmount;
		
		private decimal _BalanceAmount;
		
		private int _SoldById;
		
		private int _PreparedById;
		
		private int _CheckedById;
		
		private int _ApprovedById;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnCollectionLine> _TrnCollectionLines;
		
		private EntitySet<TrnInventory> _TrnInventories;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntitySet<TrnJournal> _TrnJournals1;
		
		private EntitySet<TrnJournalVoucherLine> _TrnJournalVoucherLines;
		
		private EntitySet<TrnSalesInvoiceItem> _TrnSalesInvoiceItems;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstTerm> _MstTerm;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnSINumberChanging(string value);
    partial void OnSINumberChanged();
    partial void OnSIDateChanging(System.DateTime value);
    partial void OnSIDateChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnTermIdChanging(int value);
    partial void OnTermIdChanged();
    partial void OnDocumentReferenceChanging(string value);
    partial void OnDocumentReferenceChanged();
    partial void OnManualSINumberChanging(string value);
    partial void OnManualSINumberChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnPaidAmountChanging(decimal value);
    partial void OnPaidAmountChanged();
    partial void OnAdjustmentAmountChanging(decimal value);
    partial void OnAdjustmentAmountChanged();
    partial void OnBalanceAmountChanging(decimal value);
    partial void OnBalanceAmountChanged();
    partial void OnSoldByIdChanging(int value);
    partial void OnSoldByIdChanged();
    partial void OnPreparedByIdChanging(int value);
    partial void OnPreparedByIdChanged();
    partial void OnCheckedByIdChanging(int value);
    partial void OnCheckedByIdChanged();
    partial void OnApprovedByIdChanging(int value);
    partial void OnApprovedByIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnSalesInvoice()
		{
			this._TrnCollectionLines = new EntitySet<TrnCollectionLine>(new Action<TrnCollectionLine>(this.attach_TrnCollectionLines), new Action<TrnCollectionLine>(this.detach_TrnCollectionLines));
			this._TrnInventories = new EntitySet<TrnInventory>(new Action<TrnInventory>(this.attach_TrnInventories), new Action<TrnInventory>(this.detach_TrnInventories));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._TrnJournals1 = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals1), new Action<TrnJournal>(this.detach_TrnJournals1));
			this._TrnJournalVoucherLines = new EntitySet<TrnJournalVoucherLine>(new Action<TrnJournalVoucherLine>(this.attach_TrnJournalVoucherLines), new Action<TrnJournalVoucherLine>(this.detach_TrnJournalVoucherLines));
			this._TrnSalesInvoiceItems = new EntitySet<TrnSalesInvoiceItem>(new Action<TrnSalesInvoiceItem>(this.attach_TrnSalesInvoiceItems), new Action<TrnSalesInvoiceItem>(this.detach_TrnSalesInvoiceItems));
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstTerm = default(EntityRef<MstTerm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SINumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SINumber
		{
			get
			{
				return this._SINumber;
			}
			set
			{
				if ((this._SINumber != value))
				{
					this.OnSINumberChanging(value);
					this.SendPropertyChanging();
					this._SINumber = value;
					this.SendPropertyChanged("SINumber");
					this.OnSINumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIDate", DbType="DateTime NOT NULL")]
		public System.DateTime SIDate
		{
			get
			{
				return this._SIDate;
			}
			set
			{
				if ((this._SIDate != value))
				{
					this.OnSIDateChanging(value);
					this.SendPropertyChanging();
					this._SIDate = value;
					this.SendPropertyChanged("SIDate");
					this.OnSIDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="Int NOT NULL")]
		public int TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._MstTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentReference", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DocumentReference
		{
			get
			{
				return this._DocumentReference;
			}
			set
			{
				if ((this._DocumentReference != value))
				{
					this.OnDocumentReferenceChanging(value);
					this.SendPropertyChanging();
					this._DocumentReference = value;
					this.SendPropertyChanged("DocumentReference");
					this.OnDocumentReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualSINumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ManualSINumber
		{
			get
			{
				return this._ManualSINumber;
			}
			set
			{
				if ((this._ManualSINumber != value))
				{
					this.OnManualSINumberChanging(value);
					this.SendPropertyChanging();
					this._ManualSINumber = value;
					this.SendPropertyChanged("ManualSINumber");
					this.OnManualSINumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal PaidAmount
		{
			get
			{
				return this._PaidAmount;
			}
			set
			{
				if ((this._PaidAmount != value))
				{
					this.OnPaidAmountChanging(value);
					this.SendPropertyChanging();
					this._PaidAmount = value;
					this.SendPropertyChanged("PaidAmount");
					this.OnPaidAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdjustmentAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal AdjustmentAmount
		{
			get
			{
				return this._AdjustmentAmount;
			}
			set
			{
				if ((this._AdjustmentAmount != value))
				{
					this.OnAdjustmentAmountChanging(value);
					this.SendPropertyChanging();
					this._AdjustmentAmount = value;
					this.SendPropertyChanged("AdjustmentAmount");
					this.OnAdjustmentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal BalanceAmount
		{
			get
			{
				return this._BalanceAmount;
			}
			set
			{
				if ((this._BalanceAmount != value))
				{
					this.OnBalanceAmountChanging(value);
					this.SendPropertyChanging();
					this._BalanceAmount = value;
					this.SendPropertyChanged("BalanceAmount");
					this.OnBalanceAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoldById", DbType="Int NOT NULL")]
		public int SoldById
		{
			get
			{
				return this._SoldById;
			}
			set
			{
				if ((this._SoldById != value))
				{
					this.OnSoldByIdChanging(value);
					this.SendPropertyChanging();
					this._SoldById = value;
					this.SendPropertyChanged("SoldById");
					this.OnSoldByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedById", DbType="Int NOT NULL")]
		public int PreparedById
		{
			get
			{
				return this._PreparedById;
			}
			set
			{
				if ((this._PreparedById != value))
				{
					this.OnPreparedByIdChanging(value);
					this.SendPropertyChanging();
					this._PreparedById = value;
					this.SendPropertyChanged("PreparedById");
					this.OnPreparedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedById", DbType="Int NOT NULL")]
		public int CheckedById
		{
			get
			{
				return this._CheckedById;
			}
			set
			{
				if ((this._CheckedById != value))
				{
					this.OnCheckedByIdChanging(value);
					this.SendPropertyChanging();
					this._CheckedById = value;
					this.SendPropertyChanged("CheckedById");
					this.OnCheckedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedById", DbType="Int NOT NULL")]
		public int ApprovedById
		{
			get
			{
				return this._ApprovedById;
			}
			set
			{
				if ((this._ApprovedById != value))
				{
					this.OnApprovedByIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedById = value;
					this.SendPropertyChanged("ApprovedById");
					this.OnApprovedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_TrnCollectionLine", Storage="_TrnCollectionLines", ThisKey="Id", OtherKey="SIId")]
		public EntitySet<TrnCollectionLine> TrnCollectionLines
		{
			get
			{
				return this._TrnCollectionLines;
			}
			set
			{
				this._TrnCollectionLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_TrnInventory", Storage="_TrnInventories", ThisKey="Id", OtherKey="SIId")]
		public EntitySet<TrnInventory> TrnInventories
		{
			get
			{
				return this._TrnInventories;
			}
			set
			{
				this._TrnInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="SIId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_TrnJournal1", Storage="_TrnJournals1", ThisKey="Id", OtherKey="ARSIId")]
		public EntitySet<TrnJournal> TrnJournals1
		{
			get
			{
				return this._TrnJournals1;
			}
			set
			{
				this._TrnJournals1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_TrnJournalVoucherLine", Storage="_TrnJournalVoucherLines", ThisKey="Id", OtherKey="ARSIId")]
		public EntitySet<TrnJournalVoucherLine> TrnJournalVoucherLines
		{
			get
			{
				return this._TrnJournalVoucherLines;
			}
			set
			{
				this._TrnJournalVoucherLines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_TrnSalesInvoiceItem", Storage="_TrnSalesInvoiceItems", ThisKey="Id", OtherKey="SIId")]
		public EntitySet<TrnSalesInvoiceItem> TrnSalesInvoiceItems
		{
			get
			{
				return this._TrnSalesInvoiceItems;
			}
			set
			{
				this._TrnSalesInvoiceItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnSalesInvoice", Storage="_MstArticle", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnSalesInvoices.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnSalesInvoice", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnSalesInvoices.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_TrnSalesInvoice", Storage="_MstTerm", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public MstTerm MstTerm
		{
			get
			{
				return this._MstTerm.Entity;
			}
			set
			{
				MstTerm previousValue = this._MstTerm.Entity;
				if (((previousValue != value) 
							|| (this._MstTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTerm.Entity = null;
						previousValue.TrnSalesInvoices.Remove(this);
					}
					this._MstTerm.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(int);
					}
					this.SendPropertyChanged("MstTerm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice = this;
		}
		
		private void detach_TrnCollectionLines(TrnCollectionLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice = null;
		}
		
		private void attach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice = this;
		}
		
		private void detach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice = null;
		}
		
		private void attach_TrnJournals1(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice1 = this;
		}
		
		private void detach_TrnJournals1(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice1 = null;
		}
		
		private void attach_TrnJournalVoucherLines(TrnJournalVoucherLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice = this;
		}
		
		private void detach_TrnJournalVoucherLines(TrnJournalVoucherLine entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice = null;
		}
		
		private void attach_TrnSalesInvoiceItems(TrnSalesInvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice = this;
		}
		
		private void detach_TrnSalesInvoiceItems(TrnSalesInvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnSalesInvoiceItem")]
	public partial class TrnSalesInvoiceItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SIId;
		
		private int _ItemId;
		
		private System.Nullable<int> _ItemInventoryId;
		
		private string _Particulars;
		
		private int _UnitId;
		
		private decimal _Quantity;
		
		private decimal _Price;
		
		private int _DiscountId;
		
		private decimal _DiscountRate;
		
		private decimal _DiscountAmount;
		
		private decimal _NetPrice;
		
		private decimal _Amount;
		
		private int _VATId;
		
		private decimal _VATPercentage;
		
		private decimal _VATAmount;
		
		private int _BaseUnitId;
		
		private decimal _BaseQuantity;
		
		private decimal _BasePrice;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstArticleInventory> _MstArticleInventory;
		
		private EntityRef<MstDiscount> _MstDiscount;
		
		private EntityRef<MstTaxType> _MstTaxType;
		
		private EntityRef<MstUnit> _MstUnit;
		
		private EntityRef<MstUnit> _MstUnit1;
		
		private EntityRef<TrnSalesInvoice> _TrnSalesInvoice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSIIdChanging(int value);
    partial void OnSIIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnItemInventoryIdChanging(System.Nullable<int> value);
    partial void OnItemInventoryIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnDiscountIdChanging(int value);
    partial void OnDiscountIdChanged();
    partial void OnDiscountRateChanging(decimal value);
    partial void OnDiscountRateChanged();
    partial void OnDiscountAmountChanging(decimal value);
    partial void OnDiscountAmountChanged();
    partial void OnNetPriceChanging(decimal value);
    partial void OnNetPriceChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnVATIdChanging(int value);
    partial void OnVATIdChanged();
    partial void OnVATPercentageChanging(decimal value);
    partial void OnVATPercentageChanged();
    partial void OnVATAmountChanging(decimal value);
    partial void OnVATAmountChanged();
    partial void OnBaseUnitIdChanging(int value);
    partial void OnBaseUnitIdChanged();
    partial void OnBaseQuantityChanging(decimal value);
    partial void OnBaseQuantityChanged();
    partial void OnBasePriceChanging(decimal value);
    partial void OnBasePriceChanged();
    #endregion
		
		public TrnSalesInvoiceItem()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstArticleInventory = default(EntityRef<MstArticleInventory>);
			this._MstDiscount = default(EntityRef<MstDiscount>);
			this._MstTaxType = default(EntityRef<MstTaxType>);
			this._MstUnit = default(EntityRef<MstUnit>);
			this._MstUnit1 = default(EntityRef<MstUnit>);
			this._TrnSalesInvoice = default(EntityRef<TrnSalesInvoice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIId", DbType="Int NOT NULL")]
		public int SIId
		{
			get
			{
				return this._SIId;
			}
			set
			{
				if ((this._SIId != value))
				{
					if (this._TrnSalesInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSIIdChanging(value);
					this.SendPropertyChanging();
					this._SIId = value;
					this.SendPropertyChanged("SIId");
					this.OnSIIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemInventoryId", DbType="Int")]
		public System.Nullable<int> ItemInventoryId
		{
			get
			{
				return this._ItemInventoryId;
			}
			set
			{
				if ((this._ItemInventoryId != value))
				{
					if (this._MstArticleInventory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemInventoryIdChanging(value);
					this.SendPropertyChanging();
					this._ItemInventoryId = value;
					this.SendPropertyChanged("ItemInventoryId");
					this.OnItemInventoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,5) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountId", DbType="Int NOT NULL")]
		public int DiscountId
		{
			get
			{
				return this._DiscountId;
			}
			set
			{
				if ((this._DiscountId != value))
				{
					if (this._MstDiscount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiscountIdChanging(value);
					this.SendPropertyChanging();
					this._DiscountId = value;
					this.SendPropertyChanged("DiscountId");
					this.OnDiscountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal DiscountRate
		{
			get
			{
				return this._DiscountRate;
			}
			set
			{
				if ((this._DiscountRate != value))
				{
					this.OnDiscountRateChanging(value);
					this.SendPropertyChanging();
					this._DiscountRate = value;
					this.SendPropertyChanged("DiscountRate");
					this.OnDiscountRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal DiscountAmount
		{
			get
			{
				return this._DiscountAmount;
			}
			set
			{
				if ((this._DiscountAmount != value))
				{
					this.OnDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._DiscountAmount = value;
					this.SendPropertyChanged("DiscountAmount");
					this.OnDiscountAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetPrice", DbType="Decimal(18,5) NOT NULL")]
		public decimal NetPrice
		{
			get
			{
				return this._NetPrice;
			}
			set
			{
				if ((this._NetPrice != value))
				{
					this.OnNetPriceChanging(value);
					this.SendPropertyChanging();
					this._NetPrice = value;
					this.SendPropertyChanged("NetPrice");
					this.OnNetPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VATId", DbType="Int NOT NULL")]
		public int VATId
		{
			get
			{
				return this._VATId;
			}
			set
			{
				if ((this._VATId != value))
				{
					if (this._MstTaxType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVATIdChanging(value);
					this.SendPropertyChanging();
					this._VATId = value;
					this.SendPropertyChanged("VATId");
					this.OnVATIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VATPercentage", DbType="Decimal(18,5) NOT NULL")]
		public decimal VATPercentage
		{
			get
			{
				return this._VATPercentage;
			}
			set
			{
				if ((this._VATPercentage != value))
				{
					this.OnVATPercentageChanging(value);
					this.SendPropertyChanging();
					this._VATPercentage = value;
					this.SendPropertyChanged("VATPercentage");
					this.OnVATPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VATAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal VATAmount
		{
			get
			{
				return this._VATAmount;
			}
			set
			{
				if ((this._VATAmount != value))
				{
					this.OnVATAmountChanging(value);
					this.SendPropertyChanging();
					this._VATAmount = value;
					this.SendPropertyChanged("VATAmount");
					this.OnVATAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseUnitId", DbType="Int NOT NULL")]
		public int BaseUnitId
		{
			get
			{
				return this._BaseUnitId;
			}
			set
			{
				if ((this._BaseUnitId != value))
				{
					if (this._MstUnit1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBaseUnitIdChanging(value);
					this.SendPropertyChanging();
					this._BaseUnitId = value;
					this.SendPropertyChanged("BaseUnitId");
					this.OnBaseUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseQuantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal BaseQuantity
		{
			get
			{
				return this._BaseQuantity;
			}
			set
			{
				if ((this._BaseQuantity != value))
				{
					this.OnBaseQuantityChanging(value);
					this.SendPropertyChanging();
					this._BaseQuantity = value;
					this.SendPropertyChanged("BaseQuantity");
					this.OnBaseQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasePrice", DbType="Decimal(18,5) NOT NULL")]
		public decimal BasePrice
		{
			get
			{
				return this._BasePrice;
			}
			set
			{
				if ((this._BasePrice != value))
				{
					this.OnBasePriceChanging(value);
					this.SendPropertyChanging();
					this._BasePrice = value;
					this.SendPropertyChanged("BasePrice");
					this.OnBasePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnSalesInvoiceItem", Storage="_MstArticle", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnSalesInvoiceItems.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoiceItems.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleInventory_TrnSalesInvoiceItem", Storage="_MstArticleInventory", ThisKey="ItemInventoryId", OtherKey="Id", IsForeignKey=true)]
		public MstArticleInventory MstArticleInventory
		{
			get
			{
				return this._MstArticleInventory.Entity;
			}
			set
			{
				MstArticleInventory previousValue = this._MstArticleInventory.Entity;
				if (((previousValue != value) 
							|| (this._MstArticleInventory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticleInventory.Entity = null;
						previousValue.TrnSalesInvoiceItems.Remove(this);
					}
					this._MstArticleInventory.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoiceItems.Add(this);
						this._ItemInventoryId = value.Id;
					}
					else
					{
						this._ItemInventoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstArticleInventory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstDiscount_TrnSalesInvoiceItem", Storage="_MstDiscount", ThisKey="DiscountId", OtherKey="Id", IsForeignKey=true)]
		public MstDiscount MstDiscount
		{
			get
			{
				return this._MstDiscount.Entity;
			}
			set
			{
				MstDiscount previousValue = this._MstDiscount.Entity;
				if (((previousValue != value) 
							|| (this._MstDiscount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstDiscount.Entity = null;
						previousValue.TrnSalesInvoiceItems.Remove(this);
					}
					this._MstDiscount.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoiceItems.Add(this);
						this._DiscountId = value.Id;
					}
					else
					{
						this._DiscountId = default(int);
					}
					this.SendPropertyChanged("MstDiscount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTaxType_TrnSalesInvoiceItem", Storage="_MstTaxType", ThisKey="VATId", OtherKey="Id", IsForeignKey=true)]
		public MstTaxType MstTaxType
		{
			get
			{
				return this._MstTaxType.Entity;
			}
			set
			{
				MstTaxType previousValue = this._MstTaxType.Entity;
				if (((previousValue != value) 
							|| (this._MstTaxType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTaxType.Entity = null;
						previousValue.TrnSalesInvoiceItems.Remove(this);
					}
					this._MstTaxType.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoiceItems.Add(this);
						this._VATId = value.Id;
					}
					else
					{
						this._VATId = default(int);
					}
					this.SendPropertyChanged("MstTaxType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnSalesInvoiceItem", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.TrnSalesInvoiceItems.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoiceItems.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnSalesInvoiceItem1", Storage="_MstUnit1", ThisKey="BaseUnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit1
		{
			get
			{
				return this._MstUnit1.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit1.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit1.Entity = null;
						previousValue.TrnSalesInvoiceItems1.Remove(this);
					}
					this._MstUnit1.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoiceItems1.Add(this);
						this._BaseUnitId = value.Id;
					}
					else
					{
						this._BaseUnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_TrnSalesInvoiceItem", Storage="_TrnSalesInvoice", ThisKey="SIId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnSalesInvoice TrnSalesInvoice
		{
			get
			{
				return this._TrnSalesInvoice.Entity;
			}
			set
			{
				TrnSalesInvoice previousValue = this._TrnSalesInvoice.Entity;
				if (((previousValue != value) 
							|| (this._TrnSalesInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnSalesInvoice.Entity = null;
						previousValue.TrnSalesInvoiceItems.Remove(this);
					}
					this._TrnSalesInvoice.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoiceItems.Add(this);
						this._SIId = value.Id;
					}
					else
					{
						this._SIId = default(int);
					}
					this.SendPropertyChanged("TrnSalesInvoice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStockCount")]
	public partial class TrnStockCount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BranchId;
		
		private string _SCNumber;
		
		private System.DateTime _SCDate;
		
		private string _Particulars;
		
		private int _PreparedById;
		
		private int _CheckedById;
		
		private int _ApprovedById;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnStockCountItem> _TrnStockCountItems;
		
		private EntityRef<MstBranch> _MstBranch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnSCNumberChanging(string value);
    partial void OnSCNumberChanged();
    partial void OnSCDateChanging(System.DateTime value);
    partial void OnSCDateChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnPreparedByIdChanging(int value);
    partial void OnPreparedByIdChanged();
    partial void OnCheckedByIdChanging(int value);
    partial void OnCheckedByIdChanged();
    partial void OnApprovedByIdChanging(int value);
    partial void OnApprovedByIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnStockCount()
		{
			this._TrnStockCountItems = new EntitySet<TrnStockCountItem>(new Action<TrnStockCountItem>(this.attach_TrnStockCountItems), new Action<TrnStockCountItem>(this.detach_TrnStockCountItems));
			this._MstBranch = default(EntityRef<MstBranch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SCNumber
		{
			get
			{
				return this._SCNumber;
			}
			set
			{
				if ((this._SCNumber != value))
				{
					this.OnSCNumberChanging(value);
					this.SendPropertyChanging();
					this._SCNumber = value;
					this.SendPropertyChanged("SCNumber");
					this.OnSCNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCDate", DbType="DateTime NOT NULL")]
		public System.DateTime SCDate
		{
			get
			{
				return this._SCDate;
			}
			set
			{
				if ((this._SCDate != value))
				{
					this.OnSCDateChanging(value);
					this.SendPropertyChanging();
					this._SCDate = value;
					this.SendPropertyChanged("SCDate");
					this.OnSCDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedById", DbType="Int NOT NULL")]
		public int PreparedById
		{
			get
			{
				return this._PreparedById;
			}
			set
			{
				if ((this._PreparedById != value))
				{
					this.OnPreparedByIdChanging(value);
					this.SendPropertyChanging();
					this._PreparedById = value;
					this.SendPropertyChanged("PreparedById");
					this.OnPreparedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedById", DbType="Int NOT NULL")]
		public int CheckedById
		{
			get
			{
				return this._CheckedById;
			}
			set
			{
				if ((this._CheckedById != value))
				{
					this.OnCheckedByIdChanging(value);
					this.SendPropertyChanging();
					this._CheckedById = value;
					this.SendPropertyChanged("CheckedById");
					this.OnCheckedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedById", DbType="Int NOT NULL")]
		public int ApprovedById
		{
			get
			{
				return this._ApprovedById;
			}
			set
			{
				if ((this._ApprovedById != value))
				{
					this.OnApprovedByIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedById = value;
					this.SendPropertyChanged("ApprovedById");
					this.OnApprovedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockCount_TrnStockCountItem", Storage="_TrnStockCountItems", ThisKey="Id", OtherKey="SCId")]
		public EntitySet<TrnStockCountItem> TrnStockCountItems
		{
			get
			{
				return this._TrnStockCountItems;
			}
			set
			{
				this._TrnStockCountItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnStockCount", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnStockCounts.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnStockCounts.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnStockCountItems(TrnStockCountItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockCount = this;
		}
		
		private void detach_TrnStockCountItems(TrnStockCountItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockCount = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStockCountItem")]
	public partial class TrnStockCountItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SCId;
		
		private int _ItemId;
		
		private string _Particulars;
		
		private decimal _Quantity;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<TrnStockCount> _TrnStockCount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSCIdChanging(int value);
    partial void OnSCIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    #endregion
		
		public TrnStockCountItem()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._TrnStockCount = default(EntityRef<TrnStockCount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCId", DbType="Int NOT NULL")]
		public int SCId
		{
			get
			{
				return this._SCId;
			}
			set
			{
				if ((this._SCId != value))
				{
					if (this._TrnStockCount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSCIdChanging(value);
					this.SendPropertyChanging();
					this._SCId = value;
					this.SendPropertyChanged("SCId");
					this.OnSCIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnStockCountItem", Storage="_MstArticle", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnStockCountItems.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnStockCountItems.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockCount_TrnStockCountItem", Storage="_TrnStockCount", ThisKey="SCId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnStockCount TrnStockCount
		{
			get
			{
				return this._TrnStockCount.Entity;
			}
			set
			{
				TrnStockCount previousValue = this._TrnStockCount.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockCount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockCount.Entity = null;
						previousValue.TrnStockCountItems.Remove(this);
					}
					this._TrnStockCount.Entity = value;
					if ((value != null))
					{
						value.TrnStockCountItems.Add(this);
						this._SCId = value.Id;
					}
					else
					{
						this._SCId = default(int);
					}
					this.SendPropertyChanged("TrnStockCount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStockIn")]
	public partial class TrnStockIn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BranchId;
		
		private string _INNumber;
		
		private System.DateTime _INDate;
		
		private int _AccountId;
		
		private int _ArticleId;
		
		private string _Particulars;
		
		private string _ManualINNumber;
		
		private bool _IsProduced;
		
		private int _PreparedById;
		
		private int _CheckedById;
		
		private int _ApprovedById;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnInventory> _TrnInventories;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntitySet<TrnStockInItem> _TrnStockInItems;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstBranch> _MstBranch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnINNumberChanging(string value);
    partial void OnINNumberChanged();
    partial void OnINDateChanging(System.DateTime value);
    partial void OnINDateChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnArticleIdChanging(int value);
    partial void OnArticleIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnManualINNumberChanging(string value);
    partial void OnManualINNumberChanged();
    partial void OnIsProducedChanging(bool value);
    partial void OnIsProducedChanged();
    partial void OnPreparedByIdChanging(int value);
    partial void OnPreparedByIdChanged();
    partial void OnCheckedByIdChanging(int value);
    partial void OnCheckedByIdChanged();
    partial void OnApprovedByIdChanging(int value);
    partial void OnApprovedByIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnStockIn()
		{
			this._TrnInventories = new EntitySet<TrnInventory>(new Action<TrnInventory>(this.attach_TrnInventories), new Action<TrnInventory>(this.detach_TrnInventories));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._TrnStockInItems = new EntitySet<TrnStockInItem>(new Action<TrnStockInItem>(this.attach_TrnStockInItems), new Action<TrnStockInItem>(this.detach_TrnStockInItems));
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string INNumber
		{
			get
			{
				return this._INNumber;
			}
			set
			{
				if ((this._INNumber != value))
				{
					this.OnINNumberChanging(value);
					this.SendPropertyChanging();
					this._INNumber = value;
					this.SendPropertyChanged("INNumber");
					this.OnINNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INDate", DbType="DateTime NOT NULL")]
		public System.DateTime INDate
		{
			get
			{
				return this._INDate;
			}
			set
			{
				if ((this._INDate != value))
				{
					this.OnINDateChanging(value);
					this.SendPropertyChanging();
					this._INDate = value;
					this.SendPropertyChanged("INDate");
					this.OnINDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="Int NOT NULL")]
		public int ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualINNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ManualINNumber
		{
			get
			{
				return this._ManualINNumber;
			}
			set
			{
				if ((this._ManualINNumber != value))
				{
					this.OnManualINNumberChanging(value);
					this.SendPropertyChanging();
					this._ManualINNumber = value;
					this.SendPropertyChanged("ManualINNumber");
					this.OnManualINNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProduced", DbType="Bit NOT NULL")]
		public bool IsProduced
		{
			get
			{
				return this._IsProduced;
			}
			set
			{
				if ((this._IsProduced != value))
				{
					this.OnIsProducedChanging(value);
					this.SendPropertyChanging();
					this._IsProduced = value;
					this.SendPropertyChanged("IsProduced");
					this.OnIsProducedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedById", DbType="Int NOT NULL")]
		public int PreparedById
		{
			get
			{
				return this._PreparedById;
			}
			set
			{
				if ((this._PreparedById != value))
				{
					this.OnPreparedByIdChanging(value);
					this.SendPropertyChanging();
					this._PreparedById = value;
					this.SendPropertyChanged("PreparedById");
					this.OnPreparedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedById", DbType="Int NOT NULL")]
		public int CheckedById
		{
			get
			{
				return this._CheckedById;
			}
			set
			{
				if ((this._CheckedById != value))
				{
					this.OnCheckedByIdChanging(value);
					this.SendPropertyChanging();
					this._CheckedById = value;
					this.SendPropertyChanged("CheckedById");
					this.OnCheckedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedById", DbType="Int NOT NULL")]
		public int ApprovedById
		{
			get
			{
				return this._ApprovedById;
			}
			set
			{
				if ((this._ApprovedById != value))
				{
					this.OnApprovedByIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedById = value;
					this.SendPropertyChanged("ApprovedById");
					this.OnApprovedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockIn_TrnInventory", Storage="_TrnInventories", ThisKey="Id", OtherKey="INId")]
		public EntitySet<TrnInventory> TrnInventories
		{
			get
			{
				return this._TrnInventories;
			}
			set
			{
				this._TrnInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockIn_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="INId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockIn_TrnStockInItem", Storage="_TrnStockInItems", ThisKey="Id", OtherKey="INId")]
		public EntitySet<TrnStockInItem> TrnStockInItems
		{
			get
			{
				return this._TrnStockInItems;
			}
			set
			{
				this._TrnStockInItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnStockIn", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.TrnStockIns.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.TrnStockIns.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnStockIn", Storage="_MstArticle", ThisKey="ArticleId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnStockIns.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnStockIns.Add(this);
						this._ArticleId = value.Id;
					}
					else
					{
						this._ArticleId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnStockIn", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnStockIns.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnStockIns.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockIn = this;
		}
		
		private void detach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockIn = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockIn = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockIn = null;
		}
		
		private void attach_TrnStockInItems(TrnStockInItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockIn = this;
		}
		
		private void detach_TrnStockInItems(TrnStockInItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockIn = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStockInItem")]
	public partial class TrnStockInItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _INId;
		
		private int _ItemId;
		
		private string _Particulars;
		
		private int _UnitId;
		
		private decimal _Quantity;
		
		private decimal _Cost;
		
		private decimal _Amount;
		
		private int _BaseUnitId;
		
		private decimal _BaseQuantity;
		
		private decimal _BaseCost;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstUnit> _MstUnit;
		
		private EntityRef<MstUnit> _MstUnit1;
		
		private EntityRef<TrnStockIn> _TrnStockIn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnINIdChanging(int value);
    partial void OnINIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnBaseUnitIdChanging(int value);
    partial void OnBaseUnitIdChanged();
    partial void OnBaseQuantityChanging(decimal value);
    partial void OnBaseQuantityChanged();
    partial void OnBaseCostChanging(decimal value);
    partial void OnBaseCostChanged();
    #endregion
		
		public TrnStockInItem()
		{
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstUnit = default(EntityRef<MstUnit>);
			this._MstUnit1 = default(EntityRef<MstUnit>);
			this._TrnStockIn = default(EntityRef<TrnStockIn>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INId", DbType="Int NOT NULL")]
		public int INId
		{
			get
			{
				return this._INId;
			}
			set
			{
				if ((this._INId != value))
				{
					if (this._TrnStockIn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnINIdChanging(value);
					this.SendPropertyChanging();
					this._INId = value;
					this.SendPropertyChanged("INId");
					this.OnINIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseUnitId", DbType="Int NOT NULL")]
		public int BaseUnitId
		{
			get
			{
				return this._BaseUnitId;
			}
			set
			{
				if ((this._BaseUnitId != value))
				{
					if (this._MstUnit1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBaseUnitIdChanging(value);
					this.SendPropertyChanging();
					this._BaseUnitId = value;
					this.SendPropertyChanged("BaseUnitId");
					this.OnBaseUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseQuantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal BaseQuantity
		{
			get
			{
				return this._BaseQuantity;
			}
			set
			{
				if ((this._BaseQuantity != value))
				{
					this.OnBaseQuantityChanging(value);
					this.SendPropertyChanging();
					this._BaseQuantity = value;
					this.SendPropertyChanged("BaseQuantity");
					this.OnBaseQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseCost", DbType="Decimal(18,5) NOT NULL")]
		public decimal BaseCost
		{
			get
			{
				return this._BaseCost;
			}
			set
			{
				if ((this._BaseCost != value))
				{
					this.OnBaseCostChanging(value);
					this.SendPropertyChanging();
					this._BaseCost = value;
					this.SendPropertyChanged("BaseCost");
					this.OnBaseCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnStockInItem", Storage="_MstArticle", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnStockInItems.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnStockInItems.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockInItem", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.TrnStockInItems.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.TrnStockInItems.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockInItem1", Storage="_MstUnit1", ThisKey="BaseUnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit1
		{
			get
			{
				return this._MstUnit1.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit1.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit1.Entity = null;
						previousValue.TrnStockInItems1.Remove(this);
					}
					this._MstUnit1.Entity = value;
					if ((value != null))
					{
						value.TrnStockInItems1.Add(this);
						this._BaseUnitId = value.Id;
					}
					else
					{
						this._BaseUnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockIn_TrnStockInItem", Storage="_TrnStockIn", ThisKey="INId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnStockIn TrnStockIn
		{
			get
			{
				return this._TrnStockIn.Entity;
			}
			set
			{
				TrnStockIn previousValue = this._TrnStockIn.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockIn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockIn.Entity = null;
						previousValue.TrnStockInItems.Remove(this);
					}
					this._TrnStockIn.Entity = value;
					if ((value != null))
					{
						value.TrnStockInItems.Add(this);
						this._INId = value.Id;
					}
					else
					{
						this._INId = default(int);
					}
					this.SendPropertyChanged("TrnStockIn");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStockOut")]
	public partial class TrnStockOut : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BranchId;
		
		private string _OTNumber;
		
		private System.DateTime _OTDate;
		
		private int _AccountId;
		
		private int _ArticleId;
		
		private string _Particulars;
		
		private string _ManualOTNumber;
		
		private int _PreparedById;
		
		private int _CheckedById;
		
		private int _ApprovedById;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnInventory> _TrnInventories;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntitySet<TrnStockOutItem> _TrnStockOutItems;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstBranch> _MstBranch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnOTNumberChanging(string value);
    partial void OnOTNumberChanged();
    partial void OnOTDateChanging(System.DateTime value);
    partial void OnOTDateChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnArticleIdChanging(int value);
    partial void OnArticleIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnManualOTNumberChanging(string value);
    partial void OnManualOTNumberChanged();
    partial void OnPreparedByIdChanging(int value);
    partial void OnPreparedByIdChanged();
    partial void OnCheckedByIdChanging(int value);
    partial void OnCheckedByIdChanged();
    partial void OnApprovedByIdChanging(int value);
    partial void OnApprovedByIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnStockOut()
		{
			this._TrnInventories = new EntitySet<TrnInventory>(new Action<TrnInventory>(this.attach_TrnInventories), new Action<TrnInventory>(this.detach_TrnInventories));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._TrnStockOutItems = new EntitySet<TrnStockOutItem>(new Action<TrnStockOutItem>(this.attach_TrnStockOutItems), new Action<TrnStockOutItem>(this.detach_TrnStockOutItems));
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OTNumber
		{
			get
			{
				return this._OTNumber;
			}
			set
			{
				if ((this._OTNumber != value))
				{
					this.OnOTNumberChanging(value);
					this.SendPropertyChanging();
					this._OTNumber = value;
					this.SendPropertyChanged("OTNumber");
					this.OnOTNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTDate", DbType="DateTime NOT NULL")]
		public System.DateTime OTDate
		{
			get
			{
				return this._OTDate;
			}
			set
			{
				if ((this._OTDate != value))
				{
					this.OnOTDateChanging(value);
					this.SendPropertyChanging();
					this._OTDate = value;
					this.SendPropertyChanged("OTDate");
					this.OnOTDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="Int NOT NULL")]
		public int ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualOTNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ManualOTNumber
		{
			get
			{
				return this._ManualOTNumber;
			}
			set
			{
				if ((this._ManualOTNumber != value))
				{
					this.OnManualOTNumberChanging(value);
					this.SendPropertyChanging();
					this._ManualOTNumber = value;
					this.SendPropertyChanged("ManualOTNumber");
					this.OnManualOTNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedById", DbType="Int NOT NULL")]
		public int PreparedById
		{
			get
			{
				return this._PreparedById;
			}
			set
			{
				if ((this._PreparedById != value))
				{
					this.OnPreparedByIdChanging(value);
					this.SendPropertyChanging();
					this._PreparedById = value;
					this.SendPropertyChanged("PreparedById");
					this.OnPreparedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedById", DbType="Int NOT NULL")]
		public int CheckedById
		{
			get
			{
				return this._CheckedById;
			}
			set
			{
				if ((this._CheckedById != value))
				{
					this.OnCheckedByIdChanging(value);
					this.SendPropertyChanging();
					this._CheckedById = value;
					this.SendPropertyChanged("CheckedById");
					this.OnCheckedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedById", DbType="Int NOT NULL")]
		public int ApprovedById
		{
			get
			{
				return this._ApprovedById;
			}
			set
			{
				if ((this._ApprovedById != value))
				{
					this.OnApprovedByIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedById = value;
					this.SendPropertyChanged("ApprovedById");
					this.OnApprovedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockOut_TrnInventory", Storage="_TrnInventories", ThisKey="Id", OtherKey="OTId")]
		public EntitySet<TrnInventory> TrnInventories
		{
			get
			{
				return this._TrnInventories;
			}
			set
			{
				this._TrnInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockOut_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="OTId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockOut_TrnStockOutItem", Storage="_TrnStockOutItems", ThisKey="Id", OtherKey="OTId")]
		public EntitySet<TrnStockOutItem> TrnStockOutItems
		{
			get
			{
				return this._TrnStockOutItems;
			}
			set
			{
				this._TrnStockOutItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnStockOut", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.TrnStockOuts.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.TrnStockOuts.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnStockOut", Storage="_MstArticle", ThisKey="ArticleId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnStockOuts.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnStockOuts.Add(this);
						this._ArticleId = value.Id;
					}
					else
					{
						this._ArticleId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnStockOut", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnStockOuts.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnStockOuts.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockOut = this;
		}
		
		private void detach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockOut = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockOut = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockOut = null;
		}
		
		private void attach_TrnStockOutItems(TrnStockOutItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockOut = this;
		}
		
		private void detach_TrnStockOutItems(TrnStockOutItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockOut = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStockOutItem")]
	public partial class TrnStockOutItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _OTId;
		
		private int _ExpenseAccountId;
		
		private int _ItemId;
		
		private int _ItemInventoryId;
		
		private string _Particulars;
		
		private int _UnitId;
		
		private decimal _Quantity;
		
		private decimal _Cost;
		
		private decimal _Amount;
		
		private int _BaseUnitId;
		
		private decimal _BaseQuantity;
		
		private decimal _BaseCost;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstArticleInventory> _MstArticleInventory;
		
		private EntityRef<MstUnit> _MstUnit;
		
		private EntityRef<MstUnit> _MstUnit1;
		
		private EntityRef<TrnStockOut> _TrnStockOut;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOTIdChanging(int value);
    partial void OnOTIdChanged();
    partial void OnExpenseAccountIdChanging(int value);
    partial void OnExpenseAccountIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnItemInventoryIdChanging(int value);
    partial void OnItemInventoryIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnBaseUnitIdChanging(int value);
    partial void OnBaseUnitIdChanged();
    partial void OnBaseQuantityChanging(decimal value);
    partial void OnBaseQuantityChanged();
    partial void OnBaseCostChanging(decimal value);
    partial void OnBaseCostChanged();
    #endregion
		
		public TrnStockOutItem()
		{
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstArticleInventory = default(EntityRef<MstArticleInventory>);
			this._MstUnit = default(EntityRef<MstUnit>);
			this._MstUnit1 = default(EntityRef<MstUnit>);
			this._TrnStockOut = default(EntityRef<TrnStockOut>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTId", DbType="Int NOT NULL")]
		public int OTId
		{
			get
			{
				return this._OTId;
			}
			set
			{
				if ((this._OTId != value))
				{
					if (this._TrnStockOut.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOTIdChanging(value);
					this.SendPropertyChanging();
					this._OTId = value;
					this.SendPropertyChanged("OTId");
					this.OnOTIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenseAccountId", DbType="Int NOT NULL")]
		public int ExpenseAccountId
		{
			get
			{
				return this._ExpenseAccountId;
			}
			set
			{
				if ((this._ExpenseAccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExpenseAccountIdChanging(value);
					this.SendPropertyChanging();
					this._ExpenseAccountId = value;
					this.SendPropertyChanged("ExpenseAccountId");
					this.OnExpenseAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemInventoryId", DbType="Int NOT NULL")]
		public int ItemInventoryId
		{
			get
			{
				return this._ItemInventoryId;
			}
			set
			{
				if ((this._ItemInventoryId != value))
				{
					if (this._MstArticleInventory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemInventoryIdChanging(value);
					this.SendPropertyChanging();
					this._ItemInventoryId = value;
					this.SendPropertyChanged("ItemInventoryId");
					this.OnItemInventoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseUnitId", DbType="Int NOT NULL")]
		public int BaseUnitId
		{
			get
			{
				return this._BaseUnitId;
			}
			set
			{
				if ((this._BaseUnitId != value))
				{
					if (this._MstUnit1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBaseUnitIdChanging(value);
					this.SendPropertyChanging();
					this._BaseUnitId = value;
					this.SendPropertyChanged("BaseUnitId");
					this.OnBaseUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseQuantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal BaseQuantity
		{
			get
			{
				return this._BaseQuantity;
			}
			set
			{
				if ((this._BaseQuantity != value))
				{
					this.OnBaseQuantityChanging(value);
					this.SendPropertyChanging();
					this._BaseQuantity = value;
					this.SendPropertyChanged("BaseQuantity");
					this.OnBaseQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseCost", DbType="Decimal(18,5) NOT NULL")]
		public decimal BaseCost
		{
			get
			{
				return this._BaseCost;
			}
			set
			{
				if ((this._BaseCost != value))
				{
					this.OnBaseCostChanging(value);
					this.SendPropertyChanging();
					this._BaseCost = value;
					this.SendPropertyChanged("BaseCost");
					this.OnBaseCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_TrnStockOutItem", Storage="_MstAccount", ThisKey="ExpenseAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.TrnStockOutItems.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.TrnStockOutItems.Add(this);
						this._ExpenseAccountId = value.Id;
					}
					else
					{
						this._ExpenseAccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnStockOutItem", Storage="_MstArticle", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnStockOutItems.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnStockOutItems.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleInventory_TrnStockOutItem", Storage="_MstArticleInventory", ThisKey="ItemInventoryId", OtherKey="Id", IsForeignKey=true)]
		public MstArticleInventory MstArticleInventory
		{
			get
			{
				return this._MstArticleInventory.Entity;
			}
			set
			{
				MstArticleInventory previousValue = this._MstArticleInventory.Entity;
				if (((previousValue != value) 
							|| (this._MstArticleInventory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticleInventory.Entity = null;
						previousValue.TrnStockOutItems.Remove(this);
					}
					this._MstArticleInventory.Entity = value;
					if ((value != null))
					{
						value.TrnStockOutItems.Add(this);
						this._ItemInventoryId = value.Id;
					}
					else
					{
						this._ItemInventoryId = default(int);
					}
					this.SendPropertyChanged("MstArticleInventory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockOutItem", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.TrnStockOutItems.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.TrnStockOutItems.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_TrnStockOutItem1", Storage="_MstUnit1", ThisKey="BaseUnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit1
		{
			get
			{
				return this._MstUnit1.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit1.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit1.Entity = null;
						previousValue.TrnStockOutItems1.Remove(this);
					}
					this._MstUnit1.Entity = value;
					if ((value != null))
					{
						value.TrnStockOutItems1.Add(this);
						this._BaseUnitId = value.Id;
					}
					else
					{
						this._BaseUnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockOut_TrnStockOutItem", Storage="_TrnStockOut", ThisKey="OTId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TrnStockOut TrnStockOut
		{
			get
			{
				return this._TrnStockOut.Entity;
			}
			set
			{
				TrnStockOut previousValue = this._TrnStockOut.Entity;
				if (((previousValue != value) 
							|| (this._TrnStockOut.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnStockOut.Entity = null;
						previousValue.TrnStockOutItems.Remove(this);
					}
					this._TrnStockOut.Entity = value;
					if ((value != null))
					{
						value.TrnStockOutItems.Add(this);
						this._OTId = value.Id;
					}
					else
					{
						this._OTId = default(int);
					}
					this.SendPropertyChanged("TrnStockOut");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnStockTransfer")]
	public partial class TrnStockTransfer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BranchId;
		
		private string _STNumber;
		
		private System.DateTime _STDate;
		
		private int _ToBranchId;
		
		private string _Particulars;
		
		private string _ManualSTNumber;
		
		private int _PreparedById;
		
		private int _CheckedById;
		
		private int _ApprovedById;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnStockTransferItem> _TrnStockTransferItems;
		
		private EntitySet<TrnInventory> _TrnInventories;
		
		private EntitySet<TrnJournal> _TrnJournals;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstBranch> _MstBranch1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnSTNumberChanging(string value);
    partial void OnSTNumberChanged();
    partial void OnSTDateChanging(System.DateTime value);
    partial void OnSTDateChanged();
    partial void OnToBranchIdChanging(int value);
    partial void OnToBranchIdChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnManualSTNumberChanging(string value);
    partial void OnManualSTNumberChanged();
    partial void OnPreparedByIdChanging(int value);
    partial void OnPreparedByIdChanged();
    partial void OnCheckedByIdChanging(int value);
    partial void OnCheckedByIdChanged();
    partial void OnApprovedByIdChanging(int value);
    partial void OnApprovedByIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnStockTransfer()
		{
			this._TrnStockTransferItems = new EntitySet<TrnStockTransferItem>(new Action<TrnStockTransferItem>(this.attach_TrnStockTransferItems), new Action<TrnStockTransferItem>(this.detach_TrnStockTransferItems));
			this._TrnInventories = new EntitySet<TrnInventory>(new Action<TrnInventory>(this.attach_TrnInventories), new Action<TrnInventory>(this.detach_TrnInventories));
			this._TrnJournals = new EntitySet<TrnJournal>(new Action<TrnJournal>(this.attach_TrnJournals), new Action<TrnJournal>(this.detach_TrnJournals));
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstBranch1 = default(EntityRef<MstBranch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string STNumber
		{
			get
			{
				return this._STNumber;
			}
			set
			{
				if ((this._STNumber != value))
				{
					this.OnSTNumberChanging(value);
					this.SendPropertyChanging();
					this._STNumber = value;
					this.SendPropertyChanged("STNumber");
					this.OnSTNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STDate", DbType="DateTime NOT NULL")]
		public System.DateTime STDate
		{
			get
			{
				return this._STDate;
			}
			set
			{
				if ((this._STDate != value))
				{
					this.OnSTDateChanging(value);
					this.SendPropertyChanging();
					this._STDate = value;
					this.SendPropertyChanged("STDate");
					this.OnSTDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToBranchId", DbType="Int NOT NULL")]
		public int ToBranchId
		{
			get
			{
				return this._ToBranchId;
			}
			set
			{
				if ((this._ToBranchId != value))
				{
					if (this._MstBranch1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToBranchIdChanging(value);
					this.SendPropertyChanging();
					this._ToBranchId = value;
					this.SendPropertyChanged("ToBranchId");
					this.OnToBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualSTNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ManualSTNumber
		{
			get
			{
				return this._ManualSTNumber;
			}
			set
			{
				if ((this._ManualSTNumber != value))
				{
					this.OnManualSTNumberChanging(value);
					this.SendPropertyChanging();
					this._ManualSTNumber = value;
					this.SendPropertyChanged("ManualSTNumber");
					this.OnManualSTNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedById", DbType="Int NOT NULL")]
		public int PreparedById
		{
			get
			{
				return this._PreparedById;
			}
			set
			{
				if ((this._PreparedById != value))
				{
					this.OnPreparedByIdChanging(value);
					this.SendPropertyChanging();
					this._PreparedById = value;
					this.SendPropertyChanged("PreparedById");
					this.OnPreparedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedById", DbType="Int NOT NULL")]
		public int CheckedById
		{
			get
			{
				return this._CheckedById;
			}
			set
			{
				if ((this._CheckedById != value))
				{
					this.OnCheckedByIdChanging(value);
					this.SendPropertyChanging();
					this._CheckedById = value;
					this.SendPropertyChanged("CheckedById");
					this.OnCheckedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedById", DbType="Int NOT NULL")]
		public int ApprovedById
		{
			get
			{
				return this._ApprovedById;
			}
			set
			{
				if ((this._ApprovedById != value))
				{
					this.OnApprovedByIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedById = value;
					this.SendPropertyChanged("ApprovedById");
					this.OnApprovedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockTransfer_TrnStockTransferItem", Storage="_TrnStockTransferItems", ThisKey="Id", OtherKey="STId")]
		public EntitySet<TrnStockTransferItem> TrnStockTransferItems
		{
			get
			{
				return this._TrnStockTransferItems;
			}
			set
			{
				this._TrnStockTransferItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockTransfer_TrnInventory", Storage="_TrnInventories", ThisKey="Id", OtherKey="STId")]
		public EntitySet<TrnInventory> TrnInventories
		{
			get
			{
				return this._TrnInventories;
			}
			set
			{
				this._TrnInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnStockTransfer_TrnJournal", Storage="_TrnJournals", ThisKey="Id", OtherKey="STId")]
		public EntitySet<TrnJournal> TrnJournals
		{
			get
			{
				return this._TrnJournals;
			}
			set
			{
				this._TrnJournals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnStockTransfer", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnStockTransfers.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransfers.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnStockTransfer1", Storage="_MstBranch1", ThisKey="ToBranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch1
		{
			get
			{
				return this._MstBranch1.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch1.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch1.Entity = null;
						previousValue.TrnStockTransfers1.Remove(this);
					}
					this._MstBranch1.Entity = value;
					if ((value != null))
					{
						value.TrnStockTransfers1.Add(this);
						this._ToBranchId = value.Id;
					}
					else
					{
						this._ToBranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnStockTransferItems(TrnStockTransferItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockTransfer = this;
		}
		
		private void detach_TrnStockTransferItems(TrnStockTransferItem entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockTransfer = null;
		}
		
		private void attach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockTransfer = this;
		}
		
		private void detach_TrnInventories(TrnInventory entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockTransfer = null;
		}
		
		private void attach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockTransfer = this;
		}
		
		private void detach_TrnJournals(TrnJournal entity)
		{
			this.SendPropertyChanging();
			entity.TrnStockTransfer = null;
		}
	}
}
#pragma warning restore 1591
